<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>PeopleSoft-PS系统布置HTML页面</title>
      <link href="2020/12/29/PeopleSoft-PS%E7%B3%BB%E7%BB%9F%E5%B8%83%E7%BD%AEHTML%E9%A1%B5%E9%9D%A2/"/>
      <url>2020/12/29/PeopleSoft-PS%E7%B3%BB%E7%BB%9F%E5%B8%83%E7%BD%AEHTML%E9%A1%B5%E9%9D%A2/</url>
      
        <content type="html"><![CDATA[<h3 id="先创建HTML页面"><a href="#先创建HTML页面" class="headerlink" title="先创建HTML页面"></a>先创建HTML页面</h3><img src="https://gitee.com/gek7777/cdn.io/raw/master/image/20201229174923.png"/><h3 id="在WEBLIB-CEP-表上的字段编写动态获取HTML页面的代码"><a href="#在WEBLIB-CEP-表上的字段编写动态获取HTML页面的代码" class="headerlink" title="在WEBLIB_CEP 表上的字段编写动态获取HTML页面的代码"></a>在WEBLIB_CEP 表上的字段编写动态获取HTML页面的代码</h3><img src="https://gitee.com/gek7777/cdn.io/raw/master/image/20201229174955.png"/><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> SH_ITF:XmindDataFile;</span><br><span class="line"><span class="keyword">import</span> C_EP_COMM_PKG:COMMON;</span><br><span class="line"><span class="keyword">import</span> C_EP_COMM_PKG:C_EP_ACTION;</span><br><span class="line"></span><br><span class="line">&lt;***********************************************&gt;</span><br><span class="line"></span><br><span class="line">rem 绩效文件详细-参评人评分详细;</span><br><span class="line">Function Iscript_EpSelfView</span><br><span class="line">   </span><br><span class="line">   Local string &amp;strHtml;</span><br><span class="line">   Local string &amp;strEMPLID = %Request.GetParameter(<span class="string">&quot;EMPLID&quot;</span>);</span><br><span class="line">   rem &amp;strHtml = GetHTMLText(HTML.C_EP_LIST_HTML4);</span><br><span class="line">   <span class="function">If <span class="title">None</span><span class="params">(&amp;strEMPLID)</span> Then</span></span><br><span class="line"><span class="function">      &amp;strEMPLID </span>= %EmployeeId;</span><br><span class="line">   End-If;</span><br><span class="line">   <span class="function">If <span class="title">All</span><span class="params">(&amp;strEMPLID)</span> Then</span></span><br><span class="line"><span class="function">      &amp;strHtml </span>= GetHTMLText(HTML.C_EP_LIST_WDJX_HTML);</span><br><span class="line">   End-If;</span><br><span class="line">   %Response.Write(&amp;strHtml);</span><br><span class="line">   </span><br><span class="line">End-Function;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">rem 获取绩效文件列表-查看历史(按年度查询);</span><br><span class="line"></span><br><span class="line">Function Iscript_EpListDataCklsByYears</span><br><span class="line">   Local string &amp;strHtml;</span><br><span class="line">   <span class="comment">/*====================获取参数 begin==================================*/</span></span><br><span class="line">   rem 用户;</span><br><span class="line">   Local string &amp;strEMPLID = %Request.GetParameter(<span class="string">&quot;EMPLID&quot;</span>);</span><br><span class="line">   rem 年度;</span><br><span class="line">   Local string &amp;strYEARS = %Request.GetParameter(<span class="string">&quot;YEARS&quot;</span>);</span><br><span class="line">   rem 期间ID;</span><br><span class="line">   Local string &amp;strCAL_PRD_ID = %Request.GetParameter(<span class="string">&quot;CAL_PRD_ID&quot;</span>);</span><br><span class="line">   rem 文档步骤;</span><br><span class="line">   Local string &amp;strC_EP_DOC_STEP = %Request.GetParameter(<span class="string">&quot;C_EP_DOC_STEP&quot;</span>);</span><br><span class="line">   rem 考核组;</span><br><span class="line">   Local string &amp;strGB_GROUP_ID = %Request.GetParameter(<span class="string">&quot;GB_GROUP_ID&quot;</span>);</span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">   <span class="function">If <span class="title">None</span><span class="params">(&amp;strEMPLID)</span> Then</span></span><br><span class="line"><span class="function">      &amp;strEMPLID </span>= %EmployeeId;</span><br><span class="line">   End-If;</span><br><span class="line">   </span><br><span class="line">   rem Error <span class="string">&quot;==&quot;</span> | &amp;strEMPLID | <span class="string">&quot;==&quot;</span> | &amp;strCAL_PRD_ID | <span class="string">&quot;==&quot;</span> | &amp;strC_EP_DOC_STEP | <span class="string">&quot;==&quot;</span> | &amp;strGB_GROUP_ID;</span><br><span class="line">   <span class="comment">/*====================获取参数 end==================================*/</span></span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">   <span class="comment">/*====================获取数据 begin==================================*/</span></span><br><span class="line">   Local Rowset &amp;rsC_IFC_DOC_LS_VW1 = CreateRowset(Record.C_IFC_DOC_LS_VW);</span><br><span class="line">   Local string &amp;strSQLwhere = <span class="string">&quot; &quot;</span>;</span><br><span class="line">   </span><br><span class="line">   <span class="function">If <span class="title">None</span><span class="params">(&amp;strYEARS)</span> Then</span></span><br><span class="line"><span class="function">      &amp;strSQLwhere </span>= &amp;strSQLwhere | <span class="string">&quot; WHERE 1 = 1 &quot;</span>;</span><br><span class="line">   Else</span><br><span class="line">      &amp;strYEARS = &amp;strYEARS | <span class="string">&quot;%&quot;</span>;</span><br><span class="line">      &amp;strSQLwhere = &amp;strSQLwhere | <span class="string">&quot; WHERE FILL.CAL_PRD_ID LIKE :1&quot;</span>;</span><br><span class="line">   End-If;</span><br><span class="line">   &amp;strSQLwhere = &amp;strSQLwhere | <span class="string">&quot;   AND FILL.CAL_PRD_ID = DECODE(:2, &#x27; &#x27;, FILL.CAL_PRD_ID, :2)&quot;</span>;</span><br><span class="line">   &amp;strSQLwhere = &amp;strSQLwhere | <span class="string">&quot;   AND FILL.C_EP_DOC_STEP = DECODE(:3, &#x27; &#x27;, FILL.C_EP_DOC_STEP, :3)&quot;</span>;</span><br><span class="line">   &amp;strSQLwhere = &amp;strSQLwhere | <span class="string">&quot;   AND FILL.GB_GROUP_ID = DECODE(:4, &#x27; &#x27;, FILL.GB_GROUP_ID, :4)&quot;</span>;</span><br><span class="line">   &amp;strSQLwhere = &amp;strSQLwhere | <span class="string">&quot;   AND FILL.EMPLID = DECODE(:5, &#x27; &#x27;, FILL.EMPLID, :5) ORDER BY FILL.CAL_PRD_ID&quot;</span>;</span><br><span class="line">   &amp;rsC_IFC_DOC_LS_VW1.Fill(&amp;strSQLwhere, &amp;strYEARS, &amp;strCAL_PRD_ID, &amp;strC_EP_DOC_STEP, &amp;strGB_GROUP_ID, &amp;strEMPLID);</span><br><span class="line">   </span><br><span class="line">   Local number &amp;t;</span><br><span class="line">   rem 删除空行;</span><br><span class="line">   For &amp;t = &amp;rsC_IFC_DOC_LS_VW1.ActiveRowCount To <span class="number">1</span> Step - <span class="number">1</span></span><br><span class="line">      If &amp;rsC_IFC_DOC_LS_VW1.GetRow(&amp;t).GetRecord(Record.C_IFC_DOC_LS_VW).C_EP_DOC_ID.Value &lt;= <span class="number">0</span> Then</span><br><span class="line">         &amp;rsC_IFC_DOC_LS_VW1.DeleteRow(&amp;t);</span><br><span class="line">      End-If;</span><br><span class="line">   End-For;</span><br><span class="line">   <span class="comment">/*====================获取数据 end==================================*/</span></span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">   <span class="comment">/*====================拼接JOSN串 begin==================================*/</span></span><br><span class="line">   Local C_EP_COMM_PKG:COMMON &amp;ApkEpComm = create C_EP_COMM_PKG:COMMON();</span><br><span class="line">   Local string &amp;strRetHtml = &amp;ApkEpComm.TableDataToJosnString(&amp;rsC_IFC_DOC_LS_VW1, <span class="string">&quot;Iscript_EpListDataSjpf&quot;</span>, <span class="string">&quot;C_IFC_DOC_LS_VW&quot;</span>);</span><br><span class="line">   </span><br><span class="line">   <span class="comment">/*====================拼接JOSN串 end==================================*/</span></span><br><span class="line">   rem &amp;strHtml = GetHTMLText(HTML.C_EP_LIST_HTML);</span><br><span class="line">   </span><br><span class="line">   %Response.Write(&amp;strRetHtml);</span><br><span class="line">   </span><br><span class="line">End-Function;</span><br><span class="line"></span><br><span class="line">&lt;***********************************************&gt;</span><br><span class="line"></span><br><span class="line">rem 获取期间列表(按年度查询);</span><br><span class="line">Function Iscript_GetCalPrdIdYears</span><br><span class="line">   Local string &amp;strRetHtml;</span><br><span class="line">   Local Rowset &amp;rsC_IFC_PRD_Y_VW = CreateRowset(Record.C_IFC_PRD_Y_VW);</span><br><span class="line">   &amp;rsC_IFC_PRD_Y_VW.Fill(<span class="string">&quot; where 1 = 1 &quot;</span>);</span><br><span class="line">   </span><br><span class="line">   <span class="comment">/*====================拼接JOSN串 begin==================================*/</span></span><br><span class="line">   Local C_EP_COMM_PKG:COMMON &amp;ApkEpComm = create C_EP_COMM_PKG:COMMON();</span><br><span class="line">   &amp;strRetHtml = &amp;ApkEpComm.TableDataToJosnString(&amp;rsC_IFC_PRD_Y_VW, <span class="string">&quot;GetCalPrdIdYears&quot;</span>, <span class="string">&quot;C_IFC_PRD_Y_VW&quot;</span>);</span><br><span class="line">   </span><br><span class="line">   <span class="comment">/*====================拼接JOSN串 end==================================*/</span></span><br><span class="line">   </span><br><span class="line">   %Response.Write(&amp;strRetHtml);</span><br><span class="line">End-Function;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PeopleSoft </tag>
            
            <tag> PeopleCode </tag>
            
            <tag> HTML </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PeopleSoft-通用的日志表</title>
      <link href="2020/12/26/PeopleSoft-%E9%80%9A%E7%94%A8%E7%9A%84%E6%97%A5%E5%BF%97%E8%A1%A8/"/>
      <url>2020/12/26/PeopleSoft-%E9%80%9A%E7%94%A8%E7%9A%84%E6%97%A5%E5%BF%97%E8%A1%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>​        日志采用新增模式记录，不做更新、删除操作，保留所有操作记录具有可溯源性。同时，为了方便使用，封装一个方法记录日志，在需要记录日志处调用该方法，传入需要的参数即可进行日志记录。所以，需要在建表时，考虑到字段的通用性；在编写记录方法时，需要考虑方法的通用性。</p><h2 id="表结构"><a href="#表结构" class="headerlink" title="表结构"></a>表结构</h2><h3 id="字段："><a href="#字段：" class="headerlink" title="字段："></a>字段：</h3><ul><li>Log_Uuid ：String(200)  Key 日志唯一 编码；这个字段作为整张表的唯一key，采用UUID模式；</li><li>Log_TypeCode ：String(100) Key 日志类型编码；此字段用于区别不同日志记录，例如是用人需求申请接口日志，还是转正申请接口日志等；</li><li>Log_TypeDescr：String(200) 日志类型描述；</li><li>Log_Interface_num：String(100) 针对接口类型日志的字段，主要用于记录接口的流水号；</li><li>Emplid：记录员工ID，针对接口类型日志的字段，主要用于记录请求员工或操作接口的员工ID；</li><li>Log_Status String(10)：针对接口类型日志的字段，主要用于记录接口请求返回的网络状态值，例如：200，404，500等；</li><li>Request_JsonBody ：Long 针对接口类型日志的字段，主要用于记录接口的请求JSON文本；</li><li>Response_JsonBody：Long 针对接口类型日志的字段，主要用于记录接口的返回JSON文本；</li><li>Log_Body：Long 针对普通日志记录，主要记录程序运行期间打的断点记录；</li><li>Log_String1：备用字段1，用于需要特殊记录的字段；</li><li>LastUpddttm ： DateTime 上次操作时间；时间戳，精确值最好采用精确到毫秒级别；</li><li>LastUpOprid：String(30) 操作用户；</li></ul><h2 id="通用方法"><a href="#通用方法" class="headerlink" title="通用方法"></a>通用方法</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*************************************************************/</span></span><br><span class="line"><span class="comment">/** 功能：记录客制化通用日志表                              **/</span></span><br><span class="line"><span class="comment">/** 作者       时间操作                **/</span></span><br><span class="line"><span class="comment">/** SIE_GEK      2021-1-2       新增                        **/</span></span><br><span class="line"><span class="comment">/*************************************************************/</span></span><br><span class="line"><span class="function">Function <span class="title">DoCustomerLog</span><span class="params">(&amp;uuid, &amp;typeCode, &amp;typeDescr, &amp;interfaceNum, &amp;emplid, &amp;status, &amp;requsetBody, &amp;responseBody, &amp;logBody, &amp;string1)</span> Returns string</span></span><br><span class="line"><span class="function">   Local string &amp;strReturn</span>;</span><br><span class="line">   <span class="keyword">try</span></span><br><span class="line">      Local Record &amp;recLog = CreateRecord(Record.C_CUSTOMER_LOG);</span><br><span class="line">      &amp;recLog.LOG_UUID.Value = &amp;uuid;</span><br><span class="line">      &amp;recLog.LOG_TYPECODE.Value = &amp;typeCode;</span><br><span class="line">      </span><br><span class="line">      <span class="function">If <span class="title">Not</span> <span class="params">(&amp;recLog.SelectByKey()</span>) Then</span></span><br><span class="line"><span class="function">         &amp;recLog.LOG_UUID.Value </span>= &amp;uuid;</span><br><span class="line">         &amp;recLog.LOG_TYPECODE.Value = &amp;typeCode;</span><br><span class="line">         &amp;recLog.LOG_TYPEDESCR.Value = &amp;typeDescr;</span><br><span class="line">         &amp;recLog.LOG_INTERFACE_NUM.Value = &amp;interfaceNum;</span><br><span class="line">         &amp;recLog.EMPLID.Value = &amp;emplid;</span><br><span class="line">         &amp;recLog.LOG_STATUS.Value = &amp;status;</span><br><span class="line">         &amp;recLog.REQUEST_JSONBODY.Value = &amp;requsetBody;</span><br><span class="line">         &amp;recLog.RESPONSE_JSONBODY.Value = &amp;responseBody;</span><br><span class="line">         &amp;recLog.LOG_BODY.Value = &amp;logBody;</span><br><span class="line">         &amp;recLog.LOG_STRING1.Value = &amp;string1;</span><br><span class="line">         &amp;recLog.LASTUPDDTTM.Value = %Datetime;</span><br><span class="line">         &amp;recLog.LASTUPDOPRID.Value = %OperatorId;</span><br><span class="line">         &amp;recLog.Insert();</span><br><span class="line">      End-If;</span><br><span class="line">   <span class="keyword">catch</span> Exception &amp;ex</span><br><span class="line">      &amp;strReturn = &amp;ex.ToString();</span><br><span class="line">   end-<span class="keyword">try</span>;</span><br><span class="line">   </span><br><span class="line">   Return &amp;strReturn</span><br><span class="line">End-Function;</span><br></pre></td></tr></table></figure><h2 id="调用方法"><a href="#调用方法" class="headerlink" title="调用方法"></a>调用方法</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">Declare Function DoCustomerLog PeopleCode C_CUSTOMER_LOG.LOG_UUID FieldFormula;</span><br><span class="line"></span><br><span class="line">Local string &amp;strUuid = UuidGen();</span><br><span class="line">Local string &amp;strTypeCode = <span class="string">&quot;C_INTERFACE_CODE1&quot;</span>;</span><br><span class="line">Local string &amp;strTypeDescr = <span class="string">&quot;测试接口1&quot;</span>;</span><br><span class="line">Local string &amp;strInterfaceNum = <span class="string">&quot;2021_1_2_OA_1000000001&quot;</span>;</span><br><span class="line">Local string &amp;stremplid = <span class="string">&quot;AK700075&quot;</span>;</span><br><span class="line">Local string &amp;strStatus = <span class="string">&quot;200&quot;</span>;</span><br><span class="line">Local string &amp;requestBody = <span class="string">&quot;akjhdgl;ajgl;jalkdsghl;akdsglk;alk;dghl;akhgjkfakjbnilfdjghkashdg&quot;</span>;</span><br><span class="line">Local string &amp;responseBody = <span class="string">&quot;akjhdgl;ajgl;jalk1234567898765432345yufjnfjghjfnh00000000000000000jbnilfdjghkashdg&quot;</span>;</span><br><span class="line">Local string &amp;logBody = <span class="string">&quot; &quot;</span>;</span><br><span class="line">Local string &amp;string1 = <span class="string">&quot; &quot;</span>;</span><br><span class="line"></span><br><span class="line">Local string &amp;strReturn = DoCustomerLog(&amp;strUuid, &amp;strTypeCode, &amp;strTypeDescr, &amp;strInterfaceNum, &amp;stremplid, &amp;strStatus, &amp;requestBody, &amp;responseBody, &amp;logBody, &amp;string1);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Oracle </tag>
            
            <tag> PeopleSoft </tag>
            
            <tag> Log </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PeopleSoft-服务器清理缓存</title>
      <link href="2020/12/26/PeopleSoft-%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%B8%85%E7%90%86%E7%BC%93%E5%AD%98/"/>
      <url>2020/12/26/PeopleSoft-%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%B8%85%E7%90%86%E7%BC%93%E5%AD%98/</url>
      
        <content type="html"><![CDATA[<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//首先需要授权给psadm2用户</span></span><br><span class="line">su - psadm2</span><br><span class="line"><span class="comment">//然后进入到缓存文件存放的路径</span></span><br><span class="line">cd /home/psadm2/psft/pt/<span class="number">8.57</span>/webserv/peoplesoft/applications/peoplesoft/PORTAL.war/ps/cache</span><br><span class="line"><span class="comment">//最后进行清理操作</span></span><br><span class="line">rm -rf *</span><br><span class="line"></span><br><span class="line"><span class="comment">//注意：这里的清理操作一定不要打错了，不然会把整个系统给删掉的。那就真的是删库跑路了。</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 服务器 </tag>
            
            <tag> PeopleSoft </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PeopleSoft-页面报表多条件检索功能</title>
      <link href="2020/12/22/PeopleSoft-%E9%A1%B5%E9%9D%A2%E6%8A%A5%E8%A1%A8%E5%A4%9A%E6%9D%A1%E4%BB%B6%E6%A3%80%E7%B4%A2%E5%8A%9F%E8%83%BD/"/>
      <url>2020/12/22/PeopleSoft-%E9%A1%B5%E9%9D%A2%E6%8A%A5%E8%A1%A8%E5%A4%9A%E6%9D%A1%E4%BB%B6%E6%A3%80%E7%B4%A2%E5%8A%9F%E8%83%BD/</url>
      
        <content type="html"><![CDATA[<h3 id="第一种"><a href="#第一种" class="headerlink" title="第一种"></a>第一种</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Local Rowset &amp;rs = GetRowset(Scroll.C_SAL_QRY_VW);</span><br><span class="line"></span><br><span class="line">REM 清空rowset;</span><br><span class="line">&amp;rs.Flush();</span><br><span class="line">rem 根据输入的查询条件进行查询;</span><br><span class="line">&amp;rs.Select(Record.C_SAL_QRY_VW, &amp;WHERE);</span><br><span class="line">   </span><br><span class="line">rem 排序;</span><br><span class="line">&amp;rs.Sort(C_SAL_QRY_VW.TREE_NODE_NUM, <span class="string">&quot;A&quot;</span>, C_SAL_QRY_VW.EMPLID, <span class="string">&quot;A&quot;</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="第二种"><a href="#第二种" class="headerlink" title="第二种"></a>第二种</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">ScrollFlush(Record.C_PRH_SER_VW);</span><br><span class="line"></span><br><span class="line">&amp;strWhere = <span class="string">&quot;WHERE 1 = 1 &quot;</span>;</span><br><span class="line">rem 默认出待入职的;</span><br><span class="line">&amp;strWhere = &amp;strWhere | <span class="string">&quot; AND C_PRH_STATUS = &#x27;10&#x27; &quot;</span>;</span><br><span class="line">&amp;strWhere = &amp;strWhere | <span class="string">&quot; AND OPRID = &#x27;&quot;</span> | %OperatorId | <span class="string">&quot;&#x27;&quot;</span>;</span><br><span class="line"></span><br><span class="line">ScrollSelect(<span class="number">1</span>, Record.C_PRH_SER_VW, Record.C_PRH_SER_VW, &amp;strWhere);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PeopleSoft </tag>
            
            <tag> PeopleCode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PeopleSoft-报表示例（Excel-2010）</title>
      <link href="2020/12/22/PeopleSoft-%E6%8A%A5%E8%A1%A8%E7%A4%BA%E4%BE%8B%EF%BC%88Excel-2010%EF%BC%89/"/>
      <url>2020/12/22/PeopleSoft-%E6%8A%A5%E8%A1%A8%E7%A4%BA%E4%BE%8B%EF%BC%88Excel-2010%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br></pre></td><td class="code"><pre><span class="line">Local string &amp;strCAL_PRD_ID;</span><br><span class="line">Local number &amp;iRow, &amp;iCol, &amp;i;</span><br><span class="line">Local JavaObject &amp;jExcel;</span><br><span class="line"></span><br><span class="line">REM 获取参数;</span><br><span class="line">&amp;strCAL_PRD_ID = C_CEN_SUM_AET.CAL_PRD_ID.Value;</span><br><span class="line"><span class="function">rem <span class="title">MessageBox</span><span class="params">(<span class="number">0</span>, <span class="string">&quot;&quot;</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="string">&quot;&amp;strCAL_PRD_ID==&quot;</span> | &amp;strCAL_PRD_ID)</span></span>;</span><br><span class="line"><span class="comment">//引入Java类;</span></span><br><span class="line">&amp;jExcel = CreateJavaObject(<span class="string">&quot;generateExcelPOI.WriteExcelEx_2010&quot;</span>);</span><br><span class="line"><span class="comment">//Excel 新建工作页;</span></span><br><span class="line">&amp;jExcel.newWorkBook();</span><br><span class="line"></span><br><span class="line">&amp;iRow = <span class="number">0</span>;</span><br><span class="line">&amp;iCol = <span class="number">0</span>;</span><br><span class="line">&amp;arrData = CreateArrayAny();</span><br><span class="line"></span><br><span class="line">rem 报表制表表头;</span><br><span class="line">&amp;jExcel.addTitlePropertiesCell(&amp;iRow, <span class="number">0</span>, <span class="string">&quot;报表名称&quot;</span>, <span class="string">&quot;string&quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">&amp;jExcel.addTitlePropertiesCell(&amp;iRow, <span class="number">1</span>, <span class="string">&quot;中心预算&quot;</span>, <span class="string">&quot;string&quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">&amp;iRow = &amp;iRow + <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">&amp;jExcel.addTitlePropertiesCell(&amp;iRow, <span class="number">0</span>, <span class="string">&quot;期间&quot;</span>, <span class="string">&quot;string&quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">&amp;jExcel.addTitlePropertiesCell(&amp;iRow, <span class="number">1</span>, &amp;strCAL_PRD_ID, <span class="string">&quot;string&quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">&amp;iRow = &amp;iRow + <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">&amp;jExcel.addTitlePropertiesCell(&amp;iRow, <span class="number">0</span>, <span class="string">&quot;制表人&quot;</span>, <span class="string">&quot;string&quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">SQLExec(<span class="string">&quot;SELECT NAME FROM PS_PERSONAL_DATA WHERE EMPLID = :1&quot;</span>, %EmployeeId, &amp;strRptPersonNm);</span><br><span class="line">&amp;strRptPersonNm = %OperatorId | <span class="string">&quot; &quot;</span> | &amp;strRptPersonNm;</span><br><span class="line">&amp;jExcel.addTitlePropertiesCell(&amp;iRow, <span class="number">1</span>, &amp;strRptPersonNm, <span class="string">&quot;string&quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">&amp;iRow = &amp;iRow + <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">&amp;jExcel.addTitlePropertiesCell(&amp;iRow, <span class="number">0</span>, <span class="string">&quot;制表日期&quot;</span>, <span class="string">&quot;string&quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">&amp;jExcel.addTitlePropertiesCell(&amp;iRow, <span class="number">1</span>, String(%Date), <span class="string">&quot;string&quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">&amp;iRow = &amp;iRow + <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">REM 报表数据表头;</span><br><span class="line">&amp;iRow = &amp;iRow + <span class="number">1</span>;</span><br><span class="line">&amp;iCol = <span class="number">0</span>;</span><br><span class="line">&amp;jExcel.addTitleCell(&amp;iRow, &amp;iCol, <span class="string">&quot;一级部门&quot;</span>, <span class="string">&quot;string&quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">&amp;iCol = &amp;iCol + <span class="number">1</span>;</span><br><span class="line">&amp;jExcel.addTitleCell(&amp;iRow, &amp;iCol, <span class="string">&quot;职级&quot;</span>, <span class="string">&quot;string&quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">&amp;iCol = &amp;iCol + <span class="number">1</span>;</span><br><span class="line">&amp;jExcel.addTitleCell(&amp;iRow, &amp;iCol, <span class="string">&quot;实际人数&quot;</span>, <span class="string">&quot;string&quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">&amp;iCol = &amp;iCol + <span class="number">1</span>;</span><br><span class="line">&amp;jExcel.addTitleCell(&amp;iRow, &amp;iCol, <span class="string">&quot;HC人数&quot;</span>, <span class="string">&quot;string&quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">&amp;iCol = &amp;iCol + <span class="number">1</span>;</span><br><span class="line">&amp;jExcel.addTitleCell(&amp;iRow, &amp;iCol, <span class="string">&quot;实际工资&quot;</span>, <span class="string">&quot;string&quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">&amp;iCol = &amp;iCol + <span class="number">1</span>;</span><br><span class="line">&amp;jExcel.addTitleCell(&amp;iRow, &amp;iCol, <span class="string">&quot;支出&quot;</span>, <span class="string">&quot;string&quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">&amp;iCol = &amp;iCol + <span class="number">1</span>;</span><br><span class="line">&amp;jExcel.addTitleCell(&amp;iRow, &amp;iCol, <span class="string">&quot;差异金额&quot;</span>, <span class="string">&quot;string&quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Local string &amp;C_END_DT;</span><br><span class="line">SQLExec(<span class="string">&quot;SELECT add_months(TO_DATE(:1, &#x27;YYYY-MM&#x27;), 1) - 1  FROM DUAL&quot;</span>, &amp;strCAL_PRD_ID, &amp;C_END_DT);</span><br><span class="line"><span class="comment">/*查部门路径表和职级表，拼基表*/</span></span><br><span class="line">Local SQL &amp;C_PSN_DEP_SQL = CreateSQL(SQL.C_PSN_DEP_SQL, &amp;C_END_DT);</span><br><span class="line">Local array &amp;arr = CreateArrayAny();</span><br><span class="line">rem Local Rowset &amp;RS = GetLevel0().GetRow(<span class="number">1</span>).GetRowset(Scroll.C_HC_COUNT_VW);</span><br><span class="line">rem &amp;RS.Flush();</span><br><span class="line"></span><br><span class="line">While &amp;C_PSN_DEP_SQL.Fetch(&amp;arr)</span><br><span class="line">   Local string &amp;strCOUNT1, &amp;strC_COUNT1, &amp;strC_AMT001, &amp;strC_AMT003, &amp;strC_AMT004;</span><br><span class="line">   rem &amp;RS(&amp;i).C_HC_COUNT_VW.C_POSN_GRDE_ID.Value = &amp;arr [<span class="number">1</span>];</span><br><span class="line">   rem &amp;RS(&amp;i).C_HC_COUNT_VW.C_POSN_GRDE_DESCR.Value = &amp;arr [<span class="number">2</span>];</span><br><span class="line">   rem &amp;RS(&amp;i).C_HC_COUNT_VW.DEPTID.Value = &amp;arr [<span class="number">3</span>];</span><br><span class="line">   rem &amp;RS(&amp;i).C_HC_COUNT_VW.DEPT_DESCR.Value = &amp;arr [<span class="number">4</span>];</span><br><span class="line">   </span><br><span class="line">   <span class="comment">/*根据基表+参数，搜索对应的实际人数+人力成本*/</span></span><br><span class="line">   SQLExec(SQL.C_CONT_SAL_SQL, &amp;C_END_DT, &amp;arr [<span class="number">3</span>], &amp;arr [<span class="number">1</span>], &amp;strCOUNT1, &amp;strC_AMT001);</span><br><span class="line">   rem &amp;RS(&amp;i).C_HC_COUNT_VW.COUNT1.Value = &amp;strCOUNT1;</span><br><span class="line">   rem &amp;RS(&amp;i).C_HC_COUNT_VW.C_AMT001.Value = &amp;strC_AMT001;</span><br><span class="line">   </span><br><span class="line">   <span class="comment">/*根据基表+参数，搜索对应的HC人数*/</span></span><br><span class="line">   SQLExec(SQL.C_HC_COUNT_SQL, Substring(&amp;C_END_DT, <span class="number">1</span>, <span class="number">4</span>), &amp;arr [<span class="number">3</span>], &amp;arr [<span class="number">1</span>], &amp;C_END_DT, &amp;strC_COUNT1);</span><br><span class="line">   rem &amp;RS(&amp;i).C_HC_COUNT_VW.C_COUNT1.Value = &amp;strC_COUNT1;</span><br><span class="line">   </span><br><span class="line">   <span class="comment">/*计算HC成本+成本差异*/</span></span><br><span class="line">   <span class="function">If <span class="title">All</span><span class="params">(&amp;strCOUNT1)</span> And</span></span><br><span class="line"><span class="function">         <span class="title">Value</span><span class="params">(&amp;strCOUNT1)</span> &gt; 0 Then</span></span><br><span class="line"><span class="function">      &amp;strC_AMT003 </span>= String(Round(Value(&amp;strC_AMT001) / Value(&amp;strCOUNT1) * Value(&amp;strC_COUNT1), <span class="number">2</span>));</span><br><span class="line">      &amp;strC_AMT004 = String(Round(Value(&amp;strC_AMT001) - (Value(&amp;strC_AMT001) / Value(&amp;strCOUNT1) * Value(&amp;strC_COUNT1)), <span class="number">2</span>));</span><br><span class="line">   Else</span><br><span class="line">      &amp;strC_AMT003 = <span class="string">&quot;0&quot;</span>;</span><br><span class="line">      &amp;strC_AMT004 = <span class="string">&quot;0&quot;</span>;</span><br><span class="line">   End-If;</span><br><span class="line">   </span><br><span class="line">   &amp;iRow = &amp;iRow + <span class="number">1</span>;</span><br><span class="line">   &amp;iCol = <span class="number">0</span>;</span><br><span class="line">   REM 一级部门;</span><br><span class="line">   &amp;jExcel.addRowCell(&amp;iRow, &amp;iCol, &amp;arr [<span class="number">4</span>], <span class="string">&quot;string&quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">   &amp;iCol = &amp;iCol + <span class="number">1</span>;</span><br><span class="line">   REM 职级;</span><br><span class="line">   &amp;jExcel.addRowCell(&amp;iRow, &amp;iCol, &amp;arr [<span class="number">2</span>], <span class="string">&quot;string&quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">   &amp;iCol = &amp;iCol + <span class="number">1</span>;</span><br><span class="line">   REM 实际人数;</span><br><span class="line">   &amp;jExcel.addRowCell(&amp;iRow, &amp;iCol, &amp;strCOUNT1, <span class="string">&quot;string&quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">   &amp;iCol = &amp;iCol + <span class="number">1</span>;</span><br><span class="line">   REM HC人数;</span><br><span class="line">   &amp;jExcel.addRowCell(&amp;iRow, &amp;iCol, &amp;strC_COUNT1, <span class="string">&quot;string&quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">   &amp;iCol = &amp;iCol + <span class="number">1</span>;</span><br><span class="line">   REM 实际工资;</span><br><span class="line">   &amp;jExcel.addRowCell(&amp;iRow, &amp;iCol, &amp;strC_AMT001, <span class="string">&quot;string&quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">   &amp;iCol = &amp;iCol + <span class="number">1</span>;</span><br><span class="line">   REM 支出;</span><br><span class="line">   &amp;jExcel.addRowCell(&amp;iRow, &amp;iCol, &amp;strC_AMT003, <span class="string">&quot;string&quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">   &amp;iCol = &amp;iCol + <span class="number">1</span>;</span><br><span class="line">   REM 差异金额;</span><br><span class="line">   &amp;jExcel.addRowCell(&amp;iRow, &amp;iCol, &amp;strC_AMT004, <span class="string">&quot;string&quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">   &amp;iCol = &amp;iCol + <span class="number">1</span>;</span><br><span class="line">End-While;</span><br><span class="line"></span><br><span class="line">&amp;strRptName = <span class="string">&quot;中心预算_&quot;</span> | C_CEN_SUM_AET.PROCESS_INSTANCE.Value;</span><br><span class="line">&amp;strRptName = &amp;strRptName | <span class="string">&quot;.xlsx&quot;</span>;</span><br><span class="line"><span class="comment">// 获取实际路径PS_HOME并拼接文件名; </span></span><br><span class="line">&amp;strRptFullName = GetEnv(<span class="string">&quot;PSPRCSLOGDIR&quot;</span>) | <span class="string">&quot;/&quot;</span> | &amp;strRptName;</span><br><span class="line">&amp;strRptName = &amp;jExcel.outputFile(&amp;strRptFullName);</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> PeopleSoft </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux-常用命令</title>
      <link href="2020/12/22/Linux-%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
      <url>2020/12/22/Linux-%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">su - 用户名   <span class="comment">//切换用户</span></span><br><span class="line"></span><br><span class="line">pwd <span class="comment">//获取当前路径</span></span><br><span class="line">    </span><br><span class="line">cd 路径  <span class="comment">//跳转对应目录（路径）</span></span><br><span class="line"></span><br><span class="line">chmod -R <span class="number">777</span> 文件名或文件夹路径  <span class="comment">//给目录下所有文件和子目录授权的命令(单个文件的话，就是授权当个文件)</span></span><br><span class="line">    </span><br><span class="line">chown -R 用户<span class="number">1</span>:组名 文件名或文件夹路径   <span class="comment">//改变文件或者目录的拥有者</span></span><br><span class="line">     </span><br><span class="line">ls  <span class="comment">//列出当前文件路径下的文件名</span></span><br><span class="line">    </span><br><span class="line">ll <span class="comment">//列出当前文件路径下的文件名，可操作权限，所属用户/组，添加时间</span></span><br><span class="line">    </span><br><span class="line">vi <span class="comment">//进入文件编辑（查看模式）</span></span><br><span class="line"> i  <span class="comment">//编辑模式</span></span><br><span class="line">     :w   <span class="comment">//保存；</span></span><br><span class="line">     :w filename <span class="comment">//另存为filename；</span></span><br><span class="line">     :wq! <span class="comment">//保存并强制退出；</span></span><br><span class="line">     :wq! filename <span class="comment">//注：以filename为文件名保存后强制退出;</span></span><br><span class="line">     :q! <span class="comment">//强制退出；</span></span><br><span class="line">     :x <span class="comment">//保存并退出（仅当文件有变化时保存）</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 服务器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PeopleSoft-员工ID溢出处理</title>
      <link href="2020/12/22/PeopleSoft-%E5%91%98%E5%B7%A5ID%E6%BA%A2%E5%87%BA%E5%A4%84%E7%90%86/"/>
      <url>2020/12/22/PeopleSoft-%E5%91%98%E5%B7%A5ID%E6%BA%A2%E5%87%BA%E5%A4%84%E7%90%86/</url>
      
        <content type="html"><![CDATA[<p><strong>员工ID长度</strong></p><img src="https://gitee.com/gek7777/cdn.io/raw/master/image/20201222110728.png"/><p><strong>员工ID溢出，编码开始</strong></p><img src="https://gitee.com/gek7777/cdn.io/raw/master/image/20201222110552.png"/>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PeopleSoft </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PeopleSoft-服务器常用配置文件路径</title>
      <link href="2020/12/21/PeopleSoft-%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%B8%B8%E7%94%A8%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E8%B7%AF%E5%BE%84/"/>
      <url>2020/12/21/PeopleSoft-%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%B8%B8%E7%94%A8%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E8%B7%AF%E5%BE%84/</url>
      
        <content type="html"><![CDATA[<h3 id="SSC、JS文件配置路径："><a href="#SSC、JS文件配置路径：" class="headerlink" title="SSC、JS文件配置路径："></a>SSC、JS文件配置路径：</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/home/psadm2/psft/pt/<span class="number">8.57</span>/webserv/HR92DEV/applications/peoplesoft/PORTAL.war/ep/components/common.js</span><br></pre></td></tr></table></figure><h3 id="邮件发送人配置文件路径："><a href="#邮件发送人配置文件路径：" class="headerlink" title="邮件发送人配置文件路径："></a>邮件发送人配置文件路径：</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/home/psadm2/psft/pt/<span class="number">8.57</span>/appserv/prcs/PRCSDOM</span><br></pre></td></tr></table></figure><h3 id="JAR包，存放class的配置路径："><a href="#JAR包，存放class的配置路径：" class="headerlink" title="JAR包，存放class的配置路径："></a>JAR包，存放class的配置路径：</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">/app/psapp/pt/ps_home8.<span class="number">57.11</span></span><br><span class="line">/app/psapp/pt/ps_home8.<span class="number">57.11</span>/<span class="class"><span class="keyword">class</span></span></span><br><span class="line"><span class="class">/<span class="title">app</span>/<span class="title">psapp</span>/<span class="title">pt</span>/<span class="title">ps_home8</span>.57.11/<span class="title">appserv</span>/<span class="title">classes</span></span></span><br></pre></td></tr></table></figure><h3 id="PS缓存路径"><a href="#PS缓存路径" class="headerlink" title="PS缓存路径"></a>PS缓存路径</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/home/psadm2/psft/pt/<span class="number">8.57</span>/webserv/peoplesoft/applications/peoplesoft/PORTAL.war/ps/cache</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 服务器 </tag>
            
            <tag> PeopleSoft </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PeopleSoft-AE进程页面配置通用AE进程子页面</title>
      <link href="2020/12/21/PeopleSoft-AE%E8%BF%9B%E7%A8%8B%E9%A1%B5%E9%9D%A2%E9%85%8D%E7%BD%AE%E9%80%9A%E7%94%A8AE%E8%BF%9B%E7%A8%8B%E5%AD%90%E9%A1%B5%E9%9D%A2/"/>
      <url>2020/12/21/PeopleSoft-AE%E8%BF%9B%E7%A8%8B%E9%A1%B5%E9%9D%A2%E9%85%8D%E7%BD%AE%E9%80%9A%E7%94%A8AE%E8%BF%9B%E7%A8%8B%E5%AD%90%E9%A1%B5%E9%9D%A2/</url>
      
        <content type="html"><![CDATA[<h3 id="在组件的PostBuild中编写代码："><a href="#在组件的PostBuild中编写代码：" class="headerlink" title="在组件的PostBuild中编写代码："></a>在组件的PostBuild中编写代码：</h3><img src="https://gitee.com/gek7777/cdn.io/raw/master/image/20201221152953.png"/><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Component string &amp;PrcsName;</span><br><span class="line">If %Mode = <span class="string">&quot;A&quot;</span> Then</span><br><span class="line">   C_COST_INTC_RTL.C_GP_SORT = <span class="string">&quot;20&quot;</span>;</span><br><span class="line">End-If;</span><br><span class="line">C_COST_INTCA_WK.C_FLAG_DJ.Value = <span class="string">&quot;N&quot;</span>;</span><br><span class="line">&amp;PrcsName = <span class="string">&quot;C_CST_INT_AE&quot;</span>; <span class="comment">/*****进程名称，需要早组件初始化的时候赋值*****/</span></span><br></pre></td></tr></table></figure><h3 id="在组件上找到头部页面的”运行”字段-FieldDefault，编写代码。"><a href="#在组件上找到头部页面的”运行”字段-FieldDefault，编写代码。" class="headerlink" title="在组件上找到头部页面的”运行”字段-FieldDefault，编写代码。"></a>在组件上找到头部页面的”运行”字段-FieldDefault，编写代码。</h3><img src="https://gitee.com/gek7777/cdn.io/raw/master/image/20201221153628.png"/><img src="https://gitee.com/gek7777/cdn.io/raw/master/image/20201221153706.png"/><h3 id="代码：-1"><a href="#代码：-1" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Component string &amp;PrcsName;</span><br><span class="line">Declare Function Refresh PeopleCode C_SYSAE_QRY.REFRESH_BTN FieldFormula;</span><br><span class="line">Refresh(&amp;PrcsName);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PeopleSoft </tag>
            
            <tag> PeopleCode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PeopleSoft-AE设置自动运行</title>
      <link href="2020/12/21/PeopleSoft-AE%E8%AE%BE%E7%BD%AE%E8%87%AA%E5%8A%A8%E8%BF%90%E8%A1%8C/"/>
      <url>2020/12/21/PeopleSoft-AE%E8%AE%BE%E7%BD%AE%E8%87%AA%E5%8A%A8%E8%BF%90%E8%A1%8C/</url>
      
        <content type="html"><![CDATA[<h3 id="循环定义"><a href="#循环定义" class="headerlink" title="循环定义"></a>循环定义</h3><p>AE定时执行，作业定时执行等。</p><img src="https://gitee.com/gek7777/cdn.io/raw/master/image/20201221173346.png"/><p>如果要对AE进行循环设置，需要注意一下：</p><img src="https://gitee.com/gek7777/cdn.io/raw/master/image/20201221135348.png"/><p>这里的日期不能是必填的，之前是写在表定义里的%date，由于要挂循环，所以写在AE表的代码里。这样才能每次都获取当日期进行AE处理。</p><p>集合ID的话，如果每次都不一样的话，可以设置多个运行控制ID。这样就会跑多个集合下的数据。（目前这里不会出现这样的问题，所以可以不用设置）。</p><img src="https://gitee.com/gek7777/cdn.io/raw/master/image/20201221135401.png"/><p>时区保持为空即可，如果选择了（即使选择了CHN），会导致AE运行的时间不对。</p>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PeopleSoft </tag>
            
            <tag> PeopleCode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PeopleSoft-利用PS系统对密文加密</title>
      <link href="2020/12/21/PeopleSoft-%E5%88%A9%E7%94%A8PS%E7%B3%BB%E7%BB%9F%E5%AF%B9%E5%AF%86%E6%96%87%E5%8A%A0%E5%AF%86/"/>
      <url>2020/12/21/PeopleSoft-%E5%88%A9%E7%94%A8PS%E7%B3%BB%E7%BB%9F%E5%AF%B9%E5%AF%86%E6%96%87%E5%8A%A0%E5%AF%86/</url>
      
        <content type="html"><![CDATA[<h3 id="密文加密功能"><a href="#密文加密功能" class="headerlink" title="密文加密功能"></a>密文加密功能</h3><img src="https://gitee.com/gek7777/cdn.io/raw/master/image/20201221134841.png"/>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PeopleSoft </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Oracle-利用自定义函数将Blob转为string（主要用于图片传输）</title>
      <link href="2020/12/21/Oracle-%E5%88%A9%E7%94%A8%E8%87%AA%E5%AE%9A%E4%B9%89%E5%87%BD%E6%95%B0%E5%B0%86Blob%E8%BD%AC%E4%B8%BAstring%EF%BC%88%E4%B8%BB%E8%A6%81%E7%94%A8%E4%BA%8E%E5%9B%BE%E7%89%87%E4%BC%A0%E8%BE%93%EF%BC%89/"/>
      <url>2020/12/21/Oracle-%E5%88%A9%E7%94%A8%E8%87%AA%E5%AE%9A%E4%B9%89%E5%87%BD%E6%95%B0%E5%B0%86Blob%E8%BD%AC%E4%B8%BAstring%EF%BC%88%E4%B8%BB%E8%A6%81%E7%94%A8%E4%BA%8E%E5%9B%BE%E7%89%87%E4%BC%A0%E8%BE%93%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--创建一个将BLOB转换为string的函数：</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">OR</span> <span class="keyword">REPLACE</span> <span class="keyword">FUNCTION</span> base64encode(p_blob <span class="keyword">IN</span> <span class="built_in">BLOB</span>) <span class="keyword">RETURN</span> <span class="keyword">CLOB</span> <span class="keyword">IS</span></span><br><span class="line">  l_clob <span class="keyword">CLOB</span>;</span><br><span class="line">  l_step PLS_INTEGER := 12000;</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">  <span class="keyword">FOR</span> i <span class="keyword">IN</span> <span class="number">0</span> .. TRUNC((DBMS_LOB.getlength(p_blob) - <span class="number">1</span>) / l_step) <span class="keyword">LOOP</span></span><br><span class="line">    l_clob := l_clob ||</span><br><span class="line">              UTL_RAW.cast_to_varchar2(UTL_ENCODE.base64_encode(DBMS_LOB.substr(p_blob,</span><br><span class="line">                                                                                l_step,</span><br><span class="line">                                                                                i *</span><br><span class="line">                                                                                l_step + <span class="number">1</span>)));</span><br><span class="line">  <span class="keyword">END</span> <span class="keyword">LOOP</span>;</span><br><span class="line">  RETURN l_clob;</span><br><span class="line"><span class="keyword">END</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">--调用</span></span><br><span class="line"><span class="keyword">SELECT</span> base64encode(<span class="keyword">field</span>) <span class="keyword">FROM</span> DUAL</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PeopleSoft-组件代码中Dosave()和DosaveNow()的区别</title>
      <link href="2020/12/21/PeopleSoft-%E7%BB%84%E4%BB%B6%E4%BB%A3%E7%A0%81%E4%B8%ADDosave-%E5%92%8CDosaveNow-%E7%9A%84%E5%8C%BA%E5%88%AB/"/>
      <url>2020/12/21/PeopleSoft-%E7%BB%84%E4%BB%B6%E4%BB%A3%E7%A0%81%E4%B8%ADDosave-%E5%92%8CDosaveNow-%E7%9A%84%E5%8C%BA%E5%88%AB/</url>
      
        <content type="html"><![CDATA[<h2 id="Dosave-和dosavenow（）的区别"><a href="#Dosave-和dosavenow（）的区别" class="headerlink" title="Dosave() 和dosavenow（）的区别"></a>Dosave() 和dosavenow（）的区别</h2><p>dosave会放弃后面的代码，进行组件保存。</p><p>dosavenow，会保存组件后继续执行后面的代码。</p>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PeopleSoft </tag>
            
            <tag> PeopleCede </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PeopleSoft-拆分员工一个月内的职务数据</title>
      <link href="2020/12/21/PeopleSoft-%E6%8B%86%E5%88%86%E5%91%98%E5%B7%A5%E4%B8%80%E4%B8%AA%E6%9C%88%E5%86%85%E7%9A%84%E8%81%8C%E5%8A%A1%E6%95%B0%E6%8D%AE/"/>
      <url>2020/12/21/PeopleSoft-%E6%8B%86%E5%88%86%E5%91%98%E5%B7%A5%E4%B8%80%E4%B8%AA%E6%9C%88%E5%86%85%E7%9A%84%E8%81%8C%E5%8A%A1%E6%95%B0%E6%8D%AE/</url>
      
        <content type="html"><![CDATA[<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CENTERCOST</span></span></span><br><span class="line"><span class="class">   <span class="title">method</span> <span class="title">CENTERCOST</span>()</span>;</span><br><span class="line">   REM +-----------------------------------------------------------+;</span><br><span class="line">   REM | 职务数据拆分函数          |;</span><br><span class="line">   REM +-----------------------------------------------------------+;</span><br><span class="line">   <span class="function">method <span class="title">splitJobRecord</span><span class="params">(&amp;strEmplid As string, &amp;strBgnDt As string, &amp;strEndDt As string)</span> Returns string</span>;</span><br><span class="line">end-<span class="class"><span class="keyword">class</span></span>;</span><br><span class="line"></span><br><span class="line">method CENTERCOST   </span><br><span class="line">end-method;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*==========================================================</span></span><br><span class="line"><span class="comment">  说明      : 根据传入员工ID、开始和结束日期，对职务数据进行拆分 </span></span><br><span class="line"><span class="comment">  输入参数:   1、员工ID</span></span><br><span class="line"><span class="comment">              2、开始日期</span></span><br><span class="line"><span class="comment">              3、结束日期           </span></span><br><span class="line"><span class="comment">  输出参数:   </span></span><br><span class="line"><span class="comment">  --------------------------------------------------------</span></span><br><span class="line"><span class="comment">  日期             作者         说明</span></span><br><span class="line"><span class="comment">  2020-11-25     SIE_GEK             创建</span></span><br><span class="line"><span class="comment">=========================================================*/</span></span><br><span class="line">method splitJobRecord</span><br><span class="line">   /+ &amp;strEmplid as String, +/</span><br><span class="line">   /+ &amp;strBgnDt as String, +/</span><br><span class="line">   /+ &amp;strEndDt as String +/</span><br><span class="line">   /+ Returns String +/</span><br><span class="line">   Local string &amp;strRtn;</span><br><span class="line">   Local string &amp;bgnDt = &amp;strBgnDt;</span><br><span class="line">   Local string &amp;endDt = &amp;strEndDt;</span><br><span class="line">   Local string &amp;cal_prd_id = Substring(&amp;bgnDt, <span class="number">1</span>, <span class="number">7</span>);;</span><br><span class="line">   </span><br><span class="line">   Local number &amp;i;</span><br><span class="line">   Local string &amp;beforeBgnDt;</span><br><span class="line">   Local string &amp;beforeEndDt;</span><br><span class="line">   Local string &amp;strCOUNT;</span><br><span class="line">   Local string &amp;strEFFDT;</span><br><span class="line">   Local string &amp;MonthDays;</span><br><span class="line">   Local string &amp;strC_RE_NO, &amp;strC_DESCR, &amp;strC_COST_CENTRE, &amp;strC_DESCR2, &amp;strDEPTID, &amp;strC_DESCR3, &amp;strC_COST_TYPE, &amp;strC_DESCR4;</span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">   Local array of string &amp;arrBgn = CreateArrayRept(<span class="string">&quot;tmp&quot;</span>, <span class="number">11</span>);</span><br><span class="line">   Local array of string &amp;arrEnd = CreateArrayRept(<span class="string">&quot;tmp&quot;</span>, <span class="number">11</span>);</span><br><span class="line">   Local array of string &amp;arrRet = CreateArrayRept(<span class="string">&quot;tmp&quot;</span>, <span class="number">15</span>);</span><br><span class="line">   <span class="keyword">try</span></span><br><span class="line">      </span><br><span class="line">      </span><br><span class="line">      SQLExec(SQL.C_JOB_BGN_DT_SQL, &amp;strEmplid, &amp;bgnDt, &amp;arrBgn [<span class="number">1</span>], &amp;arrBgn [<span class="number">2</span>], &amp;arrBgn [<span class="number">3</span>], &amp;arrBgn [<span class="number">4</span>], &amp;arrBgn [<span class="number">5</span>], &amp;arrBgn [<span class="number">6</span>], &amp;arrBgn [<span class="number">7</span>], &amp;arrBgn [<span class="number">8</span>], &amp;arrBgn [<span class="number">9</span>], &amp;arrBgn [<span class="number">10</span>], &amp;arrBgn [<span class="number">11</span>]);</span><br><span class="line">      SQLExec(SQL.C_JOB_END_DT_SQL, &amp;strEmplid, &amp;endDt, &amp;arrEnd [<span class="number">1</span>], &amp;arrEnd [<span class="number">2</span>], &amp;arrEnd [<span class="number">3</span>], &amp;arrEnd [<span class="number">4</span>], &amp;arrEnd [<span class="number">5</span>], &amp;arrEnd [<span class="number">6</span>], &amp;arrEnd [<span class="number">7</span>], &amp;arrEnd [<span class="number">8</span>], &amp;arrEnd [<span class="number">9</span>], &amp;arrEnd [<span class="number">10</span>], &amp;arrEnd [<span class="number">11</span>]);</span><br><span class="line">      </span><br><span class="line">      <span class="function">rem <span class="title">WinMessage</span><span class="params">(<span class="string">&quot;&amp;arrBgn [5]=&quot;</span> | &amp;arrBgn [<span class="number">5</span>])</span></span>;</span><br><span class="line">      <span class="function">rem <span class="title">WinMessage</span><span class="params">(<span class="string">&quot;&amp;arrEnd [5]=&quot;</span> | &amp;arrEnd [<span class="number">5</span>])</span></span>;</span><br><span class="line">      <span class="function">rem <span class="title">WinMessage</span><span class="params">(<span class="string">&quot;&amp;strEmplid =&quot;</span> | &amp;strEmplid)</span></span>;</span><br><span class="line">      <span class="function">rem <span class="title">WinMessage</span><span class="params">(<span class="string">&quot;&amp;cal_prd_id =&quot;</span> | &amp;cal_prd_id)</span></span>;</span><br><span class="line">      <span class="function">rem <span class="title">MessageBox</span><span class="params">(<span class="number">0</span>, <span class="string">&quot;&quot;</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="string">&quot;&amp;arrBgn [5]==&quot;</span> | &amp;arrBgn [<span class="number">5</span>] | <span class="string">&quot;----&amp;arrEnd [5]==&quot;</span> | &amp;arrEnd [<span class="number">5</span>] | <span class="string">&quot;----&amp;strEmplid==&quot;</span> | &amp;strEmplid | <span class="string">&quot;---&amp;cal_prd_id==&quot;</span> | &amp;cal_prd_id)</span></span>;</span><br><span class="line">      </span><br><span class="line">      rem 清空该员工的历史数据;</span><br><span class="line">      SQLExec(<span class="string">&quot;DELETE FROM PS_C_CAL_JOB_TBL C WHERE  C.EMPLID = :1 AND C.CAL_PRD_ID = :2&quot;</span>, &amp;strEmplid, &amp;cal_prd_id);</span><br><span class="line">      SQLExec(<span class="string">&quot;commit&quot;</span>);</span><br><span class="line">      rem a = b;</span><br><span class="line">      If &amp;arrBgn [<span class="number">1</span>] = &amp;arrEnd [<span class="number">1</span>] And</span><br><span class="line">            &amp;arrBgn [<span class="number">2</span>] = &amp;arrEnd [<span class="number">2</span>] And</span><br><span class="line">            &amp;arrBgn [<span class="number">3</span>] = &amp;arrEnd [<span class="number">3</span>] And</span><br><span class="line">            &amp;arrBgn [<span class="number">4</span>] = &amp;arrEnd [<span class="number">4</span>] Then</span><br><span class="line">         If &amp;arrEnd [<span class="number">5</span>] = <span class="string">&quot;TER&quot;</span> Then</span><br><span class="line">            <span class="function">rem <span class="title">MessageBox</span><span class="params">(<span class="number">0</span>, <span class="string">&quot;&quot;</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="string">&quot;月前离职&quot;</span>)</span></span>;</span><br><span class="line">            &amp;arrRet = CreateArrayRept(<span class="string">&quot;tmp&quot;</span>, <span class="number">15</span>);</span><br><span class="line">            &amp;arrRet [<span class="number">1</span>] = &amp;arrBgn [<span class="number">1</span>];</span><br><span class="line">            &amp;arrRet [<span class="number">2</span>] = &amp;arrBgn [<span class="number">2</span>];</span><br><span class="line">            &amp;arrRet [<span class="number">3</span>] = &amp;arrBgn [<span class="number">3</span>];</span><br><span class="line">            &amp;arrRet [<span class="number">4</span>] = &amp;arrBgn [<span class="number">4</span>];</span><br><span class="line">            &amp;arrRet [<span class="number">5</span>] = &amp;arrBgn [<span class="number">5</span>];</span><br><span class="line">            &amp;arrRet [<span class="number">6</span>] = &amp;arrBgn [<span class="number">6</span>];</span><br><span class="line">            &amp;MonthDays = <span class="string">&quot;0&quot;</span>;</span><br><span class="line">            SQLExec(<span class="string">&quot;SELECT to_date(:1,&#x27;yyyy-mm-dd&#x27;) - to_date(:2,&#x27;yyyy-mm-dd&#x27;) +  1  FROM dual&quot;</span>, &amp;endDt, &amp;bgnDt, &amp;MonthDays);</span><br><span class="line">            &amp;arrRet [<span class="number">7</span>] = &amp;MonthDays;</span><br><span class="line">            <span class="function">rem <span class="title">WinMessage</span><span class="params">(&amp;bgnDt)</span></span>;</span><br><span class="line">            SQLExec(SQL.C_FULL_MONTHS_SQL, &amp;arrBgn [<span class="number">1</span>], &amp;bgnDt, &amp;strC_RE_NO, &amp;strC_DESCR, &amp;strC_COST_CENTRE, &amp;strC_DESCR2, &amp;strDEPTID, &amp;strC_DESCR3, &amp;strC_COST_TYPE, &amp;strC_DESCR4);</span><br><span class="line">            &amp;arrRet [<span class="number">8</span>] = &amp;strC_RE_NO;</span><br><span class="line">            &amp;arrRet [<span class="number">9</span>] = &amp;strC_DESCR;</span><br><span class="line">            &amp;arrRet [<span class="number">10</span>] = &amp;strC_COST_CENTRE;</span><br><span class="line">            &amp;arrRet [<span class="number">11</span>] = &amp;strC_DESCR2;</span><br><span class="line">            &amp;arrRet [<span class="number">12</span>] = &amp;strDEPTID;</span><br><span class="line">            &amp;arrRet [<span class="number">13</span>] = &amp;strC_DESCR3;</span><br><span class="line">            &amp;arrRet [<span class="number">14</span>] = &amp;strC_COST_TYPE;</span><br><span class="line">            &amp;arrRet [<span class="number">15</span>] = &amp;strC_DESCR4;</span><br><span class="line">            rem 记录表  月前离职，但是当月的薪资表中有数据;</span><br><span class="line">            <span class="function">rem  <span class="title">WinMessage</span><span class="params">(&amp;MonthDays | <span class="string">&quot;天：&quot;</span> | &amp;arrRet [<span class="number">1</span>] | <span class="string">&quot;===&quot;</span> | &amp;arrRet [<span class="number">2</span>] | <span class="string">&quot;===&quot;</span> | &amp;arrRet [<span class="number">3</span>] | <span class="string">&quot;===&quot;</span> | &amp;arrRet [<span class="number">4</span>] | <span class="string">&quot;===&quot;</span> | &amp;arrRet [<span class="number">5</span>] | <span class="string">&quot;===&quot;</span> | &amp;arrRet [<span class="number">6</span>] | <span class="string">&quot;===&quot;</span> | &amp;arrRet [<span class="number">7</span>] | <span class="string">&quot;===&quot;</span> | &amp;arrRet [<span class="number">8</span>] | <span class="string">&quot;===&quot;</span> | &amp;arrRet [<span class="number">9</span>] | <span class="string">&quot;===&quot;</span> | &amp;arrRet [<span class="number">10</span>] | <span class="string">&quot;===&quot;</span> | &amp;arrRet [<span class="number">11</span>])</span></span>;</span><br><span class="line">            SQLExec(<span class="string">&quot;insert into PS_C_CAL_JOB_TBL values(:1,:2,:3,:4,:5,:6,:7,:8,:9,:10,to_date(:11,&#x27;YYYY-MM-DD&#x27;),:12,:13,&#x27;N&#x27;)&quot;</span>, &amp;arrRet [<span class="number">1</span>], &amp;cal_prd_id, &amp;arrRet [<span class="number">8</span>], &amp;arrRet [<span class="number">9</span>], &amp;arrRet [<span class="number">10</span>], &amp;arrRet [<span class="number">11</span>], &amp;arrRet [<span class="number">12</span>], &amp;arrRet [<span class="number">13</span>], &amp;arrRet [<span class="number">14</span>], &amp;arrRet [<span class="number">15</span>], &amp;endDt, &amp;arrRet [<span class="number">7</span>], <span class="string">&quot;0&quot;</span>);</span><br><span class="line">            SQLExec(<span class="string">&quot;commit&quot;</span>);</span><br><span class="line">            </span><br><span class="line">            rem 月后入职，不处理;</span><br><span class="line">            If &amp;arrEnd [<span class="number">5</span>] = <span class="string">&quot;&quot;</span> Then</span><br><span class="line">               <span class="function">rem <span class="title">MessageBox</span><span class="params">(<span class="number">0</span>, <span class="string">&quot;&quot;</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="string">&quot;月后入职&quot;</span>)</span></span>;</span><br><span class="line">            End-If;</span><br><span class="line">         Else</span><br><span class="line">            <span class="function">rem <span class="title">WinMessage</span><span class="params">(<span class="string">&quot;进入月前入职，月后离职，且月中无操作&quot;</span>)</span></span>;</span><br><span class="line">            &amp;arrRet = CreateArrayRept(<span class="string">&quot;tmp&quot;</span>, <span class="number">15</span>);</span><br><span class="line">            &amp;arrRet [<span class="number">1</span>] = &amp;arrBgn [<span class="number">1</span>];</span><br><span class="line">            &amp;arrRet [<span class="number">2</span>] = &amp;arrBgn [<span class="number">2</span>];</span><br><span class="line">            &amp;arrRet [<span class="number">3</span>] = &amp;arrBgn [<span class="number">3</span>];</span><br><span class="line">            &amp;arrRet [<span class="number">4</span>] = &amp;arrBgn [<span class="number">4</span>];</span><br><span class="line">            &amp;arrRet [<span class="number">5</span>] = &amp;arrBgn [<span class="number">5</span>];</span><br><span class="line">            &amp;arrRet [<span class="number">6</span>] = &amp;arrBgn [<span class="number">6</span>];</span><br><span class="line">            &amp;MonthDays = <span class="string">&quot;0&quot;</span>;</span><br><span class="line">            SQLExec(<span class="string">&quot;SELECT to_date(:1,&#x27;yyyy-mm-dd&#x27;) - to_date(:2,&#x27;yyyy-mm-dd&#x27;) +  1  FROM dual&quot;</span>, &amp;endDt, &amp;bgnDt, &amp;MonthDays);</span><br><span class="line">            &amp;arrRet [<span class="number">7</span>] = &amp;MonthDays;</span><br><span class="line">            <span class="function">rem <span class="title">WinMessage</span><span class="params">(&amp;bgnDt)</span></span>;</span><br><span class="line">            SQLExec(SQL.C_FULL_MONTHS_SQL, &amp;arrBgn [<span class="number">1</span>], &amp;bgnDt, &amp;strC_RE_NO, &amp;strC_DESCR, &amp;strC_COST_CENTRE, &amp;strC_DESCR2, &amp;strDEPTID, &amp;strC_DESCR3, &amp;strC_COST_TYPE, &amp;strC_DESCR4);</span><br><span class="line">            &amp;arrRet [<span class="number">8</span>] = &amp;strC_RE_NO;</span><br><span class="line">            &amp;arrRet [<span class="number">9</span>] = &amp;strC_DESCR;</span><br><span class="line">            &amp;arrRet [<span class="number">10</span>] = &amp;strC_COST_CENTRE;</span><br><span class="line">            &amp;arrRet [<span class="number">11</span>] = &amp;strC_DESCR2;</span><br><span class="line">            &amp;arrRet [<span class="number">12</span>] = &amp;strDEPTID;</span><br><span class="line">            &amp;arrRet [<span class="number">13</span>] = &amp;strC_DESCR3;</span><br><span class="line">            &amp;arrRet [<span class="number">14</span>] = &amp;strC_COST_TYPE;</span><br><span class="line">            &amp;arrRet [<span class="number">15</span>] = &amp;strC_DESCR4;</span><br><span class="line">            rem 记录表  月后离职;</span><br><span class="line">            <span class="function">rem  <span class="title">WinMessage</span><span class="params">(&amp;MonthDays | <span class="string">&quot;天：&quot;</span> | &amp;arrRet [<span class="number">1</span>] | <span class="string">&quot;===&quot;</span> | &amp;arrRet [<span class="number">2</span>] | <span class="string">&quot;===&quot;</span> | &amp;arrRet [<span class="number">3</span>] | <span class="string">&quot;===&quot;</span> | &amp;arrRet [<span class="number">4</span>] | <span class="string">&quot;===&quot;</span> | &amp;arrRet [<span class="number">5</span>] | <span class="string">&quot;===&quot;</span> | &amp;arrRet [<span class="number">6</span>] | <span class="string">&quot;===&quot;</span> | &amp;arrRet [<span class="number">7</span>] | <span class="string">&quot;===&quot;</span> | &amp;arrRet [<span class="number">8</span>] | <span class="string">&quot;===&quot;</span> | &amp;arrRet [<span class="number">9</span>] | <span class="string">&quot;===&quot;</span> | &amp;arrRet [<span class="number">10</span>] | <span class="string">&quot;===&quot;</span> | &amp;arrRet [<span class="number">11</span>])</span></span>;</span><br><span class="line">            SQLExec(<span class="string">&quot;insert into PS_C_CAL_JOB_TBL values(:1,:2,:3,:4,:5,:6,:7,:8,:9,:10,to_date(:11,&#x27;YYYY-MM-DD&#x27;),:12,:13,&#x27;N&#x27;)&quot;</span>, &amp;arrRet [<span class="number">1</span>], &amp;cal_prd_id, &amp;arrRet [<span class="number">8</span>], &amp;arrRet [<span class="number">9</span>], &amp;arrRet [<span class="number">10</span>], &amp;arrRet [<span class="number">11</span>], &amp;arrRet [<span class="number">12</span>], &amp;arrRet [<span class="number">13</span>], &amp;arrRet [<span class="number">14</span>], &amp;arrRet [<span class="number">15</span>], &amp;endDt, &amp;arrRet [<span class="number">7</span>], <span class="string">&quot;0&quot;</span>);</span><br><span class="line">            SQLExec(<span class="string">&quot;commit&quot;</span>);</span><br><span class="line">         End-If;</span><br><span class="line">      Else</span><br><span class="line">         </span><br><span class="line">         rem a&lt;&gt;b;</span><br><span class="line">         If &amp;arrEnd [<span class="number">5</span>] = <span class="string">&quot;TER&quot;</span> Then</span><br><span class="line">            rem 月中入职，月中离职;</span><br><span class="line">            If &amp;arrBgn [<span class="number">5</span>] = <span class="string">&quot;&quot;</span> Or</span><br><span class="line">                  &amp;arrBgn [<span class="number">3</span>] = &amp;bgnDt Or</span><br><span class="line">                  &amp;arrBgn [<span class="number">5</span>] = <span class="string">&quot;TER&quot;</span> Then</span><br><span class="line">               &amp;strCOUNT = <span class="string">&quot;0&quot;</span>;</span><br><span class="line">               &amp;strEFFDT = <span class="string">&quot;0&quot;</span>;</span><br><span class="line">               <span class="function">rem <span class="title">WinMessage</span><span class="params">(<span class="string">&quot;进入月中入职，月中离职&quot;</span>)</span></span>;</span><br><span class="line">               SQLExec(SQL.C_JOB_COUNT_SQL, &amp;arrEnd [<span class="number">1</span>], &amp;bgnDt, &amp;endDt, &amp;strCOUNT);</span><br><span class="line">               &amp;arrRet = CreateArrayRept(<span class="string">&quot;tmp&quot;</span>, <span class="number">15</span>);</span><br><span class="line">               SQLExec(SQL.C_FIRST_DAYS_SQL, &amp;arrEnd [<span class="number">1</span>], &amp;bgnDt, &amp;strEFFDT);</span><br><span class="line">               &amp;bgnDt = &amp;strEFFDT;</span><br><span class="line">               <span class="function">REM <span class="title">WinMessage</span><span class="params">(<span class="string">&quot;&amp;strCOUNT==&quot;</span> | &amp;strCOUNT | <span class="string">&quot;&amp;bgnDt==&quot;</span> | &amp;bgnDt)</span></span>;</span><br><span class="line">               For &amp;i = <span class="number">1</span> <span class="function">To <span class="title">Value</span><span class="params">(&amp;strCOUNT)</span> - 1</span></span><br><span class="line"><span class="function">                  If &amp;i &gt; 1 Then</span></span><br><span class="line"><span class="function">                     &amp;bgnDt </span>= &amp;arrRet [<span class="number">3</span>]</span><br><span class="line">                  End-If;</span><br><span class="line">                  SQLExec(SQL.C_JOB_DAYS_SQL, &amp;arrEnd [<span class="number">1</span>], &amp;bgnDt, &amp;arrRet [<span class="number">1</span>], &amp;arrRet [<span class="number">2</span>], &amp;arrRet [<span class="number">3</span>], &amp;arrRet [<span class="number">4</span>], &amp;arrRet [<span class="number">5</span>], &amp;arrRet [<span class="number">6</span>], &amp;arrRet [<span class="number">7</span>], &amp;arrRet [<span class="number">8</span>], &amp;arrRet [<span class="number">9</span>], &amp;arrRet [<span class="number">10</span>], &amp;arrRet [<span class="number">11</span>], &amp;arrRet [<span class="number">12</span>], &amp;arrRet [<span class="number">13</span>], &amp;arrRet [<span class="number">14</span>], &amp;arrRet [<span class="number">15</span>]);</span><br><span class="line">                  rem 记录表 月中入职，月中离职;</span><br><span class="line">                  <span class="function">rem  <span class="title">WinMessage</span><span class="params">(<span class="string">&quot;月中入职，月中离职：&quot;</span> | &amp;arrRet [<span class="number">1</span>] | <span class="string">&quot;===&quot;</span> | &amp;arrRet [<span class="number">2</span>] | <span class="string">&quot;===&quot;</span> | &amp;arrRet [<span class="number">3</span>] | <span class="string">&quot;===&quot;</span> | &amp;arrRet [<span class="number">4</span>] | <span class="string">&quot;===&quot;</span> | &amp;arrRet [<span class="number">5</span>] | <span class="string">&quot;===&quot;</span> | &amp;arrRet [<span class="number">6</span>] | <span class="string">&quot;===&quot;</span> | &amp;arrRet [<span class="number">7</span>] | <span class="string">&quot;===&quot;</span> | &amp;arrRet [<span class="number">8</span>] | <span class="string">&quot;===&quot;</span> | &amp;arrRet [<span class="number">9</span>] | <span class="string">&quot;===&quot;</span> | &amp;arrRet [<span class="number">10</span>] | <span class="string">&quot;===&quot;</span> | &amp;arrRet [<span class="number">11</span>])</span></span>;</span><br><span class="line">                  SQLExec(<span class="string">&quot;insert into PS_C_CAL_JOB_TBL values(:1,:2,:3,:4,:5,:6,:7,:8,:9,:10,to_date(:11,&#x27;YYYY-MM-DD&#x27;),:12,:13,&#x27;N&#x27;)&quot;</span>, &amp;arrRet [<span class="number">1</span>], &amp;cal_prd_id, &amp;arrRet [<span class="number">8</span>], &amp;arrRet [<span class="number">9</span>], &amp;arrRet [<span class="number">10</span>], &amp;arrRet [<span class="number">11</span>], &amp;arrRet [<span class="number">12</span>], &amp;arrRet [<span class="number">13</span>], &amp;arrRet [<span class="number">14</span>], &amp;arrRet [<span class="number">15</span>], &amp;arrRet [<span class="number">3</span>], &amp;arrRet [<span class="number">7</span>], <span class="string">&quot;0&quot;</span>);</span><br><span class="line">                  SQLExec(<span class="string">&quot;commit&quot;</span>);</span><br><span class="line">               End-For;</span><br><span class="line">            Else</span><br><span class="line">               rem 月前入职，月中离职;</span><br><span class="line">               <span class="function">If <span class="title">Date</span><span class="params">(&amp;arrBgn [<span class="number">3</span>])</span> &lt; <span class="title">Date</span><span class="params">(&amp;bgnDt)</span> Then</span></span><br><span class="line"><span class="function">                  rem <span class="title">WinMessage</span><span class="params">(<span class="string">&quot;进入月前入职，月中离职&quot;</span>)</span></span>;</span><br><span class="line">                  &amp;strCOUNT = <span class="string">&quot;0&quot;</span>;</span><br><span class="line">                  SQLExec(SQL.C_JOB_COUNT_SQL, &amp;arrBgn [<span class="number">1</span>], &amp;bgnDt, &amp;endDt, &amp;strCOUNT);</span><br><span class="line">                  &amp;arrRet = CreateArrayRept(<span class="string">&quot;tmp&quot;</span>, <span class="number">15</span>);</span><br><span class="line">                  For &amp;i = <span class="number">1</span> <span class="function">To <span class="title">Value</span><span class="params">(&amp;strCOUNT)</span></span></span><br><span class="line"><span class="function">                     If &amp;i &gt; 1 Then</span></span><br><span class="line"><span class="function">                        &amp;bgnDt </span>= &amp;arrRet [<span class="number">3</span>]</span><br><span class="line">                     End-If;</span><br><span class="line">                     SQLExec(SQL.C_JOB_DAYS_SQL, &amp;arrBgn [<span class="number">1</span>], &amp;bgnDt, &amp;arrRet [<span class="number">1</span>], &amp;arrRet [<span class="number">2</span>], &amp;arrRet [<span class="number">3</span>], &amp;arrRet [<span class="number">4</span>], &amp;arrRet [<span class="number">5</span>], &amp;arrRet [<span class="number">6</span>], &amp;arrRet [<span class="number">7</span>], &amp;arrRet [<span class="number">8</span>], &amp;arrRet [<span class="number">9</span>], &amp;arrRet [<span class="number">10</span>], &amp;arrRet [<span class="number">11</span>], &amp;arrRet [<span class="number">12</span>], &amp;arrRet [<span class="number">13</span>], &amp;arrRet [<span class="number">14</span>], &amp;arrRet [<span class="number">15</span>]);</span><br><span class="line">                     rem 记录表 月中离职;</span><br><span class="line">                     <span class="function">rem  <span class="title">WinMessage</span><span class="params">(<span class="string">&quot;月中离职：&quot;</span> | &amp;arrRet [<span class="number">1</span>] | <span class="string">&quot;===&quot;</span> | &amp;arrRet [<span class="number">2</span>] | <span class="string">&quot;===&quot;</span> | &amp;arrRet [<span class="number">3</span>] | <span class="string">&quot;===&quot;</span> | &amp;arrRet [<span class="number">4</span>] | <span class="string">&quot;===&quot;</span> | &amp;arrRet [<span class="number">5</span>] | <span class="string">&quot;===&quot;</span> | &amp;arrRet [<span class="number">6</span>] | <span class="string">&quot;===&quot;</span> | &amp;arrRet [<span class="number">7</span>] | <span class="string">&quot;===&quot;</span> | &amp;arrRet [<span class="number">8</span>] | <span class="string">&quot;===&quot;</span> | &amp;arrRet [<span class="number">9</span>] | <span class="string">&quot;===&quot;</span> | &amp;arrRet [<span class="number">10</span>] | <span class="string">&quot;===&quot;</span> | &amp;arrRet [<span class="number">11</span>])</span></span>;</span><br><span class="line">                     SQLExec(<span class="string">&quot;insert into PS_C_CAL_JOB_TBL values(:1,:2,:3,:4,:5,:6,:7,:8,:9,:10,to_date(:11,&#x27;YYYY-MM-DD&#x27;),:12,:13,&#x27;N&#x27;)&quot;</span>, &amp;arrRet [<span class="number">1</span>], &amp;cal_prd_id, &amp;arrRet [<span class="number">8</span>], &amp;arrRet [<span class="number">9</span>], &amp;arrRet [<span class="number">10</span>], &amp;arrRet [<span class="number">11</span>], &amp;arrRet [<span class="number">12</span>], &amp;arrRet [<span class="number">13</span>], &amp;arrRet [<span class="number">14</span>], &amp;arrRet [<span class="number">15</span>], &amp;arrRet [<span class="number">3</span>], &amp;arrRet [<span class="number">7</span>], <span class="string">&quot;0&quot;</span>);</span><br><span class="line">                     SQLExec(<span class="string">&quot;commit&quot;</span>);</span><br><span class="line">                  End-For;</span><br><span class="line">               End-If;</span><br><span class="line">            End-If;</span><br><span class="line">         Else</span><br><span class="line">            If &amp;arrBgn [<span class="number">5</span>] = <span class="string">&quot;&quot;</span> Or</span><br><span class="line">                  &amp;arrBgn [<span class="number">5</span>] = <span class="string">&quot;TER&quot;</span> Or</span><br><span class="line">                  &amp;arrBgn [<span class="number">3</span>] = &amp;bgnDt Then</span><br><span class="line">               <span class="function">rem <span class="title">WinMessage</span><span class="params">(<span class="string">&quot;&amp;arrBgn [3] =&quot;</span> | &amp;arrBgn [<span class="number">3</span>])</span></span>;</span><br><span class="line">               SQLExec(SQL.C_JOB_COUNT_SQL, &amp;arrEnd [<span class="number">1</span>], &amp;bgnDt, &amp;endDt, &amp;strCOUNT);</span><br><span class="line">               <span class="function">rem <span class="title">WinMessage</span><span class="params">(<span class="string">&quot;&amp;strCOUNT=&quot;</span> | &amp;strCOUNT)</span></span>;</span><br><span class="line">               If &amp;arrBgn [<span class="number">3</span>] &lt;&gt; &amp;bgnDt Then</span><br><span class="line">                  SQLExec(<span class="string">&quot;SELECT MIN(J.EFFDT) FROM ps_job j where j.emplid = :1 and j.empl_rcd = 0 and j.effdt &gt; to_date(:2,&#x27;YYYY-MM-DD&#x27;)&quot;</span>, &amp;strEmplid, &amp;bgnDt, &amp;bgnDt);</span><br><span class="line">               End-If;</span><br><span class="line">               &amp;arrRet = CreateArrayRept(<span class="string">&quot;tmp&quot;</span>, <span class="number">15</span>);</span><br><span class="line">               For &amp;i = <span class="number">1</span> <span class="function">To <span class="title">Value</span><span class="params">(&amp;strCOUNT)</span></span></span><br><span class="line"><span class="function">                  If &amp;i &gt; 1 Then</span></span><br><span class="line"><span class="function">                     &amp;bgnDt </span>= &amp;arrRet [<span class="number">3</span>]</span><br><span class="line">                  End-If;</span><br><span class="line">                  SQLExec(SQL.C_JOB_DAYS_SQL, &amp;arrEnd [<span class="number">1</span>], &amp;bgnDt, &amp;arrRet [<span class="number">1</span>], &amp;arrRet [<span class="number">2</span>], &amp;arrRet [<span class="number">3</span>], &amp;arrRet [<span class="number">4</span>], &amp;arrRet [<span class="number">5</span>], &amp;arrRet [<span class="number">6</span>], &amp;arrRet [<span class="number">7</span>], &amp;arrRet [<span class="number">8</span>], &amp;arrRet [<span class="number">9</span>], &amp;arrRet [<span class="number">10</span>], &amp;arrRet [<span class="number">11</span>], &amp;arrRet [<span class="number">12</span>], &amp;arrRet [<span class="number">13</span>], &amp;arrRet [<span class="number">14</span>], &amp;arrRet [<span class="number">15</span>]);</span><br><span class="line">                  rem If &amp;i &gt; <span class="number">1</span> Then</span><br><span class="line">               <span class="function">rem <span class="title">WinMessage</span><span class="params">(<span class="string">&quot;&amp;arrBgn [3]=&quot;</span> | &amp;arrBgn [<span class="number">3</span>] | <span class="string">&quot;----&amp;bgnDt=&quot;</span> | &amp;bgnDt)</span></span>;</span><br><span class="line">                  <span class="function">rem <span class="title">WinMessage</span><span class="params">(<span class="string">&quot;月中入职：&quot;</span> | &amp;arrRet [<span class="number">1</span>] | <span class="string">&quot;===&quot;</span> | &amp;arrRet [<span class="number">2</span>] | <span class="string">&quot;===&quot;</span> | &amp;arrRet [<span class="number">3</span>] | <span class="string">&quot;===&quot;</span> | &amp;arrRet [<span class="number">4</span>] | <span class="string">&quot;===&quot;</span> | &amp;arrRet [<span class="number">5</span>] | <span class="string">&quot;===&quot;</span> | &amp;arrRet [<span class="number">6</span>] | <span class="string">&quot;===&quot;</span> | &amp;arrRet [<span class="number">7</span>] | <span class="string">&quot;===&quot;</span> | &amp;arrRet [<span class="number">8</span>] | <span class="string">&quot;===&quot;</span> | &amp;arrRet [<span class="number">9</span>] | <span class="string">&quot;===&quot;</span> | &amp;arrRet [<span class="number">10</span>] | <span class="string">&quot;===&quot;</span> | &amp;arrRet [<span class="number">11</span>])</span></span>;</span><br><span class="line">                  rem End-If;</span><br><span class="line">                  rem 记录表 月中入职;</span><br><span class="line">                  If &amp;i &lt; Value(&amp;strCOUNT) Then</span><br><span class="line">                     <span class="function">rem <span class="title">WinMessage</span><span class="params">(<span class="string">&quot;月中入职：&quot;</span> | &amp;arrRet [<span class="number">1</span>] | <span class="string">&quot;===&quot;</span> | &amp;arrRet [<span class="number">2</span>] | <span class="string">&quot;===&quot;</span> | &amp;arrRet [<span class="number">3</span>] | <span class="string">&quot;===&quot;</span> | &amp;arrRet [<span class="number">4</span>] | <span class="string">&quot;===&quot;</span> | &amp;arrRet [<span class="number">5</span>] | <span class="string">&quot;===&quot;</span> | &amp;arrRet [<span class="number">6</span>] | <span class="string">&quot;===&quot;</span> | &amp;arrRet [<span class="number">7</span>] | <span class="string">&quot;===&quot;</span> | &amp;arrRet [<span class="number">8</span>] | <span class="string">&quot;===&quot;</span> | &amp;arrRet [<span class="number">9</span>] | <span class="string">&quot;===&quot;</span> | &amp;arrRet [<span class="number">10</span>] | <span class="string">&quot;===&quot;</span> | &amp;arrRet [<span class="number">11</span>])</span></span>;</span><br><span class="line">                     SQLExec(<span class="string">&quot;insert into PS_C_CAL_JOB_TBL values(:1,:2,:3,:4,:5,:6,:7,:8,:9,:10,to_date(:11,&#x27;YYYY-MM-DD&#x27;),:12,:13,&#x27;N&#x27;)&quot;</span>, &amp;arrRet [<span class="number">1</span>], &amp;cal_prd_id, &amp;arrRet [<span class="number">8</span>], &amp;arrRet [<span class="number">9</span>], &amp;arrRet [<span class="number">10</span>], &amp;arrRet [<span class="number">11</span>], &amp;arrRet [<span class="number">12</span>], &amp;arrRet [<span class="number">13</span>], &amp;arrRet [<span class="number">14</span>], &amp;arrRet [<span class="number">15</span>], &amp;arrRet [<span class="number">3</span>], &amp;arrRet [<span class="number">7</span>], <span class="string">&quot;0&quot;</span>);</span><br><span class="line">                     SQLExec(<span class="string">&quot;commit&quot;</span>);</span><br><span class="line">                  End-If;</span><br><span class="line">                  </span><br><span class="line">               End-For;</span><br><span class="line">               rem 处理月末的记录;</span><br><span class="line">               SQLExec(SQL.C_LAST_DAYS_SQL, &amp;arrEnd [<span class="number">1</span>], &amp;endDt, &amp;arrRet [<span class="number">1</span>], &amp;arrRet [<span class="number">2</span>], &amp;arrRet [<span class="number">3</span>], &amp;arrRet [<span class="number">4</span>], &amp;arrRet [<span class="number">5</span>], &amp;arrRet [<span class="number">6</span>], &amp;arrRet [<span class="number">7</span>], &amp;arrRet [<span class="number">8</span>], &amp;arrRet [<span class="number">9</span>], &amp;arrRet [<span class="number">10</span>], &amp;arrRet [<span class="number">11</span>], &amp;arrRet [<span class="number">12</span>], &amp;arrRet [<span class="number">13</span>], &amp;arrRet [<span class="number">14</span>], &amp;arrRet [<span class="number">15</span>]);</span><br><span class="line">               <span class="function">rem <span class="title">WinMessage</span><span class="params">(<span class="string">&quot;月中入职：&quot;</span> | &amp;arrRet [<span class="number">1</span>] | <span class="string">&quot;===&quot;</span> | &amp;arrRet [<span class="number">2</span>] | <span class="string">&quot;===&quot;</span> | &amp;arrRet [<span class="number">3</span>] | <span class="string">&quot;===&quot;</span> | &amp;arrRet [<span class="number">4</span>] | <span class="string">&quot;===&quot;</span> | &amp;arrRet [<span class="number">5</span>] | <span class="string">&quot;===&quot;</span> | &amp;arrRet [<span class="number">6</span>] | <span class="string">&quot;===&quot;</span> | &amp;arrRet [<span class="number">7</span>] | <span class="string">&quot;===&quot;</span> | &amp;arrRet [<span class="number">8</span>] | <span class="string">&quot;===&quot;</span> | &amp;arrRet [<span class="number">9</span>] | <span class="string">&quot;===&quot;</span> | &amp;arrRet [<span class="number">10</span>] | <span class="string">&quot;===&quot;</span> | &amp;arrRet [<span class="number">11</span>])</span></span>;</span><br><span class="line">               SQLExec(<span class="string">&quot;insert into PS_C_CAL_JOB_TBL values(:1,:2,:3,:4,:5,:6,:7,:8,:9,:10,to_date(:11,&#x27;YYYY-MM-DD&#x27;),:12,:13,&#x27;N&#x27;)&quot;</span>, &amp;arrRet [<span class="number">1</span>], &amp;cal_prd_id, &amp;arrRet [<span class="number">8</span>], &amp;arrRet [<span class="number">9</span>], &amp;arrRet [<span class="number">10</span>], &amp;arrRet [<span class="number">11</span>], &amp;arrRet [<span class="number">12</span>], &amp;arrRet [<span class="number">13</span>], &amp;arrRet [<span class="number">14</span>], &amp;arrRet [<span class="number">15</span>], &amp;arrRet [<span class="number">3</span>], &amp;arrRet [<span class="number">7</span>], <span class="string">&quot;0&quot;</span>);</span><br><span class="line">               SQLExec(<span class="string">&quot;commit&quot;</span>);</span><br><span class="line">            Else</span><br><span class="line">               <span class="function">rem <span class="title">WinMessage</span><span class="params">(<span class="string">&quot;进入月前入职，月后离职&quot;</span>)</span></span>;</span><br><span class="line">               SQLExec(SQL.C_JOB_COUNT_SQL, &amp;arrBgn [<span class="number">1</span>], &amp;bgnDt, &amp;endDt, &amp;strCOUNT);</span><br><span class="line">               &amp;arrRet = CreateArrayRept(<span class="string">&quot;tmp&quot;</span>, <span class="number">15</span>);</span><br><span class="line">               For &amp;i = <span class="number">1</span> <span class="function">To <span class="title">Value</span><span class="params">(&amp;strCOUNT)</span></span></span><br><span class="line"><span class="function">                  If &amp;i &gt; 1 Then</span></span><br><span class="line"><span class="function">                     &amp;bgnDt </span>= &amp;arrRet [<span class="number">3</span>]</span><br><span class="line">                  End-If;</span><br><span class="line">                  SQLExec(SQL.C_JOB_DAYS_SQL, &amp;arrBgn [<span class="number">1</span>], &amp;bgnDt, &amp;arrRet [<span class="number">1</span>], &amp;arrRet [<span class="number">2</span>], &amp;arrRet [<span class="number">3</span>], &amp;arrRet [<span class="number">4</span>], &amp;arrRet [<span class="number">5</span>], &amp;arrRet [<span class="number">6</span>], &amp;arrRet [<span class="number">7</span>], &amp;arrRet [<span class="number">8</span>], &amp;arrRet [<span class="number">9</span>], &amp;arrRet [<span class="number">10</span>], &amp;arrRet [<span class="number">11</span>], &amp;arrRet [<span class="number">12</span>], &amp;arrRet [<span class="number">13</span>], &amp;arrRet [<span class="number">14</span>], &amp;arrRet [<span class="number">15</span>]);</span><br><span class="line">                  rem 记录表  月前入职月后离职;</span><br><span class="line">                  <span class="function">rem <span class="title">WinMessage</span><span class="params">(<span class="string">&quot;月前入职，月后离职：&quot;</span> | &amp;arrRet [<span class="number">1</span>] | <span class="string">&quot;===&quot;</span> | &amp;arrRet [<span class="number">2</span>] | <span class="string">&quot;===&quot;</span> | &amp;arrRet [<span class="number">3</span>] | <span class="string">&quot;===&quot;</span> | &amp;arrRet [<span class="number">4</span>] | <span class="string">&quot;===&quot;</span> | &amp;arrRet [<span class="number">5</span>] | <span class="string">&quot;===&quot;</span> | &amp;arrRet [<span class="number">6</span>] | <span class="string">&quot;===&quot;</span> | &amp;arrRet [<span class="number">7</span>] | <span class="string">&quot;===&quot;</span> | &amp;arrRet [<span class="number">8</span>] | <span class="string">&quot;===&quot;</span> | &amp;arrRet [<span class="number">9</span>] | <span class="string">&quot;===&quot;</span> | &amp;arrRet [<span class="number">10</span>] | <span class="string">&quot;===&quot;</span> | &amp;arrRet [<span class="number">11</span>])</span></span>;</span><br><span class="line">                  SQLExec(<span class="string">&quot;insert into PS_C_CAL_JOB_TBL values(:1,:2,:3,:4,:5,:6,:7,:8,:9,:10,to_date(:11,&#x27;YYYY-MM-DD&#x27;),:12,:13,&#x27;N&#x27;)&quot;</span>, &amp;arrRet [<span class="number">1</span>], &amp;cal_prd_id, &amp;arrRet [<span class="number">8</span>], &amp;arrRet [<span class="number">9</span>], &amp;arrRet [<span class="number">10</span>], &amp;arrRet [<span class="number">11</span>], &amp;arrRet [<span class="number">12</span>], &amp;arrRet [<span class="number">13</span>], &amp;arrRet [<span class="number">14</span>], &amp;arrRet [<span class="number">15</span>], &amp;arrRet [<span class="number">3</span>], &amp;arrRet [<span class="number">7</span>], <span class="string">&quot;0&quot;</span>);</span><br><span class="line">                  SQLExec(<span class="string">&quot;commit&quot;</span>);</span><br><span class="line">               End-For;</span><br><span class="line">               SQLExec(SQL.C_LAST_DAYS_SQL, &amp;arrEnd [<span class="number">1</span>], &amp;endDt, &amp;arrRet [<span class="number">1</span>], &amp;arrRet [<span class="number">2</span>], &amp;arrRet [<span class="number">3</span>], &amp;arrRet [<span class="number">4</span>], &amp;arrRet [<span class="number">5</span>], &amp;arrRet [<span class="number">6</span>], &amp;arrRet [<span class="number">7</span>], &amp;arrRet [<span class="number">8</span>], &amp;arrRet [<span class="number">9</span>], &amp;arrRet [<span class="number">10</span>], &amp;arrRet [<span class="number">11</span>], &amp;arrRet [<span class="number">12</span>], &amp;arrRet [<span class="number">13</span>], &amp;arrRet [<span class="number">14</span>], &amp;arrRet [<span class="number">15</span>]);</span><br><span class="line">               <span class="function">rem <span class="title">MessageBox</span><span class="params">(<span class="number">0</span>, <span class="string">&quot;&quot;</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="string">&quot;月前入职，月后离职：&quot;</span> | &amp;arrRet [<span class="number">1</span>] | <span class="string">&quot;===&quot;</span> | &amp;arrRet [<span class="number">2</span>] | <span class="string">&quot;===&quot;</span> | &amp;arrRet [<span class="number">3</span>] | <span class="string">&quot;===&quot;</span> | &amp;arrRet [<span class="number">4</span>] | <span class="string">&quot;===&quot;</span> | &amp;arrRet [<span class="number">5</span>] | <span class="string">&quot;===&quot;</span> | &amp;arrRet [<span class="number">6</span>] | <span class="string">&quot;===&quot;</span> | &amp;arrRet [<span class="number">7</span>] | <span class="string">&quot;===&quot;</span> | &amp;arrRet [<span class="number">8</span>] | <span class="string">&quot;===&quot;</span> | &amp;arrRet [<span class="number">9</span>] | <span class="string">&quot;===&quot;</span> | &amp;arrRet [<span class="number">10</span>] | <span class="string">&quot;===&quot;</span> | &amp;arrRet [<span class="number">11</span>])</span></span>;</span><br><span class="line">               SQLExec(<span class="string">&quot;insert into PS_C_CAL_JOB_TBL values(:1,:2,:3,:4,:5,:6,:7,:8,:9,:10,to_date(:11,&#x27;YYYY-MM-DD&#x27;),:12,:13,&#x27;N&#x27;)&quot;</span>, &amp;arrRet [<span class="number">1</span>], &amp;cal_prd_id, &amp;arrRet [<span class="number">8</span>], &amp;arrRet [<span class="number">9</span>], &amp;arrRet [<span class="number">10</span>], &amp;arrRet [<span class="number">11</span>], &amp;arrRet [<span class="number">12</span>], &amp;arrRet [<span class="number">13</span>], &amp;arrRet [<span class="number">14</span>], &amp;arrRet [<span class="number">15</span>], &amp;arrRet [<span class="number">3</span>], &amp;arrRet [<span class="number">7</span>], <span class="string">&quot;0&quot;</span>);</span><br><span class="line">               SQLExec(<span class="string">&quot;commit&quot;</span>);</span><br><span class="line">            End-If;</span><br><span class="line">         End-If;</span><br><span class="line">      End-If;</span><br><span class="line">      </span><br><span class="line">      </span><br><span class="line">      <span class="comment">/*更新月份总天数*/</span></span><br><span class="line">      Local number &amp;numCount;</span><br><span class="line">      Local number &amp;numTotal_days;</span><br><span class="line">      SQLExec(<span class="string">&quot;SELECT count(1) FROM PS_C_CAL_JOB_TBL  c  where c.emplid = :1  and c.cal_prd_id = :2 &quot;</span>, &amp;strEmplid, &amp;cal_prd_id, &amp;numCount);</span><br><span class="line">      If &amp;numCount &gt; <span class="number">0</span> Then</span><br><span class="line">         SQLExec(<span class="string">&quot;SELECT SUM(C.DAYS) TOTAL_DAYS   FROM PS_C_CAL_JOB_TBL C  WHERE C.EMPLID = :1  AND C.CAL_PRD_ID = :2 GROUP BY C.EMPLID, C.CAL_PRD_ID &quot;</span>, &amp;strEmplid, &amp;cal_prd_id, &amp;numTotal_days);</span><br><span class="line">         SQLExec(<span class="string">&quot;UPDATE PS_C_CAL_JOB_TBL C SET C.DAYS_TOTAL = :1 where c.emplid = :2 and c.cal_prd_id = :3 &quot;</span>, &amp;numTotal_days, &amp;strEmplid, &amp;cal_prd_id);</span><br><span class="line">         SQLExec(<span class="string">&quot;commit&quot;</span>);</span><br><span class="line">      End-If;</span><br><span class="line">         </span><br><span class="line">end-method;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PeopleSoft </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PeopleSoft-进程挂了不能通过页面重启的解决方案</title>
      <link href="2020/12/21/PeopleSoft-%E8%BF%9B%E7%A8%8B%E6%8C%82%E4%BA%86%E4%B8%8D%E8%83%BD%E9%80%9A%E8%BF%87%E9%A1%B5%E9%9D%A2%E9%87%8D%E5%90%AF%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
      <url>2020/12/21/PeopleSoft-%E8%BF%9B%E7%A8%8B%E6%8C%82%E4%BA%86%E4%B8%8D%E8%83%BD%E9%80%9A%E8%BF%87%E9%A1%B5%E9%9D%A2%E9%87%8D%E5%90%AF%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</url>
      
        <content type="html"><![CDATA[<h2 id="Solution-1"><a href="#Solution-1" class="headerlink" title="Solution 1:"></a>Solution 1:</h2><p>If the issue occurs due to a disabled e-mail address/Oprid, remove the Oprid from the Application Engine’s notification list and submit the Application Engine process from scratch.</p><h2 id="Solution-2"><a href="#Solution-2" class="headerlink" title="Solution 2:"></a>Solution 2:</h2><p>To resolve this problem, take any of the following steps:</p><ol><li>Update these two tables to set the RETRYCOUNT field appropriately.</li></ol><p>a) UPDATE PSPRCSRQST SET RETRYCOUNT=’-1’ WHERE PRCSINSTANCE=##<br>UPDATE PSPRCSQUE SET RETRYCOUNT=’-1’ WHERE PRCSINSTANCE=##</p><p>b) Navigate to PeopleTools - Process Monitor - Details for the affected process - choose to Restart the process.</p><p>OR</p><ol start="2"><li>Restart the Application Engine from the Command line:</li></ol><p>a) Connect to the NT machine as the Windows id of the user starting the Oracle Proc Mgr.</p><p>b) Set these two environment variables:</p><p>Set PS_SERVDIR=%PS_HOME%\appserv\prcs\DBNAME<br>Set PS_SERVER_CFG=%PS_SERVDIR%\psprcs.cfg</p><p>c) Navigate to the server bin directory:</p><p>cd %PS_HOME%\bin\server\winx86</p><p>d) Run the Application Engine using the parameter list for the failed process instance.</p><p>psae -CT DBTYPE -CD DBNAME -CO <Same Oprid> -CP <same Password> -I <same process instance number> -R <same run control> -AI <Application Engine program name></p><p>OR</p><ol start="3"><li>Submit the process again from scratch after deleting the information from the following tables:</li></ol><p>DELETE FROM PS_AERUNCONTROL WHERE PROCESS_INSTANCE=##<br>DELETE FROM PS_AERUNCONTROLPC WHERE PROCESS_INSTANCE=##<br>DELETE FROM PS_AETEMPTBLMGR WHERE PROCESS_INSTANCE=##</p><p>Warning, this approach might not be the best one as the application tables may have been updated with information - ie process information, flags that will be lost once the delete statements are run.</p><p>KEYWORDS:<br>E-RD/PRCS, Process Scheduler, Post-Failure steps</p>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PeopleSoft </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Oracle-PLSQLDEV解决中文乱码问题</title>
      <link href="2020/12/21/Oracle-PLSQLDEV%E8%A7%A3%E5%86%B3%E4%B8%AD%E6%96%87%E4%B9%B1%E7%A0%81%E9%97%AE%E9%A2%98/"/>
      <url>2020/12/21/Oracle-PLSQLDEV%E8%A7%A3%E5%86%B3%E4%B8%AD%E6%96%87%E4%B9%B1%E7%A0%81%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<a id="more"></a><h2 id="plsql中文乱码解决方法"><a href="#plsql中文乱码解决方法" class="headerlink" title="plsql中文乱码解决方法"></a>plsql中文乱码解决方法</h2><p>SELECT ‘部门管理员离职’ FROM dual</p><img src="https://gitee.com/gek7777/cdn.io/raw/master/image/20201221112846.png"/><p>select userenv(‘language’) from dual;</p><img src="https://gitee.com/gek7777/cdn.io/raw/master/image/20201221112938.png"/><p>select * from V$NLS_PARAMETERS</p><img src="https://gitee.com/gek7777/cdn.io/raw/master/image/20201221113035.png"/><p>发现2、3对应的language不一致，则，在环境变量中配置，AMERICAN_AMERICA.AL32UTF8 （2中查出的值）</p><p>变量名：NLS_LANG</p><p>变量值：AMERICAN_AMERICA.AL32UTF8</p><img src="https://gitee.com/gek7777/cdn.io/raw/master/image/20201221113141.png"/><p>重启PLSQLDEV，重新查询：select userenv(‘language’) from dual;</p><p>搞定！</p><img src="https://gitee.com/gek7777/cdn.io/raw/master/image/20201221113510.png"/>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Oracle-表闪回</title>
      <link href="2020/12/21/Oracle-%E8%A1%A8%E9%97%AA%E5%9B%9E/"/>
      <url>2020/12/21/Oracle-%E8%A1%A8%E9%97%AA%E5%9B%9E/</url>
      
        <content type="html"><![CDATA[<a id="more"></a><h2 id="误操作"><a href="#误操作" class="headerlink" title="误操作"></a>误操作</h2><p>不小心删除了表数据，或者更新了表数据。这时候记下操作的大致时间。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span>  PS_C_RE_STATUS_TBL </span><br><span class="line"><span class="comment">/*误操作*/</span></span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> PS_C_RE_STATUS_TBL</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="备份误操作后产生的数据（最新的数据）"><a href="#备份误操作后产生的数据（最新的数据）" class="headerlink" title="备份误操作后产生的数据（最新的数据）"></a>备份误操作后产生的数据（最新的数据）</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*创建当前数据备份表*/</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> PS_C_RE_STATUS_TBL_back <span class="keyword">as</span> <span class="keyword">select</span> * <span class="keyword">from</span>  PS_C_RE_STATUS_TBL</span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span>  PS_C_RE_STATUS_TBL_back </span><br></pre></td></tr></table></figure><h2 id="开启表闪回功能，并且闪回表到指定时间"><a href="#开启表闪回功能，并且闪回表到指定时间" class="headerlink" title="开启表闪回功能，并且闪回表到指定时间"></a>开启表闪回功能，并且闪回表到指定时间</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*开启表闪回*/</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> PS_C_RE_STATUS_TBL <span class="keyword">enable</span> <span class="keyword">row</span> <span class="keyword">movement</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*表闪回指定数据*/</span></span><br><span class="line">FLASHBACK TABLE PS_C_RE_STATUS_TBL TO TIMESTAMP TO_TIMESTAMP(&#x27;2020-12-21 11:11:00&#x27;, &#x27;YYYY-MM-DD HH24:MI:SS&#x27;);</span><br><span class="line"></span><br><span class="line"><span class="comment">/*关闭表闪回*/</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> PS_C_RE_STATUS_TBL <span class="keyword">disable</span> <span class="keyword">row</span> <span class="keyword">movement</span>;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PeopleSoft-日志记录实现</title>
      <link href="2020/11/06/PeopleSoft-%E6%97%A5%E5%BF%97%E8%AE%B0%E5%BD%95%E5%AE%9E%E7%8E%B0/"/>
      <url>2020/11/06/PeopleSoft-%E6%97%A5%E5%BF%97%E8%AE%B0%E5%BD%95%E5%AE%9E%E7%8E%B0/</url>
      
        <content type="html"><![CDATA[<h2 id="PS记录日志的两种方法："><a href="#PS记录日志的两种方法：" class="headerlink" title="PS记录日志的两种方法："></a>PS记录日志的两种方法：</h2><h3 id="服务器log附件"><a href="#服务器log附件" class="headerlink" title="服务器log附件"></a>服务器log附件</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Local File &amp;fileLog;</span><br><span class="line">&amp;fileLog = GetFile(&quot;/file<span class="comment">/******.log&quot;, &quot;A&quot;, &quot;A&quot;, %FilePath_Absolute);</span></span><br><span class="line"><span class="comment">&amp;fileLog.WriteLine(&quot;Begin *****&quot;);</span></span><br><span class="line"><span class="comment">&amp;fileLog.WriteLine(&quot;Begin *****&quot;);</span></span><br><span class="line"><span class="comment"></span></span><br></pre></td></tr></table></figure><h3 id="创建日志表"><a href="#创建日志表" class="headerlink" title="创建日志表"></a>创建日志表</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* begin 日志记录*/</span></span><br><span class="line">Local Record &amp;reApplyLog = CreateRecord(Record.C_EMPL_PRD_LOG);</span><br><span class="line">&amp;reApplyLog.C_APP_SEQ.Value = &amp;recC_EMPL_PRD_REQ.C_APP_SEQ.Value;</span><br><span class="line">If Not &amp;reApplyLog.SelectByKey() Then</span><br><span class="line">   &amp;reApplyLog.C_APP_SEQ.Value = &amp;recC_EMPL_PRD_REQ.C_APP_SEQ.Value;</span><br><span class="line">   &amp;reApplyLog.C_APP_DT.Value = &amp;recC_EMPL_PRD_REQ.C_APP_DT.Value;</span><br><span class="line">   &amp;reApplyLog.EMPLID.Value = &amp;recC_EMPL_PRD_REQ.EMPLID.Value;</span><br><span class="line">   &amp;reApplyLog.DEPTID.Value = &amp;recC_EMPL_PRD_REQ.DEPTID.Value;</span><br><span class="line">   &amp;reApplyLog.EMPLID2.Value = &amp;recC_EMPL_PRD_REQ.EMPLID2.Value;</span><br><span class="line">   &amp;reApplyLog.NAME1.Value = &amp;recC_EMPL_PRD_REQ.NAME1.Value;</span><br><span class="line">   &amp;reApplyLog.C_REQ_JSON.Value = &amp;jsonBody;</span><br><span class="line">   &amp;reApplyLog.C_INTERFACE_STATUS.Value = Substring(&amp;responseBody, Len(&amp;responseBody) - 2, 1);</span><br><span class="line">   &amp;reApplyLog.DESCRLONG.Value = &amp;responseBody;</span><br><span class="line">   &amp;reApplyLog.LASTUPDDTTM.Value = %Datetime;</span><br><span class="line">   &amp;reApplyLog.Insert();</span><br><span class="line">Else</span><br><span class="line">   &amp;reApplyLog.C_APP_SEQ.Value = &amp;recC_EMPL_PRD_REQ.C_APP_SEQ.Value;</span><br><span class="line">   &amp;reApplyLog.C_APP_DT.Value = &amp;recC_EMPL_PRD_REQ.C_APP_DT.Value;</span><br><span class="line">   &amp;reApplyLog.EMPLID.Value = &amp;recC_EMPL_PRD_REQ.EMPLID.Value;</span><br><span class="line">   &amp;reApplyLog.DEPTID.Value = &amp;recC_EMPL_PRD_REQ.DEPTID.Value;</span><br><span class="line">   &amp;reApplyLog.EMPLID2.Value = &amp;recC_EMPL_PRD_REQ.EMPLID2.Value;</span><br><span class="line">   &amp;reApplyLog.NAME1.Value = &amp;recC_EMPL_PRD_REQ.NAME1.Value;</span><br><span class="line">   &amp;reApplyLog.C_REQ_JSON.Value = &amp;jsonBody;</span><br><span class="line">   &amp;reApplyLog.C_INTERFACE_STATUS.Value = Substring(&amp;responseBody, Len(&amp;responseBody) - 2, 1);</span><br><span class="line">   &amp;reApplyLog.DESCRLONG.Value = &amp;responseBody;</span><br><span class="line">   &amp;reApplyLog.LASTUPDDTTM.Value = %Datetime;</span><br><span class="line">   &amp;reApplyLog.Update();</span><br><span class="line"><span class="keyword">End</span>-<span class="keyword">If</span>;</span><br><span class="line"><span class="comment">/* end 日志记录*/</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PeopleSoft </tag>
            
            <tag> PeopleCode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PeopleSoft-（中国）身份证格式化、校验函数</title>
      <link href="2020/11/03/PeopleSoft-%EF%BC%88%E4%B8%AD%E5%9B%BD%EF%BC%89%E8%BA%AB%E4%BB%BD%E8%AF%81%E6%A0%BC%E5%BC%8F%E5%8C%96%E3%80%81%E6%A0%A1%E9%AA%8C%E5%87%BD%E6%95%B0/"/>
      <url>2020/11/03/PeopleSoft-%EF%BC%88%E4%B8%AD%E5%9B%BD%EF%BC%89%E8%BA%AB%E4%BB%BD%E8%AF%81%E6%A0%BC%E5%BC%8F%E5%8C%96%E3%80%81%E6%A0%A1%E9%AA%8C%E5%87%BD%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<h3 id="身份证格式化函数"><a href="#身份证格式化函数" class="headerlink" title="身份证格式化函数"></a>身份证格式化函数</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/******************************************************</span></span><br><span class="line"><span class="comment"> Function   : Format_NID</span></span><br><span class="line"><span class="comment"> Purpose    : Convert National_ID from National_ID_Format into National_ID</span></span><br><span class="line"><span class="comment">without special characters and viceversa </span></span><br><span class="line"><span class="comment"> Version    : 3.3.99</span></span><br><span class="line"><span class="comment"> Parameters : COUNTRY,NID_TYPE,INPUT,DIRECTION</span></span><br><span class="line"><span class="comment"> Returns    : STRING</span></span><br><span class="line"><span class="comment">******************************************************/</span></span><br><span class="line"><span class="function">Function <span class="title">Format_NID</span><span class="params">(&amp;COUNTRY, &amp;NID_TYPE, &amp;INPUT, &amp;DIRECTION)</span> Returns string</span>;</span><br><span class="line">   &amp;ALPHA_STRING = <span class="string">&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz&quot;</span>;</span><br><span class="line">   </span><br><span class="line">   If &amp;COUNTRY = <span class="string">&quot;HKG&quot;</span> Or</span><br><span class="line">         &amp;COUNTRY = <span class="string">&quot;MYS&quot;</span> Then</span><br><span class="line">      &amp;ALPHA_STRING = &amp;ALPHA_STRING | <span class="string">&quot; &quot;</span>;</span><br><span class="line">   End-If;</span><br><span class="line">   </span><br><span class="line">   <span class="comment">/* permit DEU Pension-Insurance Number (MNRBV) to store some special chars. */</span></span><br><span class="line">   If &amp;COUNTRY = <span class="string">&quot;DEU&quot;</span> And</span><br><span class="line">         &amp;NID_TYPE = <span class="string">&quot;MNRBV&quot;</span> Then</span><br><span class="line">      &amp;ALPHA_STRING = &amp;ALPHA_STRING | <span class="string">&quot; /-.&quot;</span>;</span><br><span class="line">   End-If;</span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">   &amp;NUM_STRING = <span class="string">&quot;1234567890&quot;</span>;</span><br><span class="line">   If &amp;DIRECTION = <span class="string">&quot;INTODB&quot;</span> Then</span><br><span class="line">      &amp;OUTPUT = <span class="string">&quot;&quot;</span>;</span><br><span class="line">      <span class="function">If <span class="title">All</span><span class="params">(&amp;INPUT)</span> Then</span></span><br><span class="line"><span class="function">         &amp;LENGTH </span>= Len(&amp;INPUT);</span><br><span class="line">         &amp;LOOP = <span class="number">1</span>;</span><br><span class="line">         While &amp;LOOP &lt;= &amp;LENGTH</span><br><span class="line">            <span class="comment">/* check for alpha in the format */</span></span><br><span class="line">            <span class="function">If <span class="title">Find</span><span class="params">(Substring(&amp;INPUT, &amp;LOOP, <span class="number">1</span>)</span>, &amp;ALPHA_STRING) &lt;&gt; 0 Then</span></span><br><span class="line"><span class="function">               &amp;OUTPUT </span>= &amp;OUTPUT | Substring(&amp;INPUT, &amp;LOOP, <span class="number">1</span>);</span><br><span class="line">            Else</span><br><span class="line">               <span class="comment">/* check for numeric in the format */</span></span><br><span class="line">               <span class="function">If <span class="title">Find</span><span class="params">(Substring(&amp;INPUT, &amp;LOOP, <span class="number">1</span>)</span>, &amp;NUM_STRING) &lt;&gt; 0 Then</span></span><br><span class="line"><span class="function">                  &amp;OUTPUT </span>= &amp;OUTPUT | Substring(&amp;INPUT, &amp;LOOP, <span class="number">1</span>);</span><br><span class="line">               End-If;</span><br><span class="line">            End-If;</span><br><span class="line">            &amp;LOOP = &amp;LOOP + <span class="number">1</span>;</span><br><span class="line">         End-While;</span><br><span class="line">      End-If;</span><br><span class="line">      Return &amp;OUTPUT;</span><br><span class="line">   Else</span><br><span class="line">      <span class="function">If <span class="title">All</span><span class="params">(&amp;INPUT)</span> Then</span></span><br><span class="line"><span class="function">         <span class="title">SQLExec</span><span class="params">(<span class="string">&quot;Select NATIONAL_ID_FORMAT from PS_NID_TYPE_TBL Where COUNTRY=:1 AND NATIONAL_ID_TYPE =:2&quot;</span>, &amp;COUNTRY, &amp;NID_TYPE, &amp;NATIONAL_ID_FORMAT)</span></span>;</span><br><span class="line">         &amp;LENGTH = Len(&amp;INPUT);</span><br><span class="line">         &amp;FORMATLENGTH = Len(&amp;NATIONAL_ID_FORMAT);</span><br><span class="line">         &amp;LOOP = <span class="number">1</span>;</span><br><span class="line">         &amp;STRINGCOUNTER = <span class="number">1</span>;</span><br><span class="line">         </span><br><span class="line">         <span class="comment">/* 12/27/99 [JDL] - Modified so that countries with &#x27;NO&#x27; NID formatting display whatever is stored on the database. NO means &quot;No Formatting&quot; not &quot;No NID display.&quot; */</span></span><br><span class="line">         </span><br><span class="line">         If &amp;NID_TYPE &lt;&gt; <span class="string">&quot;NO&quot;</span> Then</span><br><span class="line">            While &amp;LOOP &lt;= &amp;LENGTH Or</span><br><span class="line">                  &amp;STRINGCOUNTER &lt;= &amp;FORMATLENGTH</span><br><span class="line">               <span class="comment">/* check for alpha in the format */</span></span><br><span class="line">               <span class="function">If <span class="title">Find</span><span class="params">(Substring(&amp;NATIONAL_ID_FORMAT, &amp;STRINGCOUNTER, <span class="number">1</span>)</span>, &amp;ALPHA_STRING) &lt;&gt; 0 Then</span></span><br><span class="line"><span class="function">                  &amp;OUTPUT </span>= &amp;OUTPUT | Substring(&amp;INPUT, &amp;LOOP, <span class="number">1</span>);</span><br><span class="line">               Else</span><br><span class="line">                  <span class="comment">/* check for numeric in the format */</span></span><br><span class="line">                  <span class="function">If <span class="title">Find</span><span class="params">(Substring(&amp;NATIONAL_ID_FORMAT, &amp;STRINGCOUNTER, <span class="number">1</span>)</span>, &amp;NUM_STRING) &lt;&gt; 0 Then</span></span><br><span class="line"><span class="function">                     &amp;OUTPUT </span>= &amp;OUTPUT | Substring(&amp;INPUT, &amp;LOOP, <span class="number">1</span>);</span><br><span class="line">                     <span class="comment">/* check for special character in the format */</span></span><br><span class="line">                  Else</span><br><span class="line">                     <span class="function">If <span class="title">Substring</span><span class="params">(&amp;NATIONAL_ID_FORMAT, &amp;STRINGCOUNTER, <span class="number">1</span>)</span> </span>= Substring(&amp;INPUT, &amp;LOOP, <span class="number">1</span>) Then</span><br><span class="line">                        &amp;OUTPUT = &amp;OUTPUT | Substring(&amp;INPUT, &amp;LOOP, <span class="number">1</span>);</span><br><span class="line">                     Else</span><br><span class="line">                        If &amp;STRINGCOUNTER &lt;= &amp;FORMATLENGTH Then</span><br><span class="line">                           &amp;OUTPUT = &amp;OUTPUT | Substring(&amp;NATIONAL_ID_FORMAT, &amp;STRINGCOUNTER, <span class="number">1</span>);</span><br><span class="line">                           &amp;LOOP = &amp;LOOP - <span class="number">1</span>;</span><br><span class="line">                        Else</span><br><span class="line">                           If &amp;FORMATLENGTH &gt; <span class="number">0</span> Then</span><br><span class="line">                              &amp;OUTPUT = &amp;OUTPUT | Substring(&amp;INPUT, &amp;LOOP, Len(&amp;INPUT));</span><br><span class="line">                           End-If;</span><br><span class="line">                        End-If;</span><br><span class="line">                     End-If;</span><br><span class="line">                  End-If;</span><br><span class="line">               End-If;</span><br><span class="line">               &amp;LOOP = &amp;LOOP + <span class="number">1</span>;</span><br><span class="line">               &amp;STRINGCOUNTER = &amp;STRINGCOUNTER + <span class="number">1</span>;</span><br><span class="line">            End-While;</span><br><span class="line">            If &amp;LENGTH + <span class="number">2</span> = &amp;FORMATLENGTH And</span><br><span class="line">                  &amp;COUNTRY = <span class="string">&quot;SGP&quot;</span> And</span><br><span class="line">                  &amp;NID_TYPE = <span class="string">&quot;WP&quot;</span> Then</span><br><span class="line">               &amp;OUTPUT = &amp;OUTPUT | <span class="string">&quot;-&quot;</span>;</span><br><span class="line">            End-If;</span><br><span class="line">         Else</span><br><span class="line">            &amp;OUTPUT = &amp;INPUT;</span><br><span class="line">         End-If;</span><br><span class="line">      End-If;</span><br><span class="line">      <span class="comment">/** in case an &amp;INPUT exist, but no Format found ... **/</span></span><br><span class="line">      <span class="function">If <span class="title">None</span><span class="params">(&amp;OUTPUT)</span> Then</span></span><br><span class="line"><span class="function">         &amp;OUTPUT </span>= &amp;INPUT</span><br><span class="line">      End-If;</span><br><span class="line">      Return &amp;OUTPUT;</span><br><span class="line">   End-If;</span><br><span class="line">End-Function;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="身份证校验函数"><a href="#身份证校验函数" class="headerlink" title="身份证校验函数"></a>身份证校验函数</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/******************************************************</span></span><br><span class="line"><span class="comment"> Function   : valid_NID 身份证号算法校验</span></span><br><span class="line"><span class="comment"> Purpose    : Convert National_ID from National_ID_Format into National_ID</span></span><br><span class="line"><span class="comment">without special characters and viceversa </span></span><br><span class="line"><span class="comment"> Version    : 3.3.99</span></span><br><span class="line"><span class="comment"> Parameters : COUNTRY,NID_TYPE,INPUT</span></span><br><span class="line"><span class="comment"> Returns    : STRING</span></span><br><span class="line"><span class="comment">******************************************************/</span></span><br><span class="line"><span class="function">Function <span class="title">valid_NID</span><span class="params">(&amp;NID)</span> Returns <span class="keyword">boolean</span></span>;</span><br><span class="line">   <span class="comment">/*身份证号（值与字段）*/</span></span><br><span class="line">   Local string &amp;strNID = &amp;NID;</span><br><span class="line">   Local string &amp;strMonth, &amp;strDay, &amp;strIdBirth;</span><br><span class="line">   <span class="comment">/*性别*/</span></span><br><span class="line">   Local string &amp;strSex = <span class="string">&quot; &quot;</span>;</span><br><span class="line">   Local number &amp;numNIDSex, &amp;i;</span><br><span class="line">   <span class="comment">/*身份证号检验：权值和校验值*/</span></span><br><span class="line">   Local array of number &amp;Wnum = CreateArray(<span class="number">7</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">5</span>, <span class="number">8</span>, <span class="number">4</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">6</span>, <span class="number">3</span>, <span class="number">7</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">5</span>, <span class="number">8</span>, <span class="number">4</span>, <span class="number">2</span>, <span class="number">1</span>);</span><br><span class="line">   Local array of string &amp;Cstr = CreateArray(<span class="string">&quot;1&quot;</span>, <span class="string">&quot;0&quot;</span>, <span class="string">&quot;X&quot;</span>, <span class="string">&quot;9&quot;</span>, <span class="string">&quot;8&quot;</span>, <span class="string">&quot;7&quot;</span>, <span class="string">&quot;6&quot;</span>, <span class="string">&quot;5&quot;</span>, <span class="string">&quot;4&quot;</span>, <span class="string">&quot;3&quot;</span>, <span class="string">&quot;2&quot;</span>); <span class="comment">/*校验值计算结果*/</span></span><br><span class="line">   Local number &amp;numResult = <span class="number">0</span>;</span><br><span class="line">   <span class="function">If <span class="title">All</span><span class="params">(&amp;strNID)</span> Then</span></span><br><span class="line"><span class="function">      <span class="comment">/*获取身份证号长度*/</span></span></span><br><span class="line"><span class="function">      &amp;numNIDlen </span>= Len(&amp;strNID);</span><br><span class="line">      </span><br><span class="line">      rem 验证省份;</span><br><span class="line">      SQLExec(<span class="string">&quot;select &#x27;Y&#x27; from dual where :1 in (&#x27;11&#x27;,&#x27;12&#x27;,&#x27;13&#x27;,&#x27;14&#x27;,&#x27;15&#x27;,&#x27;21&#x27;,&#x27;22&#x27;,&#x27;23&#x27;,&#x27;31&#x27;,&#x27;32&#x27;,&#x27;33&#x27;,&#x27;34&#x27;,&#x27;35&#x27;,&#x27;36&#x27;,&#x27;37&#x27;,&#x27;41&#x27;,&#x27;42&#x27;,&#x27;43&#x27;,&#x27;44&#x27;,&#x27;45&#x27;,&#x27;46&#x27;,&#x27;50&#x27;,&#x27;51&#x27;,&#x27;52&#x27;,&#x27;53&#x27;,&#x27;54&#x27;,&#x27;61&#x27;,&#x27;62&#x27;,&#x27;63&#x27;,&#x27;64&#x27;,&#x27;65&#x27;,&#x27;71&#x27;,&#x27;81&#x27;,&#x27;82&#x27;,&#x27;91&#x27;)&quot;</span>, Substring(&amp;strNID, <span class="number">1</span>, <span class="number">2</span>), &amp;flag1);</span><br><span class="line">      If &amp;flag1 &lt;&gt; <span class="string">&quot;Y&quot;</span> Then</span><br><span class="line">         Return False;</span><br><span class="line">      End-If;</span><br><span class="line">      </span><br><span class="line">      <span class="comment">/*1. 检查生日是否有效*/</span></span><br><span class="line">      SQLExec(<span class="string">&quot;select &#x27;Y&#x27; from dual where :1 in (&#x27;01&#x27;,&#x27;02&#x27;,&#x27;03&#x27;,&#x27;04&#x27;,&#x27;05&#x27;,&#x27;06&#x27;,&#x27;07&#x27;,&#x27;08&#x27;,&#x27;09&#x27;,&#x27;10&#x27;,&#x27;11&#x27;,&#x27;12&#x27;)&quot;</span>, Substring(&amp;strNID, <span class="number">11</span>, <span class="number">2</span>), &amp;flag2);</span><br><span class="line">      If &amp;flag2 &lt;&gt; <span class="string">&quot;Y&quot;</span> Then</span><br><span class="line">         Return False;</span><br><span class="line">      End-If;</span><br><span class="line">      </span><br><span class="line">      <span class="function">If <span class="title">Substring</span><span class="params">(&amp;strNID, <span class="number">11</span>, <span class="number">2</span>)</span> </span>= <span class="string">&quot;01&quot;</span> Or</span><br><span class="line">            Substring(&amp;strNID, <span class="number">11</span>, <span class="number">2</span>) = <span class="string">&quot;03&quot;</span> Or</span><br><span class="line">            Substring(&amp;strNID, <span class="number">11</span>, <span class="number">2</span>) = <span class="string">&quot;05&quot;</span> Or</span><br><span class="line">            Substring(&amp;strNID, <span class="number">11</span>, <span class="number">2</span>) = <span class="string">&quot;07&quot;</span> Or</span><br><span class="line">            Substring(&amp;strNID, <span class="number">11</span>, <span class="number">2</span>) = <span class="string">&quot;08&quot;</span> Or</span><br><span class="line">            Substring(&amp;strNID, <span class="number">11</span>, <span class="number">2</span>) = <span class="string">&quot;10&quot;</span> Or</span><br><span class="line">            Substring(&amp;strNID, <span class="number">11</span>, <span class="number">2</span>) = <span class="string">&quot;12&quot;</span> Then</span><br><span class="line">         SQLExec(<span class="string">&quot;    select &#x27;Y&#x27; from dual where to_number(substr(:1,13,2)) between 1 and 31&quot;</span>, &amp;strNID, &amp;flag31);</span><br><span class="line">         If &amp;flag31 &lt;&gt; <span class="string">&quot;Y&quot;</span> Then</span><br><span class="line">            Return False;</span><br><span class="line">         End-If;</span><br><span class="line">      End-If;</span><br><span class="line">      <span class="function">If <span class="title">Substring</span><span class="params">(&amp;strNID, <span class="number">11</span>, <span class="number">2</span>)</span> </span>= <span class="string">&quot;04&quot;</span> Or</span><br><span class="line">            Substring(&amp;strNID, <span class="number">11</span>, <span class="number">2</span>) = <span class="string">&quot;06&quot;</span> Or</span><br><span class="line">            Substring(&amp;strNID, <span class="number">11</span>, <span class="number">2</span>) = <span class="string">&quot;09&quot;</span> Or</span><br><span class="line">            Substring(&amp;strNID, <span class="number">11</span>, <span class="number">2</span>) = <span class="string">&quot;11&quot;</span> Then</span><br><span class="line">         SQLExec(<span class="string">&quot;    select &#x27;Y&#x27; from dual where to_number(substr(:1,13,2)) between 1 and 30&quot;</span>, &amp;strNID, &amp;flag32);</span><br><span class="line">         If &amp;flag32 &lt;&gt; <span class="string">&quot;Y&quot;</span> Then</span><br><span class="line">            Return False;</span><br><span class="line">         End-If;</span><br><span class="line">      End-If;</span><br><span class="line">      <span class="function">If <span class="title">Substring</span><span class="params">(&amp;strNID, <span class="number">11</span>, <span class="number">2</span>)</span> </span>= <span class="string">&quot;02&quot;</span> Then</span><br><span class="line">         SQLExec(<span class="string">&quot;select  MOD(to_number(:1), 4)  from dual&quot;</span>, Substring(&amp;strNID, <span class="number">7</span>, <span class="number">4</span>), &amp;num);</span><br><span class="line">         If &amp;num = <span class="number">0</span> Then</span><br><span class="line">            SQLExec(<span class="string">&quot;    select &#x27;Y&#x27; from dual where to_number(substr(:1,13,2)) between 1 and 29&quot;</span>, &amp;strNID, &amp;flag33);</span><br><span class="line">            If &amp;flag33 &lt;&gt; <span class="string">&quot;Y&quot;</span> Then</span><br><span class="line">               Return False;</span><br><span class="line">            End-If;</span><br><span class="line">         Else</span><br><span class="line">            SQLExec(<span class="string">&quot;    select &#x27;Y&#x27; from dual where to_number(substr(:1,13,2)) between 1 and 28&quot;</span>, &amp;strNID, &amp;flag34);</span><br><span class="line">            If &amp;flag34 &lt;&gt; <span class="string">&quot;Y&quot;</span> Then</span><br><span class="line">               Return False;</span><br><span class="line">            End-If;</span><br><span class="line">         End-If;</span><br><span class="line">      End-If;</span><br><span class="line"></span><br><span class="line">      SQLExec(<span class="string">&quot;select &#x27;Y&#x27; from dual where to_date(substr(:1,7,8) ,&#x27;yyyymmdd&#x27;) &gt; to_date(&#x27;19000101&#x27;,&#x27;yyyymmdd&#x27;) and to_date(substr(:1,7,8) ,&#x27;yyyymmdd&#x27;)&lt;=sysdate&quot;</span>, &amp;strNID, &amp;flag4);</span><br><span class="line">      If &amp;flag4 &lt;&gt; <span class="string">&quot;Y&quot;</span> Then</span><br><span class="line">         Return False;</span><br><span class="line">      End-If;</span><br><span class="line">      <span class="comment">/*2. 校验性别是否与提供的性别一致（15位最后一位、18位第17位为性别）*/</span> <span class="comment">/*15位最后一位、18位第17位为性别*/</span></span><br><span class="line">      </span><br><span class="line">      <span class="comment">/*3. 如果为18位身份证，校验最后一位校验位是否正确*/</span> <span class="comment">/*=================================================================== 公式：∑(a[i]*W[i]) mod 11( i = 2, 3, ..., 18) &quot;*&quot; 表示乘号</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">i­­­­­­­­表示身份证号码每一位的序号，从右至左，最左侧为18，最右侧为1。 a[i]­­­­­表示身份证号码第 i 位上的号码 W[i]­­­­­表示第 i 位上的权值 W[i] = 2^(i­1) mod 11 权值列表： 7, 9, 10, 5, 8, 4, 2, 1, 6, 3, 7, 9, 10, 5, 8, 4, 2, 1 以下是检验码表，R为计算结果，C为对应校验码： R 0 1 2 3 4 5 6 7 8 9 10 C 1 0 X 9 8 7 6 5 4 3 2 ===================================================================*/</span></span><br><span class="line">      If &amp;numNIDlen = <span class="number">18</span> Then</span><br><span class="line">         For &amp;i = <span class="number">1</span> To <span class="number">17</span></span><br><span class="line">            &amp;numResult = &amp;numResult + &amp;Wnum [&amp;i] * Value(Substring(&amp;strNID, &amp;i, <span class="number">1</span>))</span><br><span class="line">         End-For;</span><br><span class="line">         &amp;numResult = Mod(&amp;numResult, <span class="number">11</span>);</span><br><span class="line">         If &amp;Cstr [&amp;numResult + <span class="number">1</span>] &lt;&gt; Right(&amp;strNID, <span class="number">1</span>) Then</span><br><span class="line">            </span><br><span class="line">            Return False;</span><br><span class="line">         End-If;</span><br><span class="line">      End-If;</span><br><span class="line">   End-If;</span><br><span class="line">   Return True;</span><br><span class="line">End-Function;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PeopleSoft </tag>
            
            <tag> PeopleCode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PeopleSoft-页面元素隐藏的常用方法</title>
      <link href="2020/11/03/PeopleSoft-%E9%A1%B5%E9%9D%A2%E5%85%83%E7%B4%A0%E9%9A%90%E8%97%8F%E7%9A%84%E5%B8%B8%E7%94%A8%E6%96%B9%E6%B3%95/"/>
      <url>2020/11/03/PeopleSoft-%E9%A1%B5%E9%9D%A2%E5%85%83%E7%B4%A0%E9%9A%90%E8%97%8F%E7%9A%84%E5%B8%B8%E7%94%A8%E6%96%B9%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h3 id="实现置灰："><a href="#实现置灰：" class="headerlink" title="实现置灰："></a>实现置灰：</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*按钮*/</span></span><br><span class="line">C_TEST_ZL_WRK.C_BTN1.DisplayOnly = True;</span><br><span class="line"><span class="comment">/*可编辑字段*/</span></span><br><span class="line">Gray(C_EMPL_DEMAND_T.C_SECTION_TYPE);</span><br><span class="line"><span class="comment">/*grid列*/</span></span><br><span class="line">Local Grid &amp;g = GetGrid(Page.C_EMPL_DEMAND_PG, <span class="string">&quot;C_EMPL_DEMAND_S&quot;</span>);</span><br><span class="line">&amp;g.GetColumn(<span class="string">&quot;C_RE_NO&quot;</span>).Enabled = False;</span><br><span class="line"><span class="comment">/*页面*/</span>     </span><br><span class="line">Page.C_EMPL_DEMAND_PG.DisplayOnly = True;</span><br></pre></td></tr></table></figure><h3 id="实现隐藏："><a href="#实现隐藏：" class="headerlink" title="实现隐藏："></a>实现隐藏：</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*按钮、字段、group box等*/</span> </span><br><span class="line">hide(record.field);</span><br><span class="line">unhide(record.field);</span><br><span class="line">GetRow().HR_LBL_WRK.ADMINRK_LBL_CHN.Visible = False;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PeopleSoft </tag>
            
            <tag> PeopleCode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PeopleSoft-函数、方法的声明引引用</title>
      <link href="2020/10/28/PeopleSoft-%E5%87%BD%E6%95%B0%E3%80%81%E6%96%B9%E6%B3%95%E7%9A%84%E5%A3%B0%E6%98%8E%E5%BC%95%E5%BC%95%E7%94%A8/"/>
      <url>2020/10/28/PeopleSoft-%E5%87%BD%E6%95%B0%E3%80%81%E6%96%B9%E6%B3%95%E7%9A%84%E5%A3%B0%E6%98%8E%E5%BC%95%E5%BC%95%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h3 id="引用表-字段上的函数方法"><a href="#引用表-字段上的函数方法" class="headerlink" title="引用表-字段上的函数方法"></a>引用表-字段上的函数方法</h3><h4 id="步骤一、定义方法"><a href="#步骤一、定义方法" class="headerlink" title="步骤一、定义方法"></a>步骤一、定义方法</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/******************************************************</span></span><br><span class="line"><span class="comment"> Function   : Format_NID</span></span><br><span class="line"><span class="comment"> Purpose    : Convert National_ID from National_ID_Format into National_ID</span></span><br><span class="line"><span class="comment">without special characters and viceversa </span></span><br><span class="line"><span class="comment"> Version    : 3.3.99</span></span><br><span class="line"><span class="comment"> Parameters : COUNTRY,NID_TYPE,INPUT,DIRECTION</span></span><br><span class="line"><span class="comment"> Returns    : STRING</span></span><br><span class="line"><span class="comment">******************************************************/</span></span><br><span class="line"><span class="function">Function <span class="title">Format_NID</span><span class="params">(&amp;COUNTRY, &amp;NID_TYPE, &amp;INPUT, &amp;DIRECTION)</span> Returns string</span>;</span><br><span class="line"> <span class="comment">/*方法体*/</span></span><br><span class="line">End-Function;</span><br></pre></td></tr></table></figure><h4 id="步骤二、引用函数方法"><a href="#步骤二、引用函数方法" class="headerlink" title="步骤二、引用函数方法"></a>步骤二、引用函数方法</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Declare Function Format_NID PeopleCode FUNCLIB_HR.NID_SPECIAL_CHAR FieldFormula;</span><br><span class="line">Declare Function valid_NID PeopleCode FUNCLIB_HR.NID_SPECIAL_CHAR FieldFormula;</span><br><span class="line"></span><br><span class="line"> C_PREHIRE0_TBL.NID_SPECIAL_CHAR.Value = Format_NID(&amp;VAR_COUNTRY, &amp;VAR_NID_TYPE, &amp;VAR_NID, <span class="string">&quot;OUTDB&quot;</span>);</span><br><span class="line">   If C_PREHIRE0_TBL.COUNTRY.Value = <span class="string">&quot;CHN&quot;</span> And</span><br><span class="line">         C_PREHIRE0_TBL.NATIONAL_ID_TYPE.Value = <span class="string">&quot;NID&quot;</span> Then</span><br><span class="line">      Local <span class="keyword">boolean</span> &amp;bool = valid_NID(&amp;VAR_NID);</span><br><span class="line">      If &amp;bool = False Then</span><br><span class="line">         Error (<span class="string">&quot;无效的身份证号,请重新输入!&quot;</span>);</span><br><span class="line">      End-If;</span><br><span class="line">   End-If;</span><br></pre></td></tr></table></figure><h3 id="引用package函数包中的函数方法"><a href="#引用package函数包中的函数方法" class="headerlink" title="引用package函数包中的函数方法"></a>引用package函数包中的函数方法</h3><h4 id="步骤一、定义package函数方法，新建application-package-–C-DATA-IMP-PKG："><a href="#步骤一、定义package函数方法，新建application-package-–C-DATA-IMP-PKG：" class="headerlink" title="步骤一、定义package函数方法，新建application package –C_DATA_IMP_PKG："></a>步骤一、定义package函数方法，新建application package –C_DATA_IMP_PKG：</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">C_INSERT_PS_DATA</span></span></span><br><span class="line"><span class="class">    /*构造函数*/</span></span><br><span class="line"><span class="class">   <span class="title">method</span> <span class="title">C_INSERT_PS_DATA</span>()</span>;</span><br><span class="line">   <span class="comment">/* 导入数据;*/</span></span><br><span class="line">   <span class="function">method <span class="title">C_IMP_DATA</span><span class="params">(&amp;arr2Data As array of array of string)</span> Returns string</span>;</span><br><span class="line">end-<span class="class"><span class="keyword">class</span></span>;</span><br><span class="line"></span><br><span class="line"> <span class="comment">/*构造函数*/</span></span><br><span class="line">method C_INSERT_PS_DATA</span><br><span class="line">end-method;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*导入函数*/</span></span><br><span class="line">method C_IMP_DATA</span><br><span class="line">   /+ &amp;arr2Data as Array2 of String +/</span><br><span class="line">   /+ Returns String +/</span><br><span class="line">  <span class="comment">/*方法体*/</span></span><br><span class="line">   Return &amp;strReturn;</span><br><span class="line">end-method;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="步骤二、引用package函数方法"><a href="#步骤二、引用package函数方法" class="headerlink" title="步骤二、引用package函数方法"></a>步骤二、引用package函数方法</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> C_DATA_IMP_PKG:*;</span><br><span class="line">Local C_DATA_IMP_PKG:C_INSERT_PS_DATA &amp;ImpPsData = create C_DATA_IMP_PKG:C_INSERT_PS_DATA();</span><br><span class="line">Local string &amp;strPsDataRet = &amp;ImpPsData.C_IMP_DATA_A(&amp;arrPsData);</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> C_APP_CLS:OBJECT:*;</span><br><span class="line">Local C_APP_CLS:OBJECT:JOB &amp;Job = create C_APP_CLS:OBJECT:JOB();</span><br><span class="line">Local array of any &amp;arr = CreateArrayAny();</span><br><span class="line">&amp;arr.Push(C_TEST_ZL_WRK.EMPLID.Value);</span><br><span class="line">Local string &amp;LocationName = &amp;Job.GetLocationName(&amp;arr);</span><br></pre></td></tr></table></figure><h3 id="引入服务器中的Java包"><a href="#引入服务器中的Java包" class="headerlink" title="引入服务器中的Java包"></a>引入服务器中的Java包</h3><h4 id="步骤一、将Java包上传至服务器"><a href="#步骤一、将Java包上传至服务器" class="headerlink" title="步骤一、将Java包上传至服务器"></a>步骤一、将Java包上传至服务器</h4><p>需要上传两个路径：路径1</p><img src="https://gitee.com/gek7777/cdn.io/raw/master/image/20201221171123.png"/><p>需要上传两个路径：路径2</p><img src="https://gitee.com/gek7777/cdn.io/raw/master/image/20201221171229.png"/><p><strong>对两个文件操作：</strong></p><p>1、chmod -R 777 Ios2Utf2Gbk.jar      修改文件编辑权限</p><p>2、chown -R  psadm2:oinstall   Ios2Utf2Gbk.jar      将文件授权给用户</p><p><strong>或对两个文件的文件夹操作：</strong></p><p>chown -R psadm2:oinstall    /app/psapp/pt/ps_home8.57.11</p><p>chmod -R 777   /app/psapp/pt/ps_home8.57.11/class</p><h4 id="步骤二、引用Java包中的方法"><a href="#步骤二、引用Java包中的方法" class="headerlink" title="步骤二、引用Java包中的方法"></a>步骤二、引用Java包中的方法</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">rem 字符集处理IOS转UTF编码,还有一个方法iso2gbk,可以转为GBK编码;</span><br><span class="line">Local JavaObject &amp;Ios2Utf = CreateJavaObject(<span class="string">&quot;com.sie.ios2utf2gbk.ISO2UTF&quot;</span>);</span><br><span class="line">&amp;responseBody = &amp;Ios2Utf.iso2utf(&amp;responseBody);</span><br><span class="line"></span><br></pre></td></tr></table></figure><img src="https://gitee.com/gek7777/cdn.io/raw/master/image/20201221172627.png"/>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PeopleSoft </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Oracle-Char字段和Long字段对比</title>
      <link href="2020/10/09/Oracle-Char%E5%AD%97%E6%AE%B5%E5%92%8CLong%E5%AD%97%E6%AE%B5%E5%AF%B9%E6%AF%94/"/>
      <url>2020/10/09/Oracle-Char%E5%AD%97%E6%AE%B5%E5%92%8CLong%E5%AD%97%E6%AE%B5%E5%AF%B9%E6%AF%94/</url>
      
        <content type="html"><![CDATA[<h2 id="数据库设计中char和long两种类型的对比"><a href="#数据库设计中char和long两种类型的对比" class="headerlink" title="数据库设计中char和long两种类型的对比"></a>数据库设计中char和long两种类型的对比</h2><p>如果用char，问题非常多：</p><ol><li><p>可能浪费空间，除非正好放满。</p></li><li><p>会导致程序员在字段前使用trunc等截掉尾部空格的函数，要优化必须建立一些函数索引。写程序还要用rpad之类的函数。</p></li><li><p>如果char很大，很可能导致索引无法建立。</p></li><li><p>长度一变，经常要修改程序。</p></li><li><p>导致程序使用大量的非绑定变量。这个可能更开发语言有关，例子：  c_id=‘1212’ 可以查询到结果  如果使用绑定：c_id=:a这个要看各种开发语言，因为不会补全尾部的空格，可能查询结果为空。</p></li><li><p>CHAR/NCHAR类型还会带来混乱（很多应用存储了信息之后却无法“找到”所存储的数据）。还有：CHAR/NCHAR实际上只是伪装的VARCHAR2/NVARCHAR2，基于这一点，所以我认为其实只需要考虑这两种字符串类型：VARCHAR和NVARCHAR2。</p></li></ol><p>Oracle的LONG类型可谓“臭名昭著”，<strong>由于LONG类型的限制太多，以至于Oracle很少去提LONG类型有哪些限制条件，而一般都是通过说明在哪些情况下，可以使用LONG类型</strong>。正是这些限制阻止了LONG的使用，Oracle也在推出了大对象类型——LOB之后，<strong>强烈建议用户不要在使用LONG类型</strong>。限制：</p><ol><li><p>一个表中只能包含一个LONG类型的列。</p></li><li><p>不能索引LONG类型列。</p></li><li><p>不能将含有LONG类型列的表作聚簇。</p></li><li><p>不能在SQL*Plus中将LONG类型列的数值插入到另一个表格中,如 insertinto …select。</p></li><li><p>不能在SQL*Plus中通过查询其他表的方式来创建LONG类型列,如createtable as select。</p></li><li><p>不能对LONG类型列加约束条件（NULL、NOTNULL、DEFAULT除外），如：关键字列(PRIMARYKEY)不能是LONG数据类型。</p></li><li><p>LONG类型列不能用在Select的以下子句中：where、groupby、orderby，以及带有distinct的select语句中。</p></li><li><p>LONG类型列不能用于分布查询。</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SQL </tag>
            
            <tag> ORACLE </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MongoDB概念解析</title>
      <link href="2020/09/29/MongoDB%E6%A6%82%E5%BF%B5%E8%A7%A3%E6%9E%90/"/>
      <url>2020/09/29/MongoDB%E6%A6%82%E5%BF%B5%E8%A7%A3%E6%9E%90/</url>
      
        <content type="html"><![CDATA[<p>不管我们学习什么数据库都应该学习其中的基础概念，在mongodb中基本的概念是<strong>文档、集合、数据库</strong>，下面我们挨个介绍。</p><p>下表将帮助您更容易理解Mongo中的一些概念：</p><table><thead><tr><th align="left">SQL术语/概念</th><th align="left">MongoDB术语/概念</th><th align="left">解释/说明</th></tr></thead><tbody><tr><td align="left">database</td><td align="left">database</td><td align="left">数据库</td></tr><tr><td align="left">table</td><td align="left">collection</td><td align="left">数据库表/集合</td></tr><tr><td align="left">row</td><td align="left">document</td><td align="left">数据记录行/文档</td></tr><tr><td align="left">column</td><td align="left">field</td><td align="left">数据字段/域</td></tr><tr><td align="left">index</td><td align="left">index</td><td align="left">索引</td></tr><tr><td align="left">table joins</td><td align="left"></td><td align="left"><strong>表连接,MongoDB不支持</strong></td></tr><tr><td align="left">primary key</td><td align="left">primary key</td><td align="left">主键,MongoDB自动将_id字段设置为主键</td></tr></tbody></table><p>通过下图实例，我们也可以更直观的了解Mongo中的一些概念：</p><img src="https://gitee.com/gek7777/cdn.io/raw/master/image/Figure-1-Mapping-Table-to-Collection-1.png"/><h2 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h2><p>一个mongodb中可以建立多个数据库。</p><p>MongoDB的默认数据库为”db”，该数据库存储在data目录中。</p><p>MongoDB的单个实例可以容纳多个独立的数据库，每一个都有自己的集合和权限，不同的数据库也放置在不同的文件中。</p><p><strong>“show dbs”</strong> 命令可以显示所有数据的列表。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ .&#x2F;mongo</span><br><span class="line">MongoDB shell version: 3.0.6</span><br><span class="line">connecting to: test</span><br><span class="line">&gt; show dbs</span><br><span class="line">local  0.078GB</span><br><span class="line">test   0.078GB</span><br><span class="line">&gt; </span><br></pre></td></tr></table></figure><p>执行 <strong>“db”</strong> 命令可以显示当前数据库对象或集合。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ .&#x2F;mongo</span><br><span class="line">MongoDB shell version: 3.0.6</span><br><span class="line">connecting to: test</span><br><span class="line">&gt; db</span><br><span class="line">test</span><br><span class="line">&gt; </span><br></pre></td></tr></table></figure><p>运行”use”命令，可以连接到一个指定的数据库。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt; use local</span><br><span class="line">switched to db local</span><br><span class="line">&gt; db</span><br><span class="line">local</span><br><span class="line">&gt; </span><br></pre></td></tr></table></figure><p>数据库也通过名字来标识。数据库名可以是满足以下条件的任意UTF-8字符串。</p><ul><li>不能是空字符串（””)。</li><li>不得含有’ ‘（空格)、.、$、/、\和\0 (空字符)。</li><li>应<strong>全部小写</strong>。</li><li>最多64字节。</li></ul><p>有一些数据库名是保留的，可以直接访问这些有特殊作用的数据库。</p><ul><li><strong>admin</strong>： 从权限的角度来看，这是”root”数据库。要是将一个用户添加到这个数据库，这个用户自动继承所有数据库的权限。一些<strong>特定的服务器端命令</strong>也只能从这个数据库运行，比如列出所有的数据库或者关闭服务器。</li><li><strong>local:</strong> 这个数据<strong>永远不会被复制</strong>，可以用来存储限于本地单台服务器的任意集合。</li><li><strong>config</strong>: 当Mongo用于<strong>分片设置</strong>时，config数据库在内部使用，用于保存分片的相关信息。</li></ul><h2 id="文档（Document）"><a href="#文档（Document）" class="headerlink" title="文档（Document）"></a>文档（Document）</h2><p>文档是一组键值(key-value)对(即 BSON)。MongoDB 的文档不需要设置相同的字段，并且相同的字段不需要相同的数据类型，这与关系型数据库有很大的区别，也是 MongoDB 非常突出的特点。</p><p>一个简单的文档例子如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&quot;site&quot;:&quot;www.runoob.com&quot;, &quot;name&quot;:&quot;菜鸟教程&quot;&#125;</span><br></pre></td></tr></table></figure><p>下表列出了 RDBMS 与 MongoDB 对应的术语：</p><table><thead><tr><th align="center">RDBMS</th><th align="left">MongoDB</th></tr></thead><tbody><tr><td align="center">数据库</td><td align="left">数据库</td></tr><tr><td align="center">表格</td><td align="left">集合</td></tr><tr><td align="center">行</td><td align="left">文档</td></tr><tr><td align="center">列</td><td align="left">字段</td></tr><tr><td align="center">表联合</td><td align="left"><strong>嵌入文档</strong></td></tr><tr><td align="center">主键</td><td align="left">主键 (MongoDB 提供了 key 为 _id )</td></tr><tr><td align="center">数据库服务和客户端</td><td align="left"></td></tr><tr><td align="center">Mysqld/Oracle</td><td align="left">mongod</td></tr><tr><td align="center">mysql/sqlplus</td><td align="left">mongo</td></tr></tbody></table><p>需要注意的是：</p><ol><li>文档中的键/值对是<strong>有序的</strong>。</li><li>文档中的值不仅可以是在双引号里面的字符串，还可以是其他几种数据类型（甚至可以是<strong>整个嵌入的文档</strong>)。</li><li>MongoDB<strong>区分类型和大小写</strong>。（这跟oracle数据库不同，oracle数据库列名不区分大小写，但是内容区分大小写）</li><li>MongoDB的文档<strong>不能有重复的键</strong>。</li><li>文档的键是字符串。除了少数例外情况，键可以使用任意UTF-8字符。</li></ol><p>文档键命名规范：</p><ul><li>键不能含有\0 (空字符)。这个字符用来表示键的结尾。</li><li>.和$有特别的意义，只有在特定环境下才能使用。</li><li>以下划线”_”开头的键是保留的(<strong>不是严格要求的</strong>)。</li></ul><h2 id="集合"><a href="#集合" class="headerlink" title="集合"></a>集合</h2><p>集合就是 MongoDB 文档组，类似于 RDBMS （关系数据库管理系统：Relational Database Management System)中的表格。</p><p>集合存在于数据库中，集合没有固定的结构，这意味着你在对集合可以插入不同格式和类型的数据，但通常情况下我们插入集合的数据都会有一定的关联性。</p><p>比如，我们可以将以下不同数据结构的文档插入到集合中：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;&quot;site&quot;:&quot;www.baidu.com&quot;&#125;</span><br><span class="line">&#123;&quot;site&quot;:&quot;www.google.com&quot;,&quot;name&quot;:&quot;Google&quot;&#125;</span><br><span class="line">&#123;&quot;site&quot;:&quot;www.runoob.com&quot;,&quot;name&quot;:&quot;菜鸟教程&quot;,&quot;num&quot;:5&#125;</span><br></pre></td></tr></table></figure><p>当第一个文档插入时，集合就会被创建。</p><h2 id="合法的集合名"><a href="#合法的集合名" class="headerlink" title="合法的集合名"></a>合法的集合名</h2><ul><li>集合名不能是空字符串””。</li><li>集合名不能含有\0字符（空字符)，这个字符表示集合名的结尾。</li><li>集合名不能以”system.”开头，这是为系统集合保留的前缀。</li><li>用户创建的集合名字不能含有保留字符。有些驱动程序的确支持在集合名里面包含，这是因为某些系统生成的集合中包含该字符。除非你要访问这种系统创建的集合，否则千万不要在名字里出现$。　</li></ul><p>如下实例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.col.findOne()</span><br></pre></td></tr></table></figure><h3 id="capped-collections"><a href="#capped-collections" class="headerlink" title="capped collections"></a>capped collections</h3><p>Capped collections 就是固定大小的collection。</p><p>它有很高的性能以及队列过期的特性(<strong>过期按照插入的顺序</strong>). 有点和 “RRD” 概念类似。</p><p>Capped collections 是高性能自动的维护对象的插入顺序。它非常适合类似记录日志的功能和标准的 collection 不同，你必须要显式的创建一个capped collection，指定一个 collection 的大小，<strong>单位是字节（Byte）</strong>。collection 的<strong>数据存储空间值提前分配</strong>的。</p><p>Capped collections 可以按照文档的插入顺序保存到集合中，而且这些文档在磁盘上存放位置也是按照插入顺序来保存的，所以当我们更新Capped collections 中文档的时候，更新后的文档不可以超过之前文档的大小，这样话就可以确保所有文档在磁盘上的位置一直<strong>保持不变</strong>。</p><p>由于 Capped collection 是按照文档的插入顺序而不是使用索引确定插入位置，这样的话可以提高增添数据的效率。MongoDB 的操作日志文件 oplog.rs 就是利用 Capped Collection 来实现的。</p><p>要注意的是指定的存储大小包含了数据库的头信息。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.createCollection(&quot;mycoll&quot;, &#123;capped:true, size:100000&#125;)</span><br></pre></td></tr></table></figure><ul><li>在 capped collection 中，你能<strong>添加新的对象</strong>。</li><li>能进行更新，然而，对象不会增加存储空间。如果增加，更新就会失败 。</li><li>使用 Capped Collection <strong>不能删除一个文档</strong>，可以使用 drop() 方法删除 collection 所有的行。</li><li>删除之后，你必须<strong>显式的重新创建</strong>这个 collection。</li><li>在32bit机器中，capped collection <strong>最大存储为 1e9( 1X109)个字节</strong>。</li></ul><h2 id="元数据"><a href="#元数据" class="headerlink" title="元数据"></a>元数据</h2><p>数据库的信息是存储在集合中。它们使用了系统的命名空间：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dbname.system.*</span><br></pre></td></tr></table></figure><p>在MongoDB数据库中名字空间 <dbname>.system.* 是包含多种系统信息的特殊集合(Collection)，如下:</p><table><thead><tr><th align="left">集合命名空间</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">dbname.system.namespaces</td><td align="left">列出所有名字空间。</td></tr><tr><td align="left">dbname.system.indexes</td><td align="left">列出所有索引。</td></tr><tr><td align="left">dbname.system.profile</td><td align="left">包含数据库概要(profile)信息。</td></tr><tr><td align="left">dbname.system.users</td><td align="left">列出所有可访问数据库的用户。</td></tr><tr><td align="left">dbname.local.sources</td><td align="left">包含复制对端（slave）的服务器信息和状态。</td></tr></tbody></table><p>对于修改系统集合中的对象有如下限制。</p><p>在插入数据，可以创建索引。但<strong>除此之外该表信息是不可变的</strong>(特殊的drop index命令将自动更新相关信息)。</p>是可修改的。 是可删除的。<h2 id="MongoDB-数据类型"><a href="#MongoDB-数据类型" class="headerlink" title="MongoDB 数据类型"></a>MongoDB 数据类型</h2><p>下表为MongoDB中常用的几种数据类型。</p><table><thead><tr><th align="left">数据类型</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">String</td><td align="left">字符串。存储数据常用的数据类型。在 MongoDB 中，<strong>UTF-8 编码的字符串才是合法的</strong>。</td></tr><tr><td align="left">Integer</td><td align="left">整型数值。用于存储数值。根据你所采用的服务器，可分为 32 位或 64 位。</td></tr><tr><td align="left">Boolean</td><td align="left">布尔值。用于存储布尔值（真/假）。</td></tr><tr><td align="left">Double</td><td align="left">双精度浮点值。用于存储浮点值。</td></tr><tr><td align="left">Min/Max keys</td><td align="left">将一个值与 BSON（二进制的 JSON）元素的最低值和最高值相对比。</td></tr><tr><td align="left">Array</td><td align="left">用于将数组或列表或多个值存储为一个键。</td></tr><tr><td align="left">Timestamp</td><td align="left">时间戳。记录文档修改或添加的具体时间。</td></tr><tr><td align="left">Object</td><td align="left">用于内嵌文档。</td></tr><tr><td align="left">Null</td><td align="left">用于创建空值。</td></tr><tr><td align="left">Symbol</td><td align="left">符号。该数据类型基本上等同于字符串类型，但不同的是，它一般用于<strong>采用特殊符号类型</strong>的语言。</td></tr><tr><td align="left">Date</td><td align="left">日期时间。用 <strong>UNIX 时间格式</strong>来存储当前日期或时间。你可以指定自己的日期时间：创建 Date 对象，传入年月日信息。</td></tr><tr><td align="left">Object ID</td><td align="left">对象 ID。用于创建文档的 ID。</td></tr><tr><td align="left">Binary Data</td><td align="left">二进制数据。用于存储二进制数据。</td></tr><tr><td align="left">Code</td><td align="left">代码类型。用于在文档中存储 <strong>JavaScript 代码</strong>。</td></tr><tr><td align="left">Regular expression</td><td align="left"><strong>正则表达式类型</strong>。用于存储正则表达式。</td></tr></tbody></table><p>下面说明下几种重要的数据类型。</p><h3 id="ObjectId"><a href="#ObjectId" class="headerlink" title="ObjectId"></a>ObjectId</h3><p>ObjectId 类似唯一主键，可以很快的去生成和排序，包含 12 bytes，含义是：</p><ul><li>前 4 个字节表示创建 <strong>unix</strong> 时间戳,格林尼治时间 <strong>UTC</strong> 时间，比北京时间晚了 8 个小时</li><li>接下来的 3 个字节是机器标识码</li><li>紧接的两个字节由进程 id 组成 PID</li><li>最后三个字节是随机数</li></ul><p><img src="https://www.runoob.com/wp-content/uploads/2013/10/2875754375-5a19268f0fd9b_articlex.jpeg" alt="img"></p><p>MongoDB 中存储的文档必须有一个 _id 键。这个键的值可以是任何类型的，默认是个 ObjectId 对象</p><p>由于 ObjectId 中保存了创建的时间戳，所以你不需要为你的文档保存时间戳字段，你可以通过 <strong>getTimestamp 函数</strong>来获取文档的创建时间:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt; var newObject &#x3D; ObjectId()</span><br><span class="line">&gt; newObject.getTimestamp()</span><br><span class="line">ISODate(&quot;2017-11-25T07:21:10Z&quot;)</span><br></pre></td></tr></table></figure><p>ObjectId 转为字符串</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; newObject.str</span><br><span class="line">5a1919e63df83ce79df8b38f</span><br></pre></td></tr></table></figure><h3 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h3><p><strong>BSON 字符串都是 UTF-8 编码。</strong></p><h3 id="时间戳"><a href="#时间戳" class="headerlink" title="时间戳"></a>时间戳</h3><p>BSON 有一个特殊的时间戳类型用于 MongoDB 内部使用，与普通的 日期 类型不相关。 时间戳值是一个 64 位的值。其中：</p><ul><li>前32位是一个 time_t 值（与Unix新纪元相差的秒数）</li><li>后32位是在某秒中操作的一个递增的<code>序数</code></li></ul><p>在单个 mongod 实例中，时间戳值通常是唯一的。</p><p>在复制集中， oplog 有一个 ts 字段。这个字段中的值使用BSON时间戳表示了操作时间。</p><blockquote><p>BSON 时间戳类型主要用于 MongoDB 内部使用。在大多数情况下的应用开发中，你可以使用 BSON 日期类型。</p></blockquote><h3 id="日期"><a href="#日期" class="headerlink" title="日期"></a>日期</h3><p>表示当前距离 Unix新纪元（1970年1月1日）的毫秒数。日期类型是有符号的, 负数表示 1970 年之前的日期。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&gt; var mydate1 &#x3D; new Date()     &#x2F;&#x2F;格林尼治时间</span><br><span class="line">&gt; mydate1</span><br><span class="line">ISODate(&quot;2018-03-04T14:58:51.233Z&quot;)</span><br><span class="line">&gt; typeof mydate1</span><br><span class="line">object</span><br><span class="line">&gt; var mydate2 &#x3D; ISODate() &#x2F;&#x2F;格林尼治时间</span><br><span class="line">&gt; mydate2</span><br><span class="line">ISODate(&quot;2018-03-04T15:00:45.479Z&quot;)</span><br><span class="line">&gt; typeof mydate2</span><br><span class="line">object</span><br></pre></td></tr></table></figure><p>这样创建的时间是日期类型，可以使用 JS 中的 Date 类型的方法。</p><p>返回一个时间类型的字符串：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt; var mydate1str &#x3D; mydate1.toString()</span><br><span class="line">&gt; mydate1str</span><br><span class="line">Sun Mar 04 2018 14:58:51 GMT+0000 (UTC) </span><br><span class="line">&gt; typeof mydate1str</span><br><span class="line">string</span><br></pre></td></tr></table></figure><p>或者</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; Date()</span><br><span class="line">Sun Mar 04 2018 15:02:59 GMT+0000 (UTC) </span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> NoSQL </tag>
            
            <tag> MongoDB </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MongoDB简介</title>
      <link href="2020/09/29/MongoDB%E7%AE%80%E4%BB%8B/"/>
      <url>2020/09/29/MongoDB%E7%AE%80%E4%BB%8B/</url>
      
        <content type="html"><![CDATA[<h2 id="什么是MongoDB？"><a href="#什么是MongoDB？" class="headerlink" title="什么是MongoDB？"></a>什么是MongoDB？</h2><p>MongoDB 是由C++语言编写的，是一个基于分布式文件存储的开源数据库系统。</p><p>在高负载的情况下，添加更多的节点，可以保证服务器性能。</p><p>MongoDB 旨在为WEB应用提供可扩展的高性能数据存储解决方案。</p><p>MongoDB 将数据存储为一个文档，数据结构由键值(key=&gt;value)对组成。MongoDB 文档<strong>类似于 JSON 对象</strong>。字段值可以包含<strong>其他文档</strong>，<strong>数组</strong>及<strong>文档数组</strong>。</p><img src="https://gitee.com/gek7777/cdn.io/raw/master/image/crud-annotated-document.png"/><h2 id="主要特点"><a href="#主要特点" class="headerlink" title="主要特点"></a>主要特点</h2><ul><li>MongoDB 是一个<strong>面向文档存储</strong>的数据库，操作起来比较简单和容易。</li><li>你可以在MongoDB记录中设置任何属性的索引 (如：FirstName=”Sameer”,Address=”8 Gandhi Road”)来实现更快的排序。</li><li>你可以通过本地或者网络<strong>创建数据镜像</strong>，这使得MongoDB有更强的扩展性。</li><li>如果<strong>负载的增加</strong>（需要更多的存储空间和更强的处理能力） ，它可以<strong>分布在计算机网络中的其他节点上</strong>这就是所谓的分片。</li><li>Mongo支持丰富的查询表达式。查询指令使用JSON形式的标记，可轻易查询文档中内嵌的对象及数组。</li><li>MongoDb 使用update()命令可以实现替换完成的文档（数据）或者一些指定的数据字段 。</li><li>Mongodb中的Map/reduce主要是用来对数据进行<strong>批量处理和聚合操作</strong>。</li><li>Map和Reduce。Map函数调用emit(key,value)<strong>遍历集合中所有的记录</strong>，将key与value传给Reduce函数进行处理。</li><li>Map函数和Reduce函数是<strong>使用Javascript编写</strong>的，并可以通过db.runCommand或mapreduce命令来执行MapReduce操作。</li><li><strong>GridFS</strong>是MongoDB中的一个<strong>内置功能</strong>，可以用于存放<strong>大量小文件</strong>。</li><li>MongoDB允许在服务端执行脚本，可以用Javascript编写某个函数，直接在服务端执行，也可以把函数的定义存储在服务端，下次直接调用即可。</li><li>MongoDB支持各种编程语言:RUBY，PYTHON，JAVA，C++，PHP，C#等多种语言。</li><li>MongoDB安装简单。</li></ul><h2 id="历史"><a href="#历史" class="headerlink" title="历史"></a>历史</h2><ul><li>2007年10月，MongoDB由10gen团队所发展。2009年2月首度推出。</li><li>2012年05月23日，MongoDB2.1 开发分支发布了! 该版本采用全新架构，包含诸多增强。</li><li>2012年06月06日，MongoDB 2.0.6 发布，分布式文档数据库。</li><li>2013年04月23日，MongoDB 2.4.3 发布，此版本包括了一些性能优化，功能增强以及bug修复。</li><li>2013年08月20日，MongoDB 2.4.6 发布。</li><li>2013年11月01日，MongoDB 2.4.8 发布。</li><li>……</li></ul><h2 id="MongoDB-下载"><a href="#MongoDB-下载" class="headerlink" title="MongoDB 下载"></a>MongoDB 下载</h2><p>你可以在mongodb官网下载该安装包，地址为：<a href="https://www.mongodb.com/download-center#community%E3%80%82MonggoDB%E6%94%AF%E6%8C%81%E4%BB%A5%E4%B8%8B%E5%B9%B3%E5%8F%B0">https://www.mongodb.com/download-center#community。MonggoDB支持以下平台</a>:</p><ul><li>OS X 32-bit</li><li>OS X 64-bit</li><li>Linux 32-bit</li><li>Linux 64-bit</li><li>Windows 32-bit</li><li>Windows 64-bit</li><li>Solaris i86pc</li><li>Solaris 64</li></ul><h2 id="语言支持"><a href="#语言支持" class="headerlink" title="语言支持"></a>语言支持</h2><p>MongoDB有官方的驱动如下：</p><ul><li><a href="http://github.com/mongodb/mongo-c-driver">C</a></li><li><a href="http://github.com/mongodb/mongo">C++</a></li><li><a href="http://www.mongodb.org/display/DOCS/CSharp+Language+Center">C# / .NET</a></li><li><a href="https://github.com/TonyGen/mongodb-erlang">Erlang</a></li><li><a href="http://hackage.haskell.org/package/mongoDB">Haskell</a></li><li><a href="http://github.com/mongodb/mongo-java-driver">Java</a></li><li><a href="http://www.mongodb.org/display/DOCS/Javascript+Language+Center">JavaScript</a></li><li><a href="https://github.com/fons/cl-mongo">Lisp</a></li><li><a href="http://github.com/mongodb/node-mongodb-native">node.JS</a></li><li><a href="http://github.com/mongodb/mongo-perl-driver">Perl</a></li><li><a href="http://github.com/mongodb/mongo-php-driver">PHP</a></li><li><a href="http://github.com/mongodb/mongo-python-driver">Python</a></li><li><a href="http://github.com/mongodb/mongo-ruby-driver">Ruby</a></li><li><a href="https://github.com/mongodb/casbah">Scala</a></li></ul><h2 id="MongoDB-工具"><a href="#MongoDB-工具" class="headerlink" title="MongoDB 工具"></a>MongoDB 工具</h2><p>有几种可用于MongoDB的管理工具。</p><h3 id="监控"><a href="#监控" class="headerlink" title="监控"></a>监控</h3><p>MongoDB提供了网络和系统监控工具<strong>Munin</strong>，它作为一个插件应用于MongoDB中。</p><p><strong>Gangila</strong>是MongoDB高性能的系统监视的工具，它作为一个插件应用于MongoDB中。</p><p>基于图形界面的开源工具 <strong>Cacti</strong>, 用于查看CPU负载, 网络带宽利用率,它也提供了一个应用于监控 MongoDB 的插件。</p><h3 id="GUI"><a href="#GUI" class="headerlink" title="GUI"></a>GUI</h3><ul><li>Fang of Mongo – 网页式,由Django和jQuery所构成。</li><li>Futon4Mongo – 一个CouchDB Futon web的mongodb山寨版。</li><li>Mongo3 – Ruby写成。</li><li>MongoHub – 适用于OSX的应用程序。</li><li>Opricot – 一个基于浏览器的MongoDB控制台, 由PHP撰写而成。</li><li>Database Master — Windows的mongodb管理工具。</li><li>RockMongo — <strong>最好的PHP语言</strong>的MongoDB管理工具，轻量级, 支持多国语言。（不同意这个观点，Java才是世界上最好的语言！！！）</li></ul><h2 id="MongoDB应用案例"><a href="#MongoDB应用案例" class="headerlink" title="MongoDB应用案例"></a>MongoDB应用案例</h2><p>下面列举一些公司MongoDB的实际应用：</p><ul><li>Craiglist上使用MongoDB的存档数十亿条记录。</li><li>FourSquare，基于位置的社交网站，在Amazon EC2的服务器上使用MongoDB分享数据。</li><li>Shutterfly，以互联网为基础的社会和个人出版服务，使用MongoDB的各种持久性数据存储的要求。</li><li>bit.ly, 一个基于Web的网址缩短服务，使用MongoDB的存储自己的数据。</li><li>spike.com，一个MTV网络的联营公司， spike.com使用MongoDB的。</li><li>Intuit公司，一个为小企业和个人的软件和服务提供商，为小型企业使用MongoDB的跟踪用户的数据。</li><li>sourceforge.net，资源网站查找，创建和发布开源软件免费，使用MongoDB的后端存储。</li><li>etsy.com ，一个购买和出售手工制作物品网站，使用MongoDB。</li><li>纽约时报，领先的在线新闻门户网站之一，使用MongoDB。</li><li>CERN，著名的粒子物理研究所，欧洲核子研究中心大型强子对撞机的数据使用MongoDB。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> NoSQL </tag>
            
            <tag> MongoDB </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>NoSQL简介</title>
      <link href="2020/09/29/NoSQL%E7%AE%80%E4%BB%8B/"/>
      <url>2020/09/29/NoSQL%E7%AE%80%E4%BB%8B/</url>
      
        <content type="html"><![CDATA[<h2 id="NoSQL简介"><a href="#NoSQL简介" class="headerlink" title="NoSQL简介"></a>NoSQL简介</h2><p>​    NoSQL = Not Only SQL ，意为不仅仅是SQL。</p><p> NoSQL 是一项全新的数据库革命性运动，早期就有人提出，发展至2009年趋势越发高涨。NoSQL的拥护者们提倡运用非关系型的数据存储，相对于铺天盖地的关系型数据库运用，这一概念无疑是一种全新的思维的注入。</p><p>​    NoSQL，指的是非关系型的数据库。NoSQL有时也称作Not Only SQL的缩写，是对不同于传统的关系型数据库的数据库管理系统的统称。</p><p>NoSQL用于<strong>超大规模数据</strong>的存储。（例如谷歌或Facebook每天为他们的用户收集万亿比特的数据）。这些类型的数据存储<u>不需要固定的模式，无需多余操作就可以横向扩展</u>。</p><p><strong>关系型数据库都遵守ACID规则:</strong></p><p>数据库的事务（transaction）类似现实世界中的交易，具有以下四个特性： </p><ol><li><p>原子性（A - atomicity）</p><p>原子性很容易理解，也就是说事务里的所有操作要么全部做完，要么都不做，事务成功的条件是事务里的所有操作都成功，只要有一个操作失败，整个事务就失败，需要回滚。</p><p>例如：银行转账，从A账户转100元至B账户，分为两个步骤：1）从A账户取100元；2）存入100元至B账户。这两步要么一起完成，要么一起不完成，如果只完成第一步，第二步失败，钱会莫名其妙少了100元。</p></li><li><p>一致性（C - Consistency）</p><p>一致性也比较容易理解，也就是说数据库要一直处于一致的状态，事务的运行不会改变数据库原本的一致性约束。</p><p>例如现有完整性约束a+b=10，如果一个事务改变了a，那么必须得改变b，使得事务结束后依然满足a+b=10，否则事务失败。</p></li><li><p>独立性（I - Isolation）</p><p>所谓的独立性是指并发的事务之间不会互相影响，如果一个事务要访问的数据正在被另外一个事务修改，只要另外一个事务未提交，它所访问的数据就不受未提交事务的影响。</p><p>比如现在有个交易是从A账户转100元至B账户，在这个交易还未完成的情况下，如果此时B查询自己的账户，是看不到新增加的100元的。</p></li><li><p>持久性（D - Durability）</p><p>持久性是指一旦事务提交后，它所做的修改将会永久的保存在数据库上，即使出现宕机也不会丢失。</p></li></ol><h2 id="分布式系统"><a href="#分布式系统" class="headerlink" title="分布式系统"></a>分布式系统</h2><p>分布式系统（distributed system）由多台计算机和通信的软件组件通过计算机网络连接（本地网络或广域网）组成。</p><p>分布式系统是建立在网络之上的软件系统。正是因为软件的特性，所以分布式系统具有高度的内聚性和透明性。</p><p>因此，网络和分布式系统之间的区别更多的在于高层软件（特别是操作系统），而不是硬件。</p><p>分布式系统可以应用在不同的平台上如：Pc、工作站、局域网和广域网上等。</p><h3 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h3><p><strong>可靠性（容错） ：</strong></p><p>分布式计算系统中的一个重要的优点是可靠性。一台服务器的系统崩溃并不影响到其余的服务器。</p><p><strong>可扩展性：</strong></p><p>在分布式计算系统可以根据需要增加更多的机器。</p><p><strong>资源共享：</strong></p><p>共享数据是必不可少的应用，如银行，预订系统。</p><p><strong>灵活性：</strong></p><p>由于该系统是非常灵活的，它很容易安装，实施和调试新的服务。</p><p><strong>更快的速度：</strong></p><p>分布式计算系统可以有多台计算机的计算能力，使得它比其他系统有更快的处理速度。</p><p><strong>开放系统：</strong></p><p>由于它是开放的系统，本地或者远程都可以访问到该服务。</p><p><strong>更高的性能：</strong></p><p>相较于集中式计算机网络集群可以提供更高的性能（及更好的性价比）。</p><h3 id="缺点"><a href="#缺点" class="headerlink" title="缺点"></a>缺点</h3><p><strong>故障排除：</strong></p><p>故障排除和诊断问题。</p><p><strong>软件：</strong></p><p>更少的软件支持是分布式计算系统的主要缺点。</p><p><strong>网络：</strong></p><p>网络基础设施的问题，包括：传输问题，高负载，信息丢失等。</p><p><strong>安全性：</strong></p><p>开放系统的特性让分布式计算系统存在着数据的安全性和共享的风险等问题。</p><h2 id="为什么使用NoSQL"><a href="#为什么使用NoSQL" class="headerlink" title="为什么使用NoSQL"></a>为什么使用NoSQL</h2><p>​    今天我们可以通过第三方平台（如：Google,Facebook等）可以很容易的访问和抓取数据。用户的个人信息，社交网络，地理位置，用户生成的数据和用户操作日志已经成倍的增加。我们如果要对这些用户数据进行挖掘，那SQL数据库已经不适合这些应用了, NoSQL 数据库的发展却能很好的处理这些大的数据。</p><h2 id="RDBMS-vs-NoSQL"><a href="#RDBMS-vs-NoSQL" class="headerlink" title="RDBMS vs NoSQL"></a>RDBMS vs NoSQL</h2><p><strong>RDBMS</strong><br>- 高度组织化结构化数据<br>- 结构化查询语言（SQL）<br>- 数据和关系都存储在单独的表中。<br>- 数据操纵语言，数据定义语言<br>- 严格的一致性<br>- 基础事务</p><p><strong>NoSQL</strong><br>- 代表着不仅仅是SQL<br>- 没有声明性查询语言<br>- 没有预定义的模式<br>-键 - 值对存储，列存储，文档存储，图形数据库<br>- 最终一致性，而非ACID属性<br>- 非结构化和不可预知的数据<br>- CAP定理<br>- 高性能，高可用性和可伸缩性</p><h2 id="NoSQL简史"><a href="#NoSQL简史" class="headerlink" title="NoSQL简史"></a>NoSQL简史</h2><p>NoSQL一词最早出现于1998年，是Carlo Strozzi开发的一个轻量、开源、不提供SQL功能的关系数据库。</p><p>2009年，Last.fm的Johan Oskarsson发起了一次关于分布式开源数据库的讨论[2]，来自Rackspace的Eric Evans再次提出了NoSQL的概念，这时的NoSQL主要指非关系型、分布式、不提供ACID的数据库设计模式。</p><p>2009年在亚特兰大举行的”no:sql(east)”讨论会是一个里程碑，其口号是”select fun, profit from real_world where relational=false;”。因此，对NoSQL最普遍的解释是”非关联型的”，强调Key-Value Stores和文档数据库的优点，而不是单纯的反对RDBMS。</p><h2 id="CAP定理（CAP-theorem）"><a href="#CAP定理（CAP-theorem）" class="headerlink" title="CAP定理（CAP theorem）"></a>CAP定理（CAP theorem）</h2><p>在计算机科学中, CAP定理（CAP theorem）, 又被称作 布鲁尔定理（Brewer’s theorem）, 它指出对于一个分布式计算系统来说，不可能同时满足以下三点:</p><ul><li><strong>一致性(Consistency)</strong> (所有节点在同一时间具有相同的数据)</li><li><strong>可用性(Availability)</strong> (保证每个请求不管成功或者失败都有响应)</li><li><strong>分隔容忍(Partition tolerance)</strong> (系统中任意信息的丢失或失败不会影响系统的继续运作)</li></ul><p>CAP理论的核心是：一个分布式系统不可能同时很好的满足一致性，可用性和分区容错性这三个需求，最多只能同时较好的满足两个。</p><p>因此，根据 CAP 原理将 NoSQL 数据库分成了满足 CA 原则、满足 CP 原则和满足 AP 原则三 大类：</p><ul><li>CA - 单点集群，满足一致性，可用性的系统，通常在可扩展性上不太强大。</li><li>CP - 满足一致性，分区容忍性的系统，通常性能不是特别高。</li><li>AP - 满足可用性，分区容忍性的系统，通常可能对一致性要求低一些。</li></ul><img src="https://gitee.com/gek7777/cdn.io/raw/master/image/cap-theoram-image.png"/><h2 id="NoSQL的优缺点"><a href="#NoSQL的优缺点" class="headerlink" title="NoSQL的优缺点"></a>NoSQL的优缺点</h2><p>优点:</p><ul><li>- 高可扩展性</li><li>- 分布式计算</li><li>- 低成本</li><li>- 架构的灵活性，半结构化数据</li><li>- 没有复杂的关系</li></ul><p>缺点:</p><ul><li>- 没有标准化</li><li>- 有限的查询功能（到目前为止）</li><li>- 最终一致是不直观的程序</li></ul><h2 id="BASE"><a href="#BASE" class="headerlink" title="BASE"></a>BASE</h2><p>BASE：Basically Available, Soft-state, Eventually Consistent。 由 Eric Brewer 定义。</p><p>CAP理论的核心是：一个分布式系统不可能同时很好的满足一致性，可用性和分区容错性这三个需求，最多只能同时较好的满足两个。</p><p>BASE是NoSQL数据库通常对可用性及一致性的弱要求原则:</p><ul><li>Basically Availble –基本可用</li><li>Soft-state –软状态/柔性事务。 “Soft state” 可以理解为”无连接”的, 而 “Hard state” 是”面向连接”的</li><li>Eventual Consistency – 最终一致性， 也是 ACID 的最终目的。</li></ul><h2 id="ACID-vs-BASE"><a href="#ACID-vs-BASE" class="headerlink" title="ACID vs BASE"></a>ACID vs BASE</h2><table><thead><tr><th align="left">ACID</th><th align="left">BASE</th></tr></thead><tbody><tr><td align="left">原子性(<strong>A</strong>tomicity)</td><td align="left">基本可用(<strong>B</strong>asically <strong>A</strong>vailable)</td></tr><tr><td align="left">一致性(<strong>C</strong>onsistency)</td><td align="left">软状态/柔性事务(<strong>S</strong>oft state)</td></tr><tr><td align="left">隔离性(<strong>I</strong>solation)</td><td align="left">最终一致性 (<strong>E</strong>ventual consistency)</td></tr><tr><td align="left">持久性 (<strong>D</strong>urable)</td><td align="left"></td></tr></tbody></table><h2 id="NoSQL数据库分类"><a href="#NoSQL数据库分类" class="headerlink" title="NoSQL数据库分类"></a>NoSQL数据库分类</h2><table><thead><tr><th>类型</th><th>部分代表</th><th>特点</th></tr></thead><tbody><tr><td>列存储</td><td>HbaseCassandraHypertable</td><td>顾名思义，是按列存储数据的。最大的特点是方便存储结构化和半结构化数据，方便做数据压缩，对针对某一列或者某几列的查询有非常大的IO优势。</td></tr><tr><td>文档存储</td><td>MongoDBCouchDB</td><td>文档存储一般用类似json的格式存储，存储的内容是文档型的。这样也就有机会对某些字段建立索引，实现关系数据库的某些功能。</td></tr><tr><td>key-value存储</td><td>Tokyo Cabinet / TyrantBerkeley DBMemcacheDBRedis</td><td>可以通过key快速查询到其value。一般来说，存储不管value的格式，照单全收。（Redis包含了其他功能）</td></tr><tr><td>图存储</td><td>Neo4JFlockDB</td><td>图形关系的最佳存储。使用传统关系数据库来解决的话性能低下，而且设计使用不方便。</td></tr><tr><td>对象存储</td><td>db4oVersant</td><td>通过类似面向对象语言的语法操作数据库，通过对象的方式存取数据。</td></tr><tr><td>xml数据库</td><td>Berkeley DB XMLBaseX</td><td>高效的存储XML数据，并支持XML的内部查询语法，比如XQuery,Xpath。</td></tr></tbody></table><h2 id="谁在使用"><a href="#谁在使用" class="headerlink" title="谁在使用"></a>谁在使用</h2><p>现在已经有很多公司使用了 NoSQL：</p><ul><li>Google</li><li>Facebook</li><li>Mozilla</li><li>Adobe</li><li>Foursquare</li><li>LinkedIn</li><li>Digg</li><li>McGraw-Hill Education</li><li>Vermont Public Radio</li></ul>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> NOSQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Oracle-按keys值分组后标序号</title>
      <link href="2020/09/16/Oracle-%E6%8C%89keys%E5%80%BC%E5%88%86%E7%BB%84%E5%90%8E%E6%A0%87%E5%BA%8F%E5%8F%B7/"/>
      <url>2020/09/16/Oracle-%E6%8C%89keys%E5%80%BC%E5%88%86%E7%BB%84%E5%90%8E%E6%A0%87%E5%BA%8F%E5%8F%B7/</url>
      
        <content type="html"><![CDATA[<p>以下代码会把数据分组后进行排序，然后再根据序号，可以取到对应的数据：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> ROW_NUMBER() <span class="keyword">OVER</span>(<span class="keyword">PARTITION</span> <span class="keyword">BY</span> Q.EMPLID, Q.EMPL_RCD, Q.GP_PAYGROUP, Q.CAL_ID <span class="keyword">ORDER</span> <span class="keyword">BY</span> Q.EMPLID <span class="keyword">DESC</span>) <span class="keyword">AS</span> SEQ,</span><br><span class="line">       Q.SETID,</span><br><span class="line">       Q.EMPLID,</span><br><span class="line">       Q.DEPTID,</span><br><span class="line">       Q.POSITION_NBR,</span><br><span class="line">       Q.EMPL_RCD,</span><br><span class="line">       Q.GP_PAYGROUP,</span><br><span class="line">       Q.CAL_ID</span><br><span class="line">  <span class="keyword">FROM</span> PS_C_PI_QRY_VW Q</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>使用场景：进行单表拼串时，取每个分组的一条数据时，利用上述SQL，然后进行数据拼接；</p>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PeopleSoft-DoMadolxComponent组件弹窗</title>
      <link href="2020/09/16/PeopleSoft-DoMadolxComponent%E7%BB%84%E4%BB%B6%E5%BC%B9%E7%AA%97/"/>
      <url>2020/09/16/PeopleSoft-DoMadolxComponent%E7%BB%84%E4%BB%B6%E5%BC%B9%E7%AA%97/</url>
      
        <content type="html"><![CDATA[<h2 id="实用示例"><a href="#实用示例" class="headerlink" title="实用示例"></a>实用示例</h2><h2 id="DoModal-函数"><a href="#DoModal-函数" class="headerlink" title="DoModal()函数"></a>DoModal()函数</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DoModal(Page.C_EMPL_DES_PG, &quot;需求详情&quot;, - 1, - 1, 1, Record.C_EMPL_DEMAND_S, CurrentRowNumber());</span><br></pre></td></tr></table></figure><h2 id="DoModalXComponent-函数"><a href="#DoModalXComponent-函数" class="headerlink" title="DoModalXComponent()函数"></a>DoModalXComponent()函数</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DoModalXComponent(showInModal,  cancelButtonName,  MenuName.MENU_NAME,  BarName.BAR_NAME,  ItemName.MENU_ITEM_NAME,  Page.COMPONENT_ITEM_NAME,  action, Record.SHARED_RECORD_NAME [, keylist])</span><br></pre></td></tr></table></figure><h3 id="根据参数直接进入页面，如果不默认进入，需要在跳转后地组件的searchinit上添加一下的代码："><a href="#根据参数直接进入页面，如果不默认进入，需要在跳转后地组件的searchinit上添加一下的代码：" class="headerlink" title="根据参数直接进入页面，如果不默认进入，需要在跳转后地组件的searchinit上添加一下的代码："></a>根据参数直接进入页面，如果不默认进入，需要在跳转后地组件的searchinit上添加一下的代码：</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SetSearchDialogBehavior(<span class="number">0</span>);</span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="DoModal-代码："><a href="#DoModal-代码：" class="headerlink" title="DoModal()代码："></a>DoModal()代码：</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">If All(C_EMPL_DEMAND_S.C_RE_NO.Value) Then</span><br><span class="line">   DoModal(Page.C_EMPL_DES_PG, &quot;需求详情&quot;, - 1, - 1, 1, Record.C_EMPL_DEMAND_S, CurrentRowNumber());</span><br><span class="line">Else</span><br><span class="line">   MessageBox(0, &quot;&quot;, 0, 0, &quot;请先保存生成招聘编号，再填写需求详情！&quot;)</span><br><span class="line"><span class="keyword">End</span>-<span class="keyword">If</span>;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">True -- 是否弹窗显示，true-是，false-否；</span></span><br><span class="line"><span class="comment">MenuName -- 菜单名</span></span><br><span class="line"><span class="comment">BarName -- 栅名</span></span><br><span class="line"><span class="comment">ItemName -- 组件名</span></span><br><span class="line"><span class="comment">Page -- 页面名</span></span><br><span class="line"><span class="comment">&quot;L&quot; -- 跳转模式</span></span><br><span class="line"><span class="comment">Record -- 传参表</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h3 id="DoModalXComponent-函数："><a href="#DoModalXComponent-函数：" class="headerlink" title="DoModalXComponent()函数："></a>DoModalXComponent()函数：</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*设置参数表*/</span></span><br><span class="line">C_STD_POSN_WK.SETID = C_STD_POSN_TBL.SETID;</span><br><span class="line">C_STD_POSN_WK.C_STD_POSN_ID = C_STD_POSN_TBL.C_STD_POSN_ID;</span><br><span class="line"><span class="comment">/*调用函数*/</span></span><br><span class="line">DoModalXComponent( True, <span class="string">&quot;&quot;</span>, MenuName.C_HR_MENU, BarName.CONFIG, ItemName.C_POSN_INST_COM, Page.C_POSN_INST_PG, <span class="string">&quot;L&quot;</span>, Record.C_STD_POSN_WK);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">True -- 是否弹窗显示，true-是，false-否；</span></span><br><span class="line"><span class="comment">MenuName -- 菜单名</span></span><br><span class="line"><span class="comment">BarName -- 栅名</span></span><br><span class="line"><span class="comment">ItemName -- 组件名</span></span><br><span class="line"><span class="comment">Page -- 页面名</span></span><br><span class="line"><span class="comment">&quot;L&quot; -- 跳转模式</span></span><br><span class="line"><span class="comment">Record -- 传参表</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><p>action参数：</p><table><thead><tr><th align="left">Numeric Value</th><th align="left">Constant Value</th><th align="left">Description</th></tr></thead><tbody><tr><td align="left">A</td><td align="left">%Action_Add</td><td align="left">Add  –  新增模式，进入新增页面</td></tr><tr><td align="left">U</td><td align="left">%Action_UpdateDisplay</td><td align="left">Update/Display  –  更新/显示模式，搜索页面</td></tr><tr><td align="left">L</td><td align="left">%Action_UpdateDisplayAll</td><td align="left">Update/Display All</td></tr><tr><td align="left">C</td><td align="left">%Action_Correction</td><td align="left">Correction  – 修改历史记录模式，搜索页面</td></tr><tr><td align="left">E</td><td align="left">%Action_DataEntry</td><td align="left">Data Entry</td></tr><tr><td align="left">P</td><td align="left">%Action_Prompt</td><td align="left">Prompt</td></tr></tbody></table><p>官方参考链接：</p><blockquote><p>DoModalXComponent函数</p><footer><strong>PeopleBook</strong><cite><a href="https://docs.oracle.com/cd/E99483_01/pt857pbr1/eng/pt/tpcl/langref_PeopleCodeBuilt-inFunctionsAndLanguageConstructs_D.html#u0f93dc85-0c3b-414d-a99d-dab0e68505d5">docs.oracle.com/cd/E99483_01/pt857pbr1/eng/pt/tpcl/langref_PeopleCodeBuilt-inFunctionsAndLanguageConstructs_D.html#u0f93dc85-0c3b-414d-a99d-dab0e68505d5</a></cite></footer></blockquote>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PeopleSoft </tag>
            
            <tag> PeopleCode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PeopleSoft-Build表注意事项</title>
      <link href="2020/09/16/PeopleSoft-Build%E8%A1%A8%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9/"/>
      <url>2020/09/16/PeopleSoft-Build%E8%A1%A8%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9/</url>
      
        <content type="html"><![CDATA[<h3 id="delete字段不能迁移"><a href="#delete字段不能迁移" class="headerlink" title="delete字段不能迁移"></a>delete字段不能迁移</h3><p>迁移工程时，如果删除了表中的某些字段，虽然对比能够检视出变化的表，但是不会自动勾选，需要手动在upgrade中勾选delete的字段，才可以迁移。</p>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SQL </tag>
            
            <tag> PeopleSoft </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PeopleSoft-AE的trc日志的注册和注销</title>
      <link href="2020/09/16/PeopleSoft-AE%E7%9A%84trc%E6%97%A5%E5%BF%97%E7%9A%84%E6%B3%A8%E5%86%8C%E5%92%8C%E6%B3%A8%E9%94%80/"/>
      <url>2020/09/16/PeopleSoft-AE%E7%9A%84trc%E6%97%A5%E5%BF%97%E7%9A%84%E6%B3%A8%E5%86%8C%E5%92%8C%E6%B3%A8%E9%94%80/</url>
      
        <content type="html"><![CDATA[<p>AE注册trc日志记录</p><p>-TRACE 387 -TOOLSTRACEPC 2048 -TOOLSTRACESQL 31</p><p>如果需要注销，只需要把参数部分删除即可。</p><a id="more"></a><img src=https://gitee.com/gek7777/cdn.io/raw/master/image/clip_image001.png ><img src=https://gitee.com/gek7777/cdn.io/raw/master/image/trc.png >]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PeopleSoft </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PeopleSoft-一次性导入pin_num报错</title>
      <link href="2020/09/16/PeopleSoft-%E4%B8%80%E6%AC%A1%E6%80%A7%E5%AF%BC%E5%85%A5pin-num%E6%8A%A5%E9%94%99/"/>
      <url>2020/09/16/PeopleSoft-%E4%B8%80%E6%AC%A1%E6%80%A7%E5%AF%BC%E5%85%A5pin-num%E6%8A%A5%E9%94%99/</url>
      
        <content type="html"><![CDATA[<p><strong>一次性导入</strong>中，选择对应的pin_num报无效值，为record代码限制原因。</p><img src=https://gitee.com/gek7777/cdn.io/raw/master/image/yicixingdaoru.png >]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PeopleSoft </tag>
            
            <tag> PeopleCode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PeopleSoft-下拉值权限控制</title>
      <link href="2020/09/16/PeopleSoft-%E4%B8%8B%E6%8B%89%E5%80%BC%E6%9D%83%E9%99%90%E6%8E%A7%E5%88%B6/"/>
      <url>2020/09/16/PeopleSoft-%E4%B8%8B%E6%8B%89%E5%80%BC%E6%9D%83%E9%99%90%E6%8E%A7%E5%88%B6/</url>
      
        <content type="html"><![CDATA[<p>如果要对一个下拉值字段进行对应的权限控制，思路：先清空原有的下拉值，然后根据权限添加对应的下拉值。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 按权限显示字段translate value ; */</span></span><br><span class="line">Local string &amp;strC_Sched_Type;</span><br><span class="line">Local string &amp;strXLATLONGNAME;</span><br><span class="line">Local string &amp;isFlag;</span><br><span class="line">&amp;FLD = GetRecord(Record.C_DATA_LOAD).GetField(Field.C_SCHED_TYPE);</span><br><span class="line"><span class="comment">/* 清空字段默认translate value;*/</span></span><br><span class="line">&amp;FLD.ClearDropDownList();</span><br><span class="line">Local number &amp;SEQ_NUM = <span class="number">1</span>;</span><br><span class="line"><span class="comment">/* 如果权限表中没有进行授权，则在字段translate value 中插入NULL; */</span></span><br><span class="line">SQLExec(<span class="string">&quot;select &#x27;X&#x27; FROM ps_c_data_auth_tbl WHERE emplid = :1 AND ROWNUM = 1 &quot;</span>, %EmployeeId, &amp;isFlag);</span><br><span class="line">If &amp;isFlag = <span class="string">&quot;X&quot;</span> Then</span><br><span class="line">   Local SQL &amp;sql = CreateSQL(<span class="string">&quot;SELECT d.c_sched_type from ps_c_data_auth_tbl d WHERE d.emplid = :1 ORDER BY C_SEQ ASC; &quot;</span>, %EmployeeId);</span><br><span class="line">   While &amp;sql.Fetch(&amp;strC_Sched_Type)</span><br><span class="line">      SQLExec(<span class="string">&quot;SELECT XLATLONGNAME  from psxlatitem    WHERE  FIELDNAME  =  &#x27;C_SCHED_TYPE&#x27; AND  FIELDVALUE = :1 &quot;</span>, &amp;strC_Sched_Type, &amp;strXLATLONGNAME);</span><br><span class="line">      If &amp;SEQ_NUM &lt; <span class="number">10</span> Then</span><br><span class="line">         &amp;FLD.AddDropDownItem(&amp;strC_Sched_Type, <span class="string">&quot;0&quot;</span> | &amp;SEQ_NUM | <span class="string">&quot;.&quot;</span> | &amp;strXLATLONGNAME);</span><br><span class="line">      Else</span><br><span class="line">         &amp;FLD.AddDropDownItem(&amp;strC_Sched_Type, &amp;SEQ_NUM | <span class="string">&quot;.&quot;</span> | &amp;strXLATLONGNAME);</span><br><span class="line">      End-If;</span><br><span class="line">      &amp;SEQ_NUM = &amp;SEQ_NUM + <span class="number">1</span>;</span><br><span class="line">   End-While;</span><br><span class="line">Else</span><br><span class="line">   &amp;FLD.AddDropDownItem(<span class="string">&quot;&quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">End-If;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PeopleSoft </tag>
            
            <tag> PeopleCode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PeopleSoft-组件搜索视图设置以及注意事项</title>
      <link href="2020/09/16/PeopleSoft-%E7%BB%84%E4%BB%B6%E6%90%9C%E7%B4%A2%E8%A7%86%E5%9B%BE%E8%AE%BE%E7%BD%AE%E4%BB%A5%E5%8F%8A%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9/"/>
      <url>2020/09/16/PeopleSoft-%E7%BB%84%E4%BB%B6%E6%90%9C%E7%B4%A2%E8%A7%86%E5%9B%BE%E8%AE%BE%E7%BD%AE%E4%BB%A5%E5%8F%8A%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9/</url>
      
        <content type="html"><![CDATA[<p>PeopleSoft的组件搜索视图关于<strong>生效日期</strong>的关键字需要进行特殊配置，无搜索视图，新增视图等设置…</p><a id="more"></a><h3 id="带生效日期的搜索视图"><a href="#带生效日期的搜索视图" class="headerlink" title="带生效日期的搜索视图"></a>带生效日期的搜索视图</h3><p>如果搜索视图或者表中存在<strong>生效日期的关键字</strong>，需要打开组件的user-action-correction开关。</p><img src=https://gitee.com/gek7777/cdn.io/raw/master/image/sousuoshitu1.png ><p>还有打开Internet中的开关设置。</p><img src=https://gitee.com/gek7777/cdn.io/raw/master/image/sousuoshitu2.png ><h3 id="无搜索视图（INSTALLATION）以及新增视图"><a href="#无搜索视图（INSTALLATION）以及新增视图" class="headerlink" title="无搜索视图（INSTALLATION）以及新增视图"></a>无搜索视图（INSTALLATION）以及新增视图</h3><p>也可以用 NOSEARCH_VW ，其实就是一个视图，本质还是 INSTALLATION</p><p><img src="D:\GEK\MyDoc\cdn.io\image\image-20200927162855771.png" alt="image-20200927162855771"></p>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PeopleSoft </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PeopleSoft-迁移工程注意事项</title>
      <link href="2020/09/16/PeopleSoft-%E8%BF%81%E7%A7%BB%E5%B7%A5%E7%A8%8B%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9/"/>
      <url>2020/09/16/PeopleSoft-%E8%BF%81%E7%A7%BB%E5%B7%A5%E7%A8%8B%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9/</url>
      
        <content type="html"><![CDATA[<p>PeopleSoft系统DEV-UAT-PRD各环境工程迁移的注意事项。</p><a id="more"></a><h2 id="组件迁移"><a href="#组件迁移" class="headerlink" title="组件迁移"></a>组件迁移</h2><ul><li>组件在AD中注册的话，默认会插入目录结构，此时，迁移工程时只要正常迁移就可以把目录结构一起迁移到目标环境中。</li><li>组件为页面注册时，需要手动插入目录结构，再迁移工程即可。</li></ul><img src=https://gitee.com/gek7777/cdn.io/raw/master/image/mulujigouqianyi.png ><h2 id="消息迁移"><a href="#消息迁移" class="headerlink" title="消息迁移"></a>消息迁移</h2><img src=https://gitee.com/gek7777/cdn.io/raw/master/image/xiaoximuluqianyi.png ><h2 id="query查询迁移"><a href="#query查询迁移" class="headerlink" title="query查询迁移"></a>query查询迁移</h2><ul><li><p>需要先迁移需要的树（trees）</p></li><li><p>再迁移访问组（access group）</p></li></ul><img src=https://gitee.com/gek7777/cdn.io/raw/master/image/accessgroup.png ><ul><li>最后迁移query</li></ul><img src=https://gitee.com/gek7777/cdn.io/raw/master/image/1600226067732.png ><h2 id="进程定义迁移"><a href="#进程定义迁移" class="headerlink" title="进程定义迁移"></a>进程定义迁移</h2><img src=https://gitee.com/gek7777/cdn.io/raw/master/image/jinchengdingyi.png >]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PeopleSoft </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PeopleSoft-用户绑定员工信息修改权限设置</title>
      <link href="2020/09/16/PeopleSoft-%E7%94%A8%E6%88%B7%E7%BB%91%E5%AE%9A%E5%91%98%E5%B7%A5%E4%BF%A1%E6%81%AF%E4%BF%AE%E6%94%B9%E6%9D%83%E9%99%90%E8%AE%BE%E7%BD%AE/"/>
      <url>2020/09/16/PeopleSoft-%E7%94%A8%E6%88%B7%E7%BB%91%E5%AE%9A%E5%91%98%E5%B7%A5%E4%BF%A1%E6%81%AF%E4%BF%AE%E6%94%B9%E6%9D%83%E9%99%90%E8%AE%BE%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<p><strong>页面提示如下：</strong></p><img src=https://gitee.com/gek7777/cdn.io/raw/master/image/1600222502745.png ><p><strong>在组件的加载处，添加处理代码：</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*允许用户修改绑定员工的资料*/</span></span><br><span class="line">AllowEmplidchg(<span class="keyword">true</span>);</span><br><span class="line"><span class="comment">/*不允许用户修改绑定员工的资料*/</span></span><br><span class="line">AllowEmplidchg(<span class="keyword">false</span>);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PeopleSoft </tag>
            
            <tag> PeopleCode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PeopleSoft-系统常用表</title>
      <link href="2020/09/15/PeopleSoft-%E7%B3%BB%E7%BB%9F%E5%B8%B8%E7%94%A8%E8%A1%A8/"/>
      <url>2020/09/15/PeopleSoft-%E7%B3%BB%E7%BB%9F%E5%B8%B8%E7%94%A8%E8%A1%A8/</url>
      
        <content type="html"><![CDATA[<p>PeopleTools是PeopleSoft各种应用的开发工具集合，常用的包括AppDesigner,PeopleCode，DataMover等等。<br>PeopleTools的各种工具与业务无关，PS各种应用比如Finance, HCM, SCM, SRM, Campus等都是用PeopleTools开发而成。<br>PeopleTools的各种定义都存储在数据库里。既然是存在数据库里，那都有哪些表来存储呢？<br>本文适合从事PS开发的技术人员、对PeopleTools感兴趣的读者，PAAS平台架构师等等。</p><a id="more"></a><p>按照PeopleTools对象的类型有如下列表：</p><p>   <strong>Projects:工程</strong><br>    PSPROJECTDEFN — Project header table<br>    PSPROJECTITEM — Definitions in the project<br>    PS_PTOBJECTTYPES — Object types list         </p><p>   <strong>Fields:字段</strong><br>    PSDBFIELD — Fields in the system<br>    PSDBFLDLABL — Field Labels<br>    PSDBFIELDLANG<br>    PSXLATITEM — Translate Values<br>    PSXLATITEMLANG<br>    PSDBFLDLABLLANG                                </p><p>   <strong>Records:表</strong><br>    PSRECDEFN — Record header table (record types)<br>    PSRECFIELD — Fields in the record(subrecords not expanded)<br>    PSRECFIELDALL — Fields in the record(subrecords expanded)<br>    PSKEYDEFN — Indexes<br>    PSTBLSPCCAT — Tablespaces<br>    PSRECTBLSPC — Records’ tablespace assignments<br>    PSRECDEFNLANG — language Record                               </p><p>   <strong>Pages:页面</strong><br>    (Note: Pages still have the name panels inthe PeopleTools table names)<br>    PSPNLDEFN — Page header table<br>    PSPNLFIELD — Page controls (fieldtypes/FIELDTYPE)<br>    PSPNLHTMLAREA — Static HTML Areas on Pages<br>    PSPNLCNTRLDATA — stores additionalattributes for Page controls<br>    PSPNLFIELDEXT — stores additional attributes for Page controls<br>    PSPTPNLRTEDITOR — new PeopleTools 8.50 table that stores attributes relating to the rich-text editor for longcharacter fields.   </p><p>   <strong>Components:组件</strong><br>    (Note: Components still have the name panelgroup in the PeopleTools table names)<br>    PSPNLGRPDEFN — Component header table<br>    PSPNLGROUP — Pages in the components<br>    Component Interface<br>    PSBCDEFN — header record; one row for each component interface<br>    PSBCITEM — one row for each property    </p><p>   <strong>Menus:菜单</strong><br>    PSMENUDEFN — Menu header table<br>    PSMENUITEM — Items (components) on the menu     </p><p>   <strong>Security:安全性</strong><br>    PSCLASSDEFN — Permission List header table<br>    PSAUTHITEM — Menu items granted security bypermission lists<br>    PSROLEDEFN — Role header table<br>    PSROLECLASS — Permission Lists in roles<br>    PSOPRDEFN — User ID header table<br>    PSROLEUSER — Roles granted to users<br>    PSAUTHBUSCOMP — Access to ComponentInterfaces<br>    PSAUTHWEBLIBVW — Access to just WebLibraries<br>    PS_SCRTY_ACC_GRP — Query Security AccessGroups<br>    PSOPROBJ — Definition security (connects apermission list to a definition group) </p><p>   <strong>Tree:树</strong><br>    PSTREENODE</p><p>   <strong>Process Scheduler</strong><br>    PS_PRCSDEFN — Process Definition Header<br>    PS_PRCSTYPEDEFN — Process Type DefinitionHeader<br>    PS_PRCSDEFNPNL — Component<br>    PS_PRCSJOBDEFN — Job Header<br>    PSPRCSRQST — Process Request Instances<br>    PS_PRCSJOBITEM — Job Processes<br>    PSREN — stores REN server ports (from here)<br>    PS_SERVERCLASS — Server Class<br>    PS_PRCS_CAT_TBL — Process Categories<br>    PS_SERVERCATEGORY — Server Categories<br>    PS_SERVERDEFN — Server Definition Header<br>    PSPRCSQUE — Process Queue<br>    PSRF_FLIST_TBL — Folder Definition         </p><p>   <strong>Portal</strong><br>    PSPRSMDEFN — Content References and Folders<br>    PSPRUHTABPGLT — Portal User HP Tab Pagelet<br>    PSPRUHDEFN — Homepage definition(from here)<br>    PSPRUHTAB — Homepage Tab (from here)<br>    PSWEBPROFNVP — Web Profile Settings                      </p><p>   <strong>Change Control</strong><br>    PSCHGCTLHIST — shows history of lockeddefinitions with project name, incident, and description<br>    PSCHGCTLLOCK — shows definitions that arecurrently locked<br>    PSCOMPOBJDIFF — I think this shows comparereport from a Project Compare<br>    PSPROJECTMSG — messages from a project copy        </p><p>   <strong>Application Engine:进程</strong><br>    PSAEAPPLDEFN — header record; 1 row per appengine<br>    PSAEAPPLSTATE — state records assigned toapp engines<br>    PSAEAPPLTEMPTBL — temp tables assigned toapp engines<br>    PSAESECTDEFN — sections<br>    PSAESTEPDEFN — steps<br>    PSAESTEPMSGDEFN<br>    PSAESTMTDEFN — actions (action types)<br>    PSAESECTDTLDEFN — section details<br>    PS_AEONLINEINST — should be 100 rows in thetable<br>    PS_AEINSTANCENBR — should be 100 rows inthe table<br>    PS_AELOCKMGR — should be 100 rows in thetable<br>    PRCSRUNCNTL_SBP   –进程sub页面<br>    PRCSRUNCNTL  – 进程subpage recodr name          </p><p>   <strong>HTML Definitions</strong><br>    PSCONTDEFN — header record; last updatetime, etc.<br>    PSCONTENT — stores actual text in the HTMLdefinition    </p><p>   <strong>PeopleCode:代码</strong><br>    PSPCMPROG — PeopleCode program<br>    PSPCMTXT — The plain text of the PeopleCodeprograms   </p><p>   <strong>SQL Definitions</strong><br>    PSSQLDEFN — header record; last updatetime, etc.<br>    PSSQLTEXTDEFN — stores actual text in the SQL definition<br>    PS_SQLSTMT_TBL — stores SQL statemernts for COBOL        </p><p>   <strong>File Layout Definitions</strong><br>    PSFLDDEFN — header record; last update time, etc.<br>    PSFLDSEGDEFN — stores the segments for eachlayout<br>    PSFLDFIELDDEFN — stores the fields for eachlayout    </p><p>   <strong>Query</strong><br>    PSQRYDEFN — Query Definition Header<br>    PSQRYBIND — Query bind variables/parameters<br>    PSQRYRECORD — Query records<br>    PSQRYFIELD — Fields<br>    PSCONQRSDEFN — connected query<br>    PSCONQRSMAP — connected query: list ofchild queries<br>    PSCONQRSFLDREL — connected query<br>    PSCONQRSRUNCNTR — connected query<br>    PSCONQRSRUNPRM — connected query    </p><p>   <strong>Workflow</strong><br>    APPR_RULE_DETL – Approval Rule Defn Details<br>    APPR_RULE_FIELD – Approval Rule Defn RouteCntl<br>    APPR_RULE_AMT – Approval Rule Amounts<br>    RTE_CNTL_LN – Route Control Profile Line<br>    RTE_CNTL_RUSER – RoleUser Route CntlProfiles<br>    RTE_CNTL_TYPE – Route Control Type<br>    RTE_CNTL_HDR – Routing Control Type<br>    PSWORKLIST — list of work items for eachuser<br>    PS_WF_INSTSTATUS — description of thestatus<br>    PSACTIVITYDEFN — Activity Definition<br>    PSBUSPROCDEFN — Business Process Definition<br>    PSEVENTDEFN — Event Definition<br>    PSEVENTROUTE — Event Route            </p><p>   <strong>Timings</strong><br>    BAT_TIMINGS_LOG<br>    BAT_TIMINGS_DTL<br>    BAT_TIMINGS_FN<br>    File References<br>    PSFILEREDEFN — File references (keys:FILEREFNAME,FILEREFTYPECODE)</p><p>   <strong>EDI Manager</strong><br>    PS_ECINMAPFILE — Records<br>    PS_ECINMAPREC — Records<br>    PS_ECMAPDEFN — EDI Map Definition<br>    PS_ECINMAPFLD — Fields in the Records<br>    PS_ECINMAPRECFLD — Fields in the Records<br>    PS_ECOUTMAPREC<br>    PS_ECOUTMAPFLD    </p><p>   <strong>Feeds</strong><br>    PS_PTFP_FEED<br>    PS_PTFP_DATATYPE<br>    PS_PTFP_DTYPE_IBSO<br>    PS_PTFP_DTYPE_ATTR<br>    PS_PTFP_ATTRS<br>    PS_PTFP_SETTINGS<br>    PS_PTFP_PARMS<br>    PS_PTFP_SECURITY<br>    PS_PTFP_PVALS<br>    PS_PTFP_ADMN_PREF<br>    PS_PTFP_USER_PREF    </p><p>   <strong>Integration Broker</strong><br>    PSMSGPARTS — Message Parts<br>    PSMSGVER — Message Version<br>    PSMSGREC — Message Record<br>    PSOPERATION — Operation<br>    PSOPRVERDFN — Operation Versions<br>    PSSERVICEOPR — Service Operations<br>    PSOPRHDLR — Operation Handlers<br>    PSIBRTNGDEFN — Routings<br>    PSMSGNODEDEFN — Message Nodes<br>    PSRTNGDFNPARM — Routing Parameters<br>    PSOPRVERDFNPARM<br>    PSQUEUEDEFN<br>    PSIBSCMADFN<br>    PSOPERATIONDMS</p><p>   <strong>Message Catalog</strong><br>    PSMSGSETDEFN — Message Set — the header for that message set<br>    PSMSGCATDEFN — Individual messages inthe message catalog/message set<br>    SQR Strings<br>    PS_STRINGS_TBL — String definition (sqrtarns.sqc)<br>    PS_STRINGS_LNG_TBL — Translated String (sqrtarns.sqc)                     </p>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SQL </tag>
            
            <tag> PeopleSoft </tag>
            
            <tag> PeopleCode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PeopleSoft-RowSet类</title>
      <link href="2020/09/02/PeopleSoft-RowSet%E7%B1%BB/"/>
      <url>2020/09/02/PeopleSoft-RowSet%E7%B1%BB/</url>
      
        <content type="html"><![CDATA[<h3 id="创建rowset"><a href="#创建rowset" class="headerlink" title="创建rowset"></a>创建rowset</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//根据表创建一个空的rowset；</span></span><br><span class="line">Local Rowset &amp;rs = CreateRowset(Record.C_PI_QRY_VW);</span><br><span class="line"></span><br><span class="line"><span class="comment">//填充方法，调用方法将数据填充进rowset中；</span></span><br><span class="line">Local number &amp;num_count = &amp;rs.Fill(<span class="string">&quot;where 1=1 &quot;</span>);</span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="获取RowSet"><a href="#获取RowSet" class="headerlink" title="获取RowSet"></a>获取RowSet</h3><ul><li><strong>从0层开始获取；</strong></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//根据表获取一个空的rowset；</span></span><br><span class="line">Local Rowset &amp;rs = getLevel0().getrow(<span class="number">1</span>).GetRowset(Scoll.C_PI_QRY_VW);</span><br><span class="line"></span><br><span class="line">local number &amp;num_count = &amp;rs.select(record.C_PI_QRY_VW,<span class="string">&quot; where 1=1 &quot;</span>);</span><br></pre></td></tr></table></figure><ul><li><strong>从当前所在代码的位置获取；</strong></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//根据表获取一个空的rowset；</span></span><br><span class="line">Local Rowset &amp;rs = GetRowset();</span><br><span class="line"></span><br><span class="line"><span class="comment">//从主数据库查询数据填充到RowSet中；</span></span><br><span class="line">local number &amp;num_count = &amp;rs.select(record.C_PI_QRY_VW,<span class="string">&quot; where 1=1 &quot;</span>);</span><br></pre></td></tr></table></figure><h3 id="清空Rowset释放缓冲区"><a href="#清空Rowset释放缓冲区" class="headerlink" title="清空Rowset释放缓冲区"></a>清空Rowset释放缓冲区</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//在select() 获取数据前进行缓冲清空；注意：会在缓冲区中保留一行；</span></span><br><span class="line">&amp;rs.flush();</span><br></pre></td></tr></table></figure><h3 id="复制Rowset"><a href="#复制Rowset" class="headerlink" title="复制Rowset"></a>复制Rowset</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//将&amp;rs中的数据复制到&amp;rs1中；</span></span><br><span class="line">&amp;rs.CopyTo(&amp;rs1);</span><br></pre></td></tr></table></figure><h3 id="增、删Rowset中的行"><a href="#增、删Rowset中的行" class="headerlink" title="增、删Rowset中的行"></a>增、删Rowset中的行</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//在第n行插入一行；0 -- 表示插入第一条；0&lt;= n &lt;= Rowset的有效行号；</span></span><br><span class="line">insertRow(n);</span><br><span class="line"></span><br><span class="line"><span class="comment">//删除Rowset中特定行；1&lt;= n &lt;= Rowset的有效行号；</span></span><br><span class="line">deleteRow(n);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>获取Rowset中的特定行</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//下列四种写法效果相同；</span></span><br><span class="line">&amp;ROW = GetRowset().GetRow(<span class="number">5</span>);</span><br><span class="line">&amp;ROW = GetRowset()(<span class="number">5</span>);</span><br><span class="line">&amp;ROW = &amp;ROWSET.GetRow(<span class="number">5</span>);</span><br><span class="line">&amp;ROW = &amp;ROWSET(<span class="number">5</span>);</span><br></pre></td></tr></table></figure><h3 id="对Rowset进行排序"><a href="#对Rowset进行排序" class="headerlink" title="对Rowset进行排序"></a>对Rowset进行排序</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//按指定字段组合</span></span><br><span class="line">&amp;rs.sort(table.filed1, <span class="string">&quot;A&quot;</span>, table.field2,<span class="string">&quot;D&quot;</span>);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">参数为数组，可以多字段组合排序；A为升序，D为降序；</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PeopleCode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PeopleSoft-Record类</title>
      <link href="2020/09/02/PeopleSoft-Record%E7%B1%BB/"/>
      <url>2020/09/02/PeopleSoft-Record%E7%B1%BB/</url>
      
        <content type="html"><![CDATA[<h3 id="创建一个空的record"><a href="#创建一个空的record" class="headerlink" title="创建一个空的record"></a>创建一个空的record</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//根据表创建一个record放在缓冲区;</span></span><br><span class="line">local record &amp;rec = createRecord(record.table);</span><br><span class="line"><span class="comment">//对字段赋值</span></span><br><span class="line">&amp;rec.field.value = <span class="string">&quot;123&quot;</span>;</span><br><span class="line">&amp;rec.field.value = <span class="string">&quot;abc&quot;</span>;</span><br><span class="line"><span class="comment">//将缓冲区的数据写入数据库中；</span></span><br><span class="line">&amp;rec.insert();</span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="获取Page页面的record"><a href="#获取Page页面的record" class="headerlink" title="获取Page页面的record"></a>获取Page页面的record</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">local record &amp;rec = getRecord(record.table);</span><br><span class="line"><span class="comment">//对字段赋值</span></span><br><span class="line">&amp;rec.field.value = <span class="string">&quot;123&quot;</span>;</span><br><span class="line">&amp;rec.field.value = <span class="string">&quot;abc&quot;</span>;</span><br><span class="line"><span class="comment">//将缓冲区的数据更新到数据库中；</span></span><br><span class="line">&amp;rec.update();</span><br></pre></td></tr></table></figure><h3 id="获取record中某个字段的值"><a href="#获取record中某个字段的值" class="headerlink" title="获取record中某个字段的值"></a>获取record中某个字段的值</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//获取record中的某个字段的值；</span></span><br><span class="line">&amp;rec.getfield(field.name).vlaue ;</span><br></pre></td></tr></table></figure><h3 id="增、删、改record的一条数据"><a href="#增、删、改record的一条数据" class="headerlink" title="增、删、改record的一条数据"></a>增、删、改record的一条数据</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//根据表创建一个record放在缓冲区;</span></span><br><span class="line">local record &amp;rec = createRecord(record.table);</span><br><span class="line"><span class="comment">//对字段赋值</span></span><br><span class="line">&amp;rec.field.value = <span class="string">&quot;123&quot;</span>;</span><br><span class="line">&amp;rec.field.value = <span class="string">&quot;abc&quot;</span>;</span><br><span class="line"><span class="comment">//将缓冲区的数据新增写入数据库中；</span></span><br><span class="line">&amp;rec.insert();</span><br><span class="line"></span><br><span class="line"><span class="comment">//根据缓冲区的数据删除数据库中的数据；</span></span><br><span class="line">&amp;rec.delete();</span><br><span class="line"></span><br><span class="line"><span class="comment">//根据缓冲区的数据修改数据库中的数据；</span></span><br><span class="line">&amp;rec.update();</span><br></pre></td></tr></table></figure><h3 id="根据KEYS获取对应的record记录"><a href="#根据KEYS获取对应的record记录" class="headerlink" title="根据KEYS获取对应的record记录"></a>根据KEYS获取对应的record记录</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//根据表创建一个record放在缓冲区;</span></span><br><span class="line">local record &amp;rec = createRecord(record.table);</span><br><span class="line"><span class="comment">//对字段赋值</span></span><br><span class="line">&amp;rec.key1.value = <span class="string">&quot;123&quot;</span>;</span><br><span class="line">&amp;rec.key2.value = <span class="string">&quot;abc&quot;</span>;</span><br><span class="line"><span class="comment">//根据缓冲区的key值，获取数据库中的对应的数据，如果获取到了，则返回true,否则返回false；</span></span><br><span class="line">&amp;ret = &amp;rec.SelectByKey();</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PeopleCode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PeopleSoft-PeopleCode与Java数据类型映射</title>
      <link href="2020/09/02/PeopleSoft-PeopleCode%E4%B8%8EJava%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E6%98%A0%E5%B0%84/"/>
      <url>2020/09/02/PeopleSoft-PeopleCode%E4%B8%8EJava%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E6%98%A0%E5%B0%84/</url>
      
        <content type="html"><![CDATA[<p>PeopleSoft中的数据类型和Java数据类型的映射关系如下…</p><a id="more"></a><h3 id="PeopleCode-and-Java-数据类型映射"><a href="#PeopleCode-and-Java-数据类型映射" class="headerlink" title="PeopleCode and Java 数据类型映射"></a>PeopleCode and Java 数据类型映射</h3><p> 下表描述了用于解析重载Java方法和基本转换的类型匹配。 </p><table><thead><tr><th align="left">PeopleCode Type</th><th align="left">Java Type/Class</th></tr></thead><tbody><tr><td align="left">Float</td><td align="left">double, float</td></tr><tr><td align="left">Number</td><td align="left">double, float, byte, char, short, int, long</td></tr><tr><td align="left">Integer</td><td align="left">int, byte, char, short, long</td></tr><tr><td align="left">Boolean</td><td align="left">Boolean</td></tr><tr><td align="left">String</td><td align="left">java.lang.String</td></tr><tr><td align="left">Date</td><td align="left">java.sql.Date</td></tr><tr><td align="left">Time</td><td align="left">java.sql.Time</td></tr><tr><td align="left">Date Time</td><td align="left">java.util.Date</td></tr><tr><td align="left">any kind of object</td><td align="left">any kind of object</td></tr></tbody></table><p> 下表说明了为生成Java类java.lang.Object所做的转换 </p><table><thead><tr><th align="left">PeopleCode Type</th><th align="left">Java Type/Class</th></tr></thead><tbody><tr><td align="left">Float, Number</td><td align="left">java.lang.Double</td></tr><tr><td align="left">Integer</td><td align="left">java.lang.Integer</td></tr><tr><td align="left">Boolean</td><td align="left">java.lang.Boolean</td></tr></tbody></table><p> 下表表示Java方法或构造函数的签名所要求的其他转换。 </p><table><thead><tr><th align="left">PeopleCode    Type</th><th align="left">Java Class</th></tr></thead><tbody><tr><td align="left">Integer,   Number, Float</td><td align="left">java.lang.Integer, java.lang.Byte, java.lang.Character, java.lang.Short, java.lang.Long, java.lang.Float, PeopleSoft.PeopleCode.intHolder, PeopleSoft.PeopleCode.doubleHolder</td></tr><tr><td align="left">String</td><td align="left">PeopleSoft.PeopleCode.StringHolder</td></tr><tr><td align="left">peoplecode builtin class Xxx</td><td align="left">PeopleSoft.PeopleCode.Xxx</td></tr><tr><td align="left">JavaObject</td><td align="left">corresponding Java object</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> PeopleCode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PeopleSoft-对外提供接口</title>
      <link href="2020/09/02/PeopleSoft-%E5%AF%B9%E5%A4%96%E6%8F%90%E4%BE%9B%E6%8E%A5%E5%8F%A3/"/>
      <url>2020/09/02/PeopleSoft-%E5%AF%B9%E5%A4%96%E6%8F%90%E4%BE%9B%E6%8E%A5%E5%8F%A3/</url>
      
        <content type="html"><![CDATA[<p>以下为PeopleSoft系统对外部提供接口整体设计流程，整体思路为：</p><h2 id="设计思路"><a href="#设计思路" class="headerlink" title="设计思路"></a>设计思路</h2><h3 id="设置系统监听"><a href="#设置系统监听" class="headerlink" title="设置系统监听"></a>设置系统监听</h3><ul><li>创建消息</li><li>创建服务</li><li>创建服务操作</li></ul><h3 id="编写处理方法代码"><a href="#编写处理方法代码" class="headerlink" title="编写处理方法代码"></a>编写处理方法代码</h3><h2 id="设置系统监听-1"><a href="#设置系统监听-1" class="headerlink" title="设置系统监听"></a>设置系统监听</h2><a id="more"></a><h3 id="创建消息"><a href="#创建消息" class="headerlink" title="创建消息"></a>创建消息</h3><img src=https://gitee.com/gek7777/cdn.io/raw/master/image/1599033710690.png ><h3 id="创建服务"><a href="#创建服务" class="headerlink" title="创建服务"></a>创建服务</h3><img src=https://gitee.com/gek7777/cdn.io/raw/master/image/1599033866151.png ><h3 id="创建服务操作"><a href="#创建服务操作" class="headerlink" title="创建服务操作"></a>创建服务操作</h3><ul><li>常规设置</li></ul><img src=https://gitee.com/gek7777/cdn.io/raw/master/image/2020-09-02_160929.png ><ul><li>处理程序设置</li></ul><img src=https://gitee.com/gek7777/cdn.io/raw/master/image/2020-09-02_16-18-20.png ><h2 id="编写处理方法代码-1"><a href="#编写处理方法代码-1" class="headerlink" title="编写处理方法代码"></a>编写处理方法代码</h2><img src=https://gitee.com/gek7777/cdn.io/raw/master/image/1599035525554.png ><ul><li>common类  ——  日志类</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Common</span></span></span><br><span class="line"><span class="class">    /*申明构造方法*/</span></span><br><span class="line"><span class="class">   <span class="title">method</span> <span class="title">Common</span>()</span>;</span><br><span class="line">  <span class="comment">/*声明类的方法*/</span></span><br><span class="line">   <span class="function">method <span class="title">AddRequestJsonLog</span><span class="params">(&amp;strOaApplyNum As string, &amp;strApplyId As string, &amp;objRequestJson As JsonObject)</span></span>;</span><br><span class="line"><span class="keyword">private</span></span><br><span class="line">    <span class="comment">/*申明私有session*/</span></span><br><span class="line">   instance ApiObject &amp;oSession;</span><br><span class="line">end-<span class="class"><span class="keyword">class</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*定义构造方法*/</span></span><br><span class="line">method Common</span><br><span class="line">end-method;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*定义类的方法*/</span></span><br><span class="line">method AddRequestJsonLog</span><br><span class="line">   /+ &amp;strOaApplyNum as String,      +/  </span><br><span class="line">   /+ &amp;strApplyId as String,    +/</span><br><span class="line">   /+ &amp;objRequestJson as JsonObject +/</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    入参：&amp;strOaApplyNum  -- OA申请单号；</span></span><br><span class="line"><span class="comment">      &amp;strApplyId  -- PS申请单号；</span></span><br><span class="line"><span class="comment">      &amp;objRequestJson  --  请求信息json对象；</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line"><span class="comment">/*获取日志表record*/</span></span><br><span class="line">   Local Record &amp;reApplyLog = CreateRecord(Record.C_APPLY_LOG);</span><br><span class="line">   &amp;reApplyLog.C_OA_APPL_NUM.Value = &amp;strOaApplyNum;</span><br><span class="line">   &amp;reApplyLog.C_APPLY_ID.Value = &amp;strApplyId;</span><br><span class="line"><span class="comment">/*根据key值找记录，找到就进行修改*/</span></span><br><span class="line">   If &amp;reApplyLog.SelectByKey() Then</span><br><span class="line">      &amp;reApplyLog.C_REQ_JSON.Value = &amp;objRequestJson.ToString();</span><br><span class="line"><span class="comment">/*更新表*/</span></span><br><span class="line">      &amp;reApplyLog.Update();</span><br><span class="line">   End-If;</span><br><span class="line">end-method;</span><br></pre></td></tr></table></figure><ul><li>MedResult类  —— 入口类</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*导入需要的包，其中IRequestHandler 为PS监听器包*/</span></span><br><span class="line"><span class="keyword">import</span> PS_PT:Integration:IRequestHandler;</span><br><span class="line"><span class="keyword">import</span> C_INTERFACE_MGR:C_PERSONNEL_MGR:MedResult:Applicant;</span><br><span class="line"><span class="keyword">import</span> C_COMMON_FUNC:COMMON;</span><br><span class="line"><span class="keyword">import</span> C_INTERFACE_MGR:COMMON:Common;</span><br><span class="line"></span><br><span class="line">class MedResult implements PS_PT:Integration:IRequestHandler</span><br><span class="line">   <span class="comment">/*声明构造方法*/</span></span><br><span class="line">   <span class="function">method <span class="title">MedResult</span><span class="params">()</span></span>;</span><br><span class="line"><span class="comment">/*申明入口方法*/</span></span><br><span class="line">   <span class="function">method <span class="title">OnRequest</span><span class="params">(&amp;MSG As Message)</span> Returns Message</span>;</span><br><span class="line"><span class="comment">/*申明用人需求数据写入的调用方法*/</span></span><br><span class="line">   rem 用人需求数据写入;</span><br><span class="line">   <span class="function">method <span class="title">OnRequestMedResult</span><span class="params">(&amp;MSG As Message)</span> Returns Message</span>;</span><br><span class="line">end-<span class="class"><span class="keyword">class</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*定义构造方法*/</span></span><br><span class="line">method MedResult</span><br><span class="line">end-method;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*定义入口方法*/</span></span><br><span class="line">method OnRequest</span><br><span class="line">   /+ &amp;MSG as Message +/</span><br><span class="line">   /+ Returns Message +/</span><br><span class="line">   /+ Extends/implements PS_PT:Integration:IRequestHandler.OnRequest +/</span><br><span class="line">   Local Message &amp;ResMsg;</span><br><span class="line">   Local number &amp;URIResourceIndex = &amp;MSG.URIResourceIndex;</span><br><span class="line">   <span class="comment">/*当URIResourceIndex = 1 时，即前面说的，把服务操作的URI模板设置为问号 ? 的情况*/</span></span><br><span class="line">   If &amp;URIResourceIndex = <span class="number">1</span> Then</span><br><span class="line">      Return %This.OnRequestMedResult(&amp;MSG);</span><br><span class="line">   End-If;</span><br><span class="line">end-method;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*定义用人需求数据写入的调用方法*/</span></span><br><span class="line">rem 用人需求数据写入;</span><br><span class="line">method OnRequestMedResult</span><br><span class="line">   /+ &amp;MSG as Message +/</span><br><span class="line">   /+ Returns Message +/</span><br><span class="line">   </span><br><span class="line">   Local Message &amp;ResMsg;</span><br><span class="line">   Local string &amp;strResultMsg;</span><br><span class="line"></span><br><span class="line">   <span class="comment">/*获取入参报文*/</span></span><br><span class="line">   Local string &amp;requestJsonString = &amp;MSG.GetContentString();</span><br><span class="line">   </span><br><span class="line">   <span class="comment">/*解析Json*/</span></span><br><span class="line">   Local JsonParser &amp;JsonParser = CreateJsonParser();</span><br><span class="line">   Local <span class="keyword">boolean</span> &amp;JsonParserStatus = &amp;JsonParser.Parse(&amp;requestJsonString);</span><br><span class="line">   If &amp;JsonParserStatus = False Then</span><br><span class="line">      <span class="keyword">throw</span> CreateException(<span class="number">10003</span>, - <span class="number">1</span>, <span class="string">&quot;Json解析错误&quot;</span>);</span><br><span class="line">   End-If;</span><br><span class="line">   </span><br><span class="line">   <span class="comment">/*取请求报文参数*/</span></span><br><span class="line">   Local JsonObject &amp;jObj = &amp;JsonParser.GetRootObject();</span><br><span class="line">   Local string &amp;strOaApplyNum = &amp;jObj.GetProperty(<span class="string">&quot;C_APP_SEQ&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">/*获取处理类的对象，将解析后的json对象传入*/</span></span><br><span class="line">   Local C_INTERFACE_MGR:C_PERSONNEL_MGR:MedResult:Applicant &amp;Applicant = create C_INTERFACE_MGR:C_PERSONNEL_MGR:MedResult:Applicant();</span><br><span class="line">   Local <span class="keyword">boolean</span> &amp;boolResult = &amp;Applicant.addMedResult(&amp;jObj);</span><br><span class="line">   </span><br><span class="line">   <span class="comment">/*生成响应报文*/</span></span><br><span class="line">   Local JsonObject &amp;jObjResRoot = CreateJsonObject();</span><br><span class="line">   Local JsonObject &amp;jObjResRoot2 = CreateJsonObject();</span><br><span class="line">   </span><br><span class="line">   If &amp;boolResult = True Then</span><br><span class="line">      &amp;jObjResRoot.AddJsonObject(<span class="string">&quot;C_BAS_INFO_RES&quot;</span>, &amp;jObjResRoot2);</span><br><span class="line">      &amp;jObjResRoot2.AddProperty(<span class="string">&quot;RESULTCODE&quot;</span>, <span class="number">1</span>);</span><br><span class="line">      &amp;jObjResRoot2.AddProperty(<span class="string">&quot;RESULTMSG&quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">      &amp;jObjResRoot2.AddProperty(<span class="string">&quot;TIME&quot;</span>, %Datetime);</span><br><span class="line">   Else</span><br><span class="line">      &amp;jObjResRoot.AddJsonObject(<span class="string">&quot;C_BAS_INFO_RES&quot;</span>, &amp;jObjResRoot2);</span><br><span class="line">      &amp;jObjResRoot2.AddProperty(<span class="string">&quot;RESULTCODE&quot;</span>, <span class="number">0</span>);</span><br><span class="line">      rem 获取错误信息;</span><br><span class="line">      SQLExec(<span class="string">&quot;SELECT AL.DESCRLONG FROM PS_C_APPLY_LOG AL WHERE AL.C_OA_APPL_NUM = :1 AND AL.C_APPLY_ID = :2&quot;</span>, &amp;strOaApplyNum, <span class="string">&quot;medresult&quot;</span>, &amp;strResultMsg);</span><br><span class="line">      &amp;jObjResRoot2.AddProperty(<span class="string">&quot;RESULTMSG&quot;</span>, &amp;strResultMsg);</span><br><span class="line">      &amp;jObjResRoot2.AddProperty(<span class="string">&quot;TIME&quot;</span>, %Datetime);</span><br><span class="line">   End-If;</span><br><span class="line">   </span><br><span class="line">   <span class="comment">/*获取公共类的日志类的对象，将OA申请单号，参数，json对象传入 */</span></span><br><span class="line">   Local C_INTERFACE_MGR:COMMON:Common &amp;addRequestJsonLog = create C_INTERFACE_MGR:COMMON:Common();</span><br><span class="line">   &amp;addRequestJsonLog.AddRequestJsonLog(&amp;strOaApplyNum, <span class="string">&quot;medresult&quot;</span>, &amp;jObj);</span><br><span class="line">   </span><br><span class="line">   <span class="comment">/*生成响应报文*/</span></span><br><span class="line">   Local string &amp;responseJsonString = &amp;jObjResRoot.ToString();</span><br><span class="line">   </span><br><span class="line">   Local Message &amp;responseMessage = CreateMessage(@(<span class="string">&quot;Operation.&quot;</span> | &amp;MSG.OperationName), %IntBroker_Response);</span><br><span class="line">   </span><br><span class="line">   Local <span class="keyword">boolean</span> &amp;bRet = &amp;responseMessage.SetContentString(&amp;responseJsonString);</span><br><span class="line">   </span><br><span class="line">   Return &amp;responseMessage;</span><br><span class="line">   </span><br><span class="line">end-method;</span><br></pre></td></tr></table></figure><ul><li>Applicant类  ——  处理类</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Applicant</span></span></span><br><span class="line"><span class="class">   /*申明构造方法*/</span></span><br><span class="line"><span class="class">   <span class="title">method</span> <span class="title">Applicant</span>()</span>;</span><br><span class="line">   <span class="comment">/*申明离职数据写入方法*/</span></span><br><span class="line">   <span class="function">method <span class="title">addMedResult</span><span class="params">(&amp;ApplicantJsonObj As JsonObject)</span> Returns <span class="keyword">boolean</span></span>;</span><br><span class="line">  <span class="comment">/*声明错误捕获方法*/</span></span><br><span class="line">   <span class="function">method <span class="title">errorHandler</span><span class="params">(&amp;strC_APP_SEQ As string, &amp;strEMPLID As string)</span></span>;</span><br><span class="line"><span class="comment">/*声明日志表更新方法*/</span></span><br><span class="line">   <span class="function">method <span class="title">updateErrorLogTable</span><span class="params">(&amp;strC_APP_SEQ As string, &amp;strEMPLID As string, &amp;_errMsgText As string)</span></span>;</span><br><span class="line"><span class="keyword">private</span></span><br><span class="line">   <span class="comment">/*声明私session*/</span></span><br><span class="line">   instance ApiObject &amp;oSession;</span><br><span class="line">end-<span class="class"><span class="keyword">class</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*定义构造方法*/</span></span><br><span class="line">method Applicant</span><br><span class="line">   &amp;oSession = GetSession();</span><br><span class="line">   &amp;oSession.connect(<span class="number">1</span>, <span class="string">&quot;&quot;</span>, <span class="string">&quot;POSTDATA&quot;</span>, <span class="string">&quot;&quot;</span>, <span class="number">0</span>);</span><br><span class="line">   SetLanguage(<span class="string">&quot;ZHS&quot;</span>);</span><br><span class="line">   &amp;oSession.PSMessagesMode = <span class="number">1</span>;</span><br><span class="line">end-method;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    功能：定义离职数据写入方法</span></span><br><span class="line"><span class="comment">    入参：&amp;ApplicantJsonObj -- json对象；</span></span><br><span class="line"><span class="comment">    回参：boolean值；</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">method addMedResult</span><br><span class="line">   /+ &amp;ApplicantJsonObj as JsonObject +/</span><br><span class="line">   /+ Returns Boolean +/</span><br><span class="line"><span class="comment">/*定义CI使用到的变量*/</span></span><br><span class="line">   Local ApiObject &amp;oCEmplDemandComCi;</span><br><span class="line">   Local ApiObject &amp;oCWflPrcsVwCollection, &amp;oCWflPrcsVw;</span><br><span class="line">   Local ApiObject &amp;oCEmplDemandSCollection, &amp;oCEmplDemandS;</span><br><span class="line">   <span class="comment">/*定义变量*/</span></span><br><span class="line">   Local string &amp;strC_APP_SEQ, &amp;strC_APP_DT, &amp;strEMPLID, &amp;NAME, &amp;strC_APPLI_RS, &amp;DEPTID, &amp;DESCR, &amp;strEMPLID2, &amp;NAME2, &amp;DEPTID1, &amp;strDESCR254;</span><br><span class="line">   Local string &amp;strC_RE_NO, &amp;strC_APPLI_LEVEL, &amp;strPOSITION_NBR, &amp;strC_POSN_GRDE_ID, &amp;strC_DEMAND_NUM, &amp;strEMPLID_ASSIGN_BY, &amp;strC_PRO_PRD_DT, &amp;strDESCR_0;</span><br><span class="line">   Local date &amp;APP_DATE, &amp;PRO_PRD_DATE;</span><br><span class="line">   </span><br><span class="line"> <span class="comment">/*定义日志文件*/</span></span><br><span class="line">   Local File &amp;fileLog;</span><br><span class="line">   &amp;fileLog = GetFile(<span class="string">&quot;/file/C_MED_RESULT.log&quot;</span>, <span class="string">&quot;A&quot;</span>, <span class="string">&quot;A&quot;</span>, %FilePath_Absolute);</span><br><span class="line">   &amp;fileLog.WriteLine(<span class="string">&quot;********* 时间：&quot;</span> | %Date | <span class="string">&quot;  ******&quot;</span>);</span><br><span class="line">   &amp;fileLog.WriteLine(<span class="string">&quot;*********  Begin C_MED_RESULT  ******&quot;</span>);</span><br><span class="line">   </span><br><span class="line">   <span class="keyword">try</span></span><br><span class="line">      <span class="comment">/*校验申请单号重复性*/</span></span><br><span class="line">      Local string &amp;isExitFlag = <span class="string">&quot; &quot;</span>;</span><br><span class="line">      Local string &amp;ERR = <span class="string">&quot;&quot;</span>;</span><br><span class="line">      &amp;strC_APP_SEQ = &amp;ApplicantJsonObj.GetProperty(<span class="string">&quot;C_APP_SEQ&quot;</span>);</span><br><span class="line">      SQLExec(<span class="string">&quot; SELECT &#x27;X&#x27; from PS_C_EMPL_DEMAND_T  t  WHERE t.c_section_type = &#x27;1000000002&#x27; AND   t.C_APP_SEQ = :1 &quot;</span>, &amp;strC_APP_SEQ, &amp;isExitFlag);</span><br><span class="line">      <span class="comment">/*申请单号未重复，进入处理*/</span></span><br><span class="line">      If &amp;isExitFlag &lt;&gt; <span class="string">&quot;X&quot;</span> Then</span><br><span class="line">         <span class="comment">/* 从json获取用人需求数据; */</span></span><br><span class="line">         &amp;strC_APP_DT = &amp;ApplicantJsonObj.GetProperty(<span class="string">&quot;C_APP_DT&quot;</span>);</span><br><span class="line">         &amp;strC_APPLI_RS = &amp;ApplicantJsonObj.GetProperty(<span class="string">&quot;C_APPLI_RS&quot;</span>);</span><br><span class="line">         &amp;strEMPLID = &amp;ApplicantJsonObj.GetProperty(<span class="string">&quot;EMPLID&quot;</span>);</span><br><span class="line">         &amp;fileLog.WriteLine(<span class="string">&quot;&amp;strEMPLID --- &quot;</span> | &amp;strEMPLID);</span><br><span class="line">         SQLExec(<span class="string">&quot;select NAME , DEPTID, DESCR1 FROM  PS_C_JOB_CURR_V  WHERE EMPLID = :1  &quot;</span>, &amp;strEMPLID, &amp;NAME, &amp;DEPTID, &amp;DESCR);</span><br><span class="line">         &amp;strEMPLID2 = &amp;ApplicantJsonObj.GetProperty(<span class="string">&quot;EMPLID2&quot;</span>);</span><br><span class="line">         &amp;strDESCR254 = &amp;ApplicantJsonObj.GetProperty(<span class="string">&quot;DESCR254&quot;</span>);</span><br><span class="line">         </span><br><span class="line">         <span class="comment">/* json数据写入日志记录 */</span></span><br><span class="line">         &amp;fileLog.WriteLine(<span class="string">&quot;*********  Begin JOSNDATA  ******&quot;</span>);</span><br><span class="line">         &amp;fileLog.WriteLine(<span class="string">&quot;&amp;strC_APP_SEQ --- &quot;</span> | &amp;strC_APP_SEQ);</span><br><span class="line">         &amp;fileLog.WriteLine(<span class="string">&quot;&amp;strC_APP_DT --- &quot;</span> | &amp;strC_APP_DT);</span><br><span class="line">         &amp;fileLog.WriteLine(<span class="string">&quot;&amp;strC_APPLI_RS --- &quot;</span> | &amp;strC_APPLI_RS);</span><br><span class="line">         &amp;fileLog.WriteLine(<span class="string">&quot;&amp;strEMPLID --- &quot;</span> | &amp;strEMPLID);</span><br><span class="line">         &amp;fileLog.WriteLine(<span class="string">&quot;&amp;NAME --- &quot;</span> | &amp;NAME);</span><br><span class="line">         &amp;fileLog.WriteLine(<span class="string">&quot;&amp;DEPTID --- &quot;</span> | &amp;DEPTID);</span><br><span class="line">         &amp;fileLog.WriteLine(<span class="string">&quot;&amp;DESCR --- &quot;</span> | &amp;DESCR);</span><br><span class="line">         &amp;fileLog.WriteLine(<span class="string">&quot;&amp;strEMPLID2 --- &quot;</span> | &amp;strEMPLID2);</span><br><span class="line">         &amp;fileLog.WriteLine(<span class="string">&quot;&amp;strDESCR254 --- &quot;</span> | &amp;strDESCR254);</span><br><span class="line">         </span><br><span class="line">        <span class="comment">/*校验必填项时否缺失*/</span></span><br><span class="line"><span class="function">If <span class="title">All</span><span class="params">(&amp;strC_APP_SEQ, &amp;strC_APP_DT, &amp;strC_APPLI_RS, &amp;strEMPLID, &amp;strEMPLID2)</span> Then</span></span><br><span class="line"><span class="function">           <span class="comment">/*审批单号校验*/</span></span></span><br><span class="line"><span class="function">            If <span class="title">Len</span><span class="params">(&amp;strC_APP_SEQ)</span> &gt; 10 Then</span></span><br><span class="line"><span class="function">               &amp;ERR </span>= &amp;ERR | <span class="string">&quot;  审批单号不正确,请检查数据正确性！      &quot;</span>;</span><br><span class="line">            End-If;</span><br><span class="line">            <span class="comment">/*申请日期校验*/</span></span><br><span class="line">            <span class="function">If <span class="title">Len</span><span class="params">(&amp;strC_APP_DT)</span> &gt; 10 Then</span></span><br><span class="line"><span class="function">               &amp;ERR </span>= &amp;ERR | <span class="string">&quot;  申请日期格式不正确,请检查数据正确性！      &quot;</span>;</span><br><span class="line">            End-If;</span><br><span class="line">            <span class="comment">/*人申请人编码*/</span></span><br><span class="line">            &amp;isExitFlag = <span class="string">&quot; &quot;</span>;</span><br><span class="line">            SQLExec(<span class="string">&quot;SELECT &#x27;X&#x27; from ps_C_PERS_SRCH_VW WHERE OPRID = &#x27;POSTDATA&#x27; AND EMPLID = :1 &quot;</span>, &amp;strEMPLID, &amp;isExitFlag);</span><br><span class="line">            If &amp;isExitFlag &lt;&gt; <span class="string">&quot;X&quot;</span> Then</span><br><span class="line">               &amp;ERR = &amp;ERR | <span class="string">&quot;  申请人编码不存在,请检查数据正确性！    &quot;</span>;</span><br><span class="line">            End-If;</span><br><span class="line">            <span class="comment">/*招聘组长编码*/</span></span><br><span class="line">            &amp;isExitFlag = <span class="string">&quot; &quot;</span>;</span><br><span class="line">            SQLExec(<span class="string">&quot;SELECT &#x27;X&#x27; from ps_C_PERS_SRCH_VW WHERE OPRID = &#x27;POSTDATA&#x27; AND EMPLID = :1 &quot;</span>, &amp;strEMPLID2, &amp;isExitFlag);</span><br><span class="line">            If &amp;isExitFlag &lt;&gt; <span class="string">&quot;X&quot;</span> Then</span><br><span class="line">               &amp;ERR = &amp;ERR | <span class="string">&quot;  招聘组长编码不存在,请检查数据正确性！    &quot;</span>;</span><br><span class="line">            End-If;</span><br><span class="line">            <span class="comment">/*申请原因说明校验*/</span></span><br><span class="line">            <span class="function">If <span class="title">Len</span><span class="params">(&amp;strDESCR254)</span> &gt; 254 Then</span></span><br><span class="line"><span class="function">               &amp;ERR </span>= &amp;ERR | <span class="string">&quot;  申请原因说明超长,请检查数据正确性！      &quot;</span>;</span><br><span class="line">            End-If;</span><br><span class="line">  <span class="comment">/*无错误信息，进入调用CI赋值处理*/</span></span><br><span class="line">            <span class="function">If <span class="title">None</span><span class="params">(&amp;ERR)</span> Then</span></span><br><span class="line"><span class="function">                <span class="comment">/*获取CI*/</span></span></span><br><span class="line"><span class="function">               &amp;oCEmplDemandComCi </span>= &amp;oSession.GetCompIntfc(CompIntfc.C_EMPL_DEMAND_COM_CI);</span><br><span class="line">               If &amp;oCEmplDemandComCi = Null Then</span><br><span class="line">                  %This.errorHandler(&amp;strC_APP_SEQ, &amp;strEMPLID);</span><br><span class="line">                  Return False;</span><br><span class="line">               End-If;</span><br><span class="line">               <span class="comment">/*设置CI交互模式*/</span></span><br><span class="line">               &amp;oCEmplDemandComCi.InteractiveMode = False;</span><br><span class="line">               &amp;oCEmplDemandComCi.GetHistoryItems = True;</span><br><span class="line">               &amp;oCEmplDemandComCi.EditHistoryItems = True;</span><br><span class="line">               </span><br><span class="line"></span><br><span class="line">               &amp;oCEmplDemandComCi.C_APP_SEQ = &amp;strC_APP_SEQ;</span><br><span class="line">               <span class="comment">/*根据key值创建CI对象*/</span></span><br><span class="line">               If Not &amp;oCEmplDemandComCi.Create() Then;</span><br><span class="line">   <span class="comment">/*创建失败的话，调用日志方法，传入申请单号和员工ID*/</span></span><br><span class="line">                  %This.errorHandler(&amp;strC_APP_SEQ, &amp;strEMPLID);</span><br><span class="line">                  Return False;</span><br><span class="line">               End-If;</span><br><span class="line">               </span><br><span class="line">               <span class="comment">/*对CI对象中的properties赋值*/</span></span><br><span class="line">               &amp;oCEmplDemandComCi.C_APP_SEQ = &amp;strC_APP_SEQ;</span><br><span class="line">               &amp;oCEmplDemandComCi.C_APPLI_RS = &amp;strC_APPLI_RS;</span><br><span class="line">               SQLExec(<span class="string">&quot;  SELECT TO_DATE(:1 ,&#x27;YYYY-MM-DD&#x27;) from DUAL &quot;</span>, &amp;strC_APP_DT, &amp;APP_DATE);</span><br><span class="line">               &amp;oCEmplDemandComCi.C_APP_DT = &amp;APP_DATE;</span><br><span class="line">               &amp;oCEmplDemandComCi.EMPLID = &amp;strEMPLID;</span><br><span class="line">               &amp;oCEmplDemandComCi.NAME = &amp;NAME;</span><br><span class="line">               &amp;oCEmplDemandComCi.DEPTID = &amp;DEPTID;</span><br><span class="line">               &amp;oCEmplDemandComCi.DESCR = &amp;DESCR;</span><br><span class="line">               &amp;oCEmplDemandComCi.EMPLID2 = &amp;strEMPLID2;</span><br><span class="line">               &amp;oCEmplDemandComCi.DESCR254 = &amp;strDESCR254;</span><br><span class="line">               rem  &amp;oCEmplDemandComCi.COUNT1 = &amp;strCOUNT1;</span><br><span class="line">               </span><br><span class="line">               <span class="comment">/*获取json 对象的数组*/</span></span><br><span class="line">               Local JsonArray &amp;jObApplyDataArray = &amp;ApplicantJsonObj.GetJsonArray(<span class="string">&quot;LINES&quot;</span>);</span><br><span class="line"></span><br><span class="line">               <span class="comment">/*循环对CI对象中的元素新增并且赋值*/</span></span><br><span class="line">               &amp;oCEmplDemandSCollection = &amp;oCEmplDemandComCi.C_EMPL_DEMAND_S;</span><br><span class="line">               Local integer &amp;i;</span><br><span class="line">               For &amp;i = <span class="number">1</span> To &amp;jObApplyDataArray.Length();</span><br><span class="line">                  Local JsonObject &amp;jObApplyDataInfo = &amp;jObApplyDataArray.GetJsonObject(&amp;i);</span><br><span class="line">  <span class="comment">/*获取第一个元素，这是由于该CI对象默认存在一个空的元素，造成的原因可能是因为对应的表中有默认值*/</span></span><br><span class="line">                  &amp;oCEmplDemandS = &amp;oCEmplDemandSCollection.Item(<span class="number">1</span>);</span><br><span class="line"><span class="comment">/*如果第一个元素的某个properties已经有值了，那么新插入一个元素*/</span></span><br><span class="line">                  <span class="function">If <span class="title">All</span><span class="params">(&amp;oCEmplDemandS.C_APPLI_LEVEL)</span> Then</span></span><br><span class="line"><span class="function">                     &amp;oCEmplDemandS </span>= &amp;oCEmplDemandSCollection.InsertItem(<span class="number">1</span>);</span><br><span class="line">                  End-If;</span><br><span class="line">                  <span class="comment">/*循环获取json对象中的数组对象进行赋值*/</span></span><br><span class="line">                  &amp;strC_RE_NO = &amp;jObApplyDataInfo.GetProperty(<span class="string">&quot;C_RE_NO&quot;</span>);</span><br><span class="line">                  &amp;strC_APPLI_LEVEL = &amp;jObApplyDataInfo.GetProperty(<span class="string">&quot;C_APPLI_LEVEL&quot;</span>);</span><br><span class="line">                  &amp;strPOSITION_NBR = &amp;jObApplyDataInfo.GetProperty(<span class="string">&quot;POSITION_NBR&quot;</span>);</span><br><span class="line">                  &amp;strC_POSN_GRDE_ID = &amp;jObApplyDataInfo.GetProperty(<span class="string">&quot;C_POSN_GRDE_ID&quot;</span>);</span><br><span class="line">                  &amp;strC_DEMAND_NUM = &amp;jObApplyDataInfo.GetProperty(<span class="string">&quot;C_DEMAND_NUM&quot;</span>);</span><br><span class="line">                  &amp;strEMPLID_ASSIGN_BY = &amp;jObApplyDataInfo.GetProperty(<span class="string">&quot;EMPLID_ASSIGN_BY&quot;</span>);</span><br><span class="line">                  &amp;strC_PRO_PRD_DT = &amp;jObApplyDataInfo.GetProperty(<span class="string">&quot;C_PRO_PRD_DT&quot;</span>);</span><br><span class="line">                  &amp;strDESCR_0 = &amp;jObApplyDataInfo.GetProperty(<span class="string">&quot;DESCR&quot;</span>);</span><br><span class="line">                  </span><br><span class="line">                  <span class="comment">/*json数据写入日志记录*/</span></span><br><span class="line">                  &amp;fileLog.WriteLine(<span class="string">&quot;********* begin  第 &quot;</span> | &amp;i | <span class="string">&quot; 个json对象 ******&quot;</span>);</span><br><span class="line">                  rem &amp;fileLog.WriteLine(<span class="string">&quot;ABSW_SEQ_NO --- &quot;</span> | &amp;strABSW_SEQ_NO);</span><br><span class="line">                  &amp;fileLog.WriteLine(<span class="string">&quot;C_RE_NO --- &quot;</span> | &amp;strC_RE_NO);</span><br><span class="line">                  &amp;fileLog.WriteLine(<span class="string">&quot;C_APPLI_LEVEL --- &quot;</span> | &amp;strC_APPLI_LEVEL);</span><br><span class="line">                  &amp;fileLog.WriteLine(<span class="string">&quot;POSITION_NBR --- &quot;</span> | &amp;strPOSITION_NBR);</span><br><span class="line">                  &amp;fileLog.WriteLine(<span class="string">&quot;C_POSN_GRDE_ID --- &quot;</span> | &amp;strC_POSN_GRDE_ID);</span><br><span class="line">                  &amp;fileLog.WriteLine(<span class="string">&quot;C_DEMAND_NUM --- &quot;</span> | &amp;strC_DEMAND_NUM);</span><br><span class="line">                  &amp;fileLog.WriteLine(<span class="string">&quot;EMPLID_ASSIGN_BY --- &quot;</span> | &amp;strEMPLID_ASSIGN_BY);</span><br><span class="line">                  &amp;fileLog.WriteLine(<span class="string">&quot;C_PRO_PRD_DT --- &quot;</span> | &amp;strC_PRO_PRD_DT);</span><br><span class="line">                  &amp;fileLog.WriteLine(<span class="string">&quot;DESCR --- &quot;</span> | &amp;strDESCR_0);</span><br><span class="line">                  </span><br><span class="line"><span class="comment">/*校验子表数据*/</span></span><br><span class="line">                  <span class="function">If <span class="title">All</span><span class="params">(&amp;strC_APPLI_LEVEL, &amp;strPOSITION_NBR, &amp;strC_PRO_PRD_DT, &amp;strC_POSN_GRDE_ID, &amp;strC_RE_NO)</span> Then</span></span><br><span class="line"><span class="function">                     </span></span><br><span class="line"><span class="function">                    <span class="comment">/*序号校验*/</span></span></span><br><span class="line"><span class="function">                     &lt;*   If <span class="title">Len</span><span class="params">(&amp;strABSW_SEQ_NO)</span> &gt; 2 Then</span></span><br><span class="line"><span class="function">                     &amp;ERR </span>= &amp;ERR | <span class="string">&quot;  序号超长,请检查数据正确性！      &quot;</span>;</span><br><span class="line">                  End-If; *&gt;</span><br><span class="line">                     <span class="comment">/*招聘编号校验*/</span></span><br><span class="line">                     <span class="function">If <span class="title">Len</span><span class="params">(&amp;strC_RE_NO)</span> &gt; 30 Then</span></span><br><span class="line"><span class="function">                        &amp;ERR </span>= &amp;ERR | <span class="string">&quot;  招聘编号超长,请检查数据正确性！      &quot;</span>;</span><br><span class="line">                     End-If;</span><br><span class="line">                     <span class="comment">/*紧急程度校验*/</span></span><br><span class="line">                     <span class="function">If <span class="title">Len</span><span class="params">(&amp;strC_APPLI_LEVEL)</span> &gt; 2 Then</span></span><br><span class="line"><span class="function">                        &amp;ERR </span>= &amp;ERR | <span class="string">&quot;  紧急程度超长,请检查数据正确性！      &quot;</span>;</span><br><span class="line">                     End-If;</span><br><span class="line">                     <span class="comment">/*岗位编号校验*/</span></span><br><span class="line">                     <span class="function">If <span class="title">Len</span><span class="params">(&amp;strPOSITION_NBR)</span> &gt; 8 Then</span></span><br><span class="line"><span class="function">                        &amp;ERR </span>= &amp;ERR | <span class="string">&quot;  岗位编号超长,请检查数据正确性！      &quot;</span>;</span><br><span class="line">                     End-If;</span><br><span class="line">                     <span class="comment">/*职级编码校验*/</span></span><br><span class="line">                     <span class="function">If <span class="title">Len</span><span class="params">(&amp;strC_POSN_GRDE_ID)</span> &gt; 5 Then</span></span><br><span class="line"><span class="function">                        &amp;ERR </span>= &amp;ERR | <span class="string">&quot;  职级编码超长,请检查数据正确性！      &quot;</span>;</span><br><span class="line">                     End-If;</span><br><span class="line">                     <span class="comment">/*需求人数校验*/</span></span><br><span class="line">                     <span class="function">If <span class="title">Len</span><span class="params">(&amp;strC_DEMAND_NUM)</span> &gt; 3 Then</span></span><br><span class="line"><span class="function">                        &amp;ERR </span>= &amp;ERR | <span class="string">&quot;  需求人数超长,请检查数据正确性！      &quot;</span>;</span><br><span class="line">                     End-If;</span><br><span class="line">                     <span class="comment">/*期望到岗日期校验*/</span></span><br><span class="line">                     <span class="function">If <span class="title">Len</span><span class="params">(&amp;strC_PRO_PRD_DT)</span> &gt; 10 Then</span></span><br><span class="line"><span class="function">                        &amp;ERR </span>= &amp;ERR | <span class="string">&quot;  期望到岗日期格式错误,请检查数据正确性！      &quot;</span>;</span><br><span class="line">                     End-If;</span><br><span class="line">                     <span class="comment">/*招聘组长校验*/</span></span><br><span class="line">                     <span class="function">If <span class="title">Len</span><span class="params">(&amp;strEMPLID_ASSIGN_BY)</span> &gt; 11 Then</span></span><br><span class="line"><span class="function">                        &amp;ERR </span>= &amp;ERR | <span class="string">&quot;  招聘组长超长,请检查数据正确性！      &quot;</span>;</span><br><span class="line">                     End-If;</span><br><span class="line">                     <span class="comment">/*其他补充要求校验*/</span></span><br><span class="line">                     <span class="function">If <span class="title">Len</span><span class="params">(&amp;strC_PRO_PRD_DT)</span> &gt; 30 Then</span></span><br><span class="line"><span class="function">                        &amp;ERR </span>= &amp;ERR | <span class="string">&quot;  其他补充要求超长,请检查数据正确性！      &quot;</span>;</span><br><span class="line">                     End-If;</span><br><span class="line"></span><br><span class="line">                      <span class="comment">/*对元素的properties赋值*/</span></span><br><span class="line">                     &amp;oCEmplDemandS.C_RE_NO = &amp;strC_RE_NO;;</span><br><span class="line">                     &amp;oCEmplDemandS.C_APPLI_LEVEL = &amp;strC_APPLI_LEVEL;;</span><br><span class="line">                     &amp;oCEmplDemandS.POSITION_NBR = &amp;strPOSITION_NBR;;</span><br><span class="line">                     &amp;oCEmplDemandS.C_POSN_GRDE_ID = &amp;strC_POSN_GRDE_ID;;</span><br><span class="line">                     &amp;oCEmplDemandS.C_DEMAND_NUM = &amp;strC_DEMAND_NUM;;</span><br><span class="line">                     &amp;oCEmplDemandS.EMPLID_ASSIGN_BY = &amp;strEMPLID_ASSIGN_BY;;</span><br><span class="line">                     SQLExec(<span class="string">&quot;  SELECT TO_DATE(:1 ,&#x27;YYYY-MM-DD&#x27;) from DUAL &quot;</span>, &amp;strC_PRO_PRD_DT, &amp;PRO_PRD_DATE);</span><br><span class="line">                     &amp;oCEmplDemandS.C_PRO_PRD_DT = &amp;PRO_PRD_DATE;</span><br><span class="line">                     &amp;oCEmplDemandS.DESCR_0 = &amp;strDESCR_0;</span><br><span class="line">                  Else</span><br><span class="line">                     %This.updateErrorLogTable(&amp;strC_APP_SEQ, &amp;strEMPLID, <span class="string">&quot;必填项为空，请检查数据正确性！&quot;</span>);</span><br><span class="line">                     Return False;</span><br><span class="line">                  End-If;</span><br><span class="line">                  &amp;fileLog.WriteLine(<span class="string">&quot;*********  End 第 &quot;</span> | &amp;i | <span class="string">&quot; 个json对象  ******&quot;</span>);</span><br><span class="line">               End-For;</span><br><span class="line">               &amp;fileLog.WriteLine(<span class="string">&quot;*********  End JOSNDATA  ******&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">/*如果无报错信息，则保存CI*/</span></span><br><span class="line">               <span class="function">If <span class="title">None</span><span class="params">(&amp;ERR)</span> Then</span></span><br><span class="line"><span class="function">                  If Not &amp;oCEmplDemandComCi.<span class="title">Save</span><span class="params">()</span> Then</span></span><br><span class="line"><span class="function">                     %This.<span class="title">errorHandler</span><span class="params">(&amp;strC_APP_SEQ, &amp;strEMPLID)</span></span>;</span><br><span class="line">                     Return False;</span><br><span class="line">                  Else</span><br><span class="line">                      <span class="comment">/*如果保存成功，则记录日志*/</span></span><br><span class="line">                     Local Record &amp;reApplyLog = CreateRecord(Record.C_APPLY_LOG);</span><br><span class="line">                     &amp;reApplyLog.C_OA_APPL_NUM.Value = &amp;strC_APP_SEQ;</span><br><span class="line">                     &amp;reApplyLog.C_APPLY_ID.Value = <span class="string">&quot;medresult&quot;</span>;</span><br><span class="line">                     <span class="comment">/*如果已经有了记录，则更新，否则就新增*/</span></span><br><span class="line">                     If Not &amp;reApplyLog.SelectByKey() Then</span><br><span class="line">                        &amp;reApplyLog.C_OA_APPL_NUM.Value = &amp;strC_APP_SEQ;</span><br><span class="line">                        &amp;reApplyLog.C_APPLY_ID.Value = <span class="string">&quot;medresult&quot;</span>;</span><br><span class="line">                        &amp;reApplyLog.EMPLID.Value = &amp;strEMPLID;</span><br><span class="line">                        &amp;reApplyLog.C_APPLY_DESCR.Value = <span class="string">&quot;用人需求数据写入&quot;</span>;</span><br><span class="line">                        &amp;reApplyLog.C_INTERFACE_STATUS.Value = <span class="string">&quot;S&quot;</span>;</span><br><span class="line">                        &amp;reApplyLog.DESCRLONG.Value = <span class="string">&quot;成功&quot;</span>;</span><br><span class="line">                        &amp;reApplyLog.LASTUPDDTTM.Value = %Datetime;</span><br><span class="line">                        &amp;reApplyLog.Insert();</span><br><span class="line">                     Else</span><br><span class="line">                        &amp;reApplyLog.EMPLID.Value = &amp;strEMPLID;</span><br><span class="line">                        &amp;reApplyLog.C_APPLY_DESCR.Value = <span class="string">&quot;用人需求数据写入&quot;</span>;</span><br><span class="line">                        &amp;reApplyLog.C_INTERFACE_STATUS.Value = <span class="string">&quot;S&quot;</span>;</span><br><span class="line">                        &amp;reApplyLog.DESCRLONG.Value = <span class="string">&quot;成功&quot;</span>;</span><br><span class="line">                        &amp;reApplyLog.LASTUPDDTTM.Value = %Datetime;</span><br><span class="line">                        &amp;reApplyLog.Update();</span><br><span class="line">                     End-If;</span><br><span class="line">                     Return True;</span><br><span class="line">                  End-If;</span><br><span class="line">               Else</span><br><span class="line">                   <span class="comment">/*保存失败的话，调用日志方法记录日志*/</span></span><br><span class="line">                  %This.updateErrorLogTable(&amp;strC_APP_SEQ, &amp;strEMPLID, &amp;ERR);</span><br><span class="line">                  Return False;</span><br><span class="line">               End-If;</span><br><span class="line">            Else</span><br><span class="line">                <span class="comment">/*未通过头表字段校验，调用日志方法记录日志*/</span></span><br><span class="line">               %This.updateErrorLogTable(&amp;strC_APP_SEQ, &amp;strEMPLID, &amp;ERR);</span><br><span class="line">               Return False;</span><br><span class="line">            End-If;</span><br><span class="line">         Else</span><br><span class="line">            %This.updateErrorLogTable(&amp;strC_APP_SEQ, &amp;strEMPLID, <span class="string">&quot;必填项为空，请检查数据正确性！&quot;</span>);</span><br><span class="line">            Return False;</span><br><span class="line">         End-If;</span><br><span class="line">      Else</span><br><span class="line">         %This.updateErrorLogTable(&amp;strC_APP_SEQ, &amp;strEMPLID, <span class="string">&quot;审批单号重复，请检查数据正确性！&quot;</span>);</span><br><span class="line">         Return False;</span><br><span class="line">      End-If;</span><br><span class="line">      &amp;fileLog.WriteLine(<span class="string">&quot;*********  End C_MED_RESULT  ******&quot;</span>);</span><br><span class="line">   <span class="keyword">catch</span> Exception &amp;ex</span><br><span class="line">      %This.updateErrorLogTable(&amp;strC_APP_SEQ, &amp;strEMPLID, &amp;ex.ToString());</span><br><span class="line">      Return False;</span><br><span class="line">   end-<span class="keyword">try</span>;</span><br><span class="line">   </span><br><span class="line">end-method;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*定义错误捕捉方法*/</span></span><br><span class="line">method errorHandler</span><br><span class="line">   /+ &amp;strC_APP_SEQ as String, +/</span><br><span class="line">   /+ &amp;strEMPLID as String +/</span><br><span class="line">   Local string &amp;sErrText;</span><br><span class="line">   Local ApiObject &amp;oPSMessageCollection, &amp;oPSMessage;</span><br><span class="line">   Local number &amp;i;</span><br><span class="line">   Local string &amp;sErrMsgSetNum, &amp;sErrMsgNum, &amp;sErrMsgText, &amp;sErrType;</span><br><span class="line">   </span><br><span class="line">   &amp;oPSMessageCollection = &amp;oSession.PSMessages;</span><br><span class="line">   </span><br><span class="line">   For &amp;i = <span class="number">1</span> To &amp;oPSMessageCollection.Count</span><br><span class="line">      &amp;oPSMessage = &amp;oPSMessageCollection.Item(&amp;i);</span><br><span class="line">      &amp;sErrMsgSetNum = &amp;oPSMessage.MessageSetNumber;</span><br><span class="line">      &amp;sErrMsgNum = &amp;oPSMessage.MessageNumber;</span><br><span class="line">      &amp;sErrMsgText = &amp;oPSMessage.Text;</span><br><span class="line">      </span><br><span class="line">      If &amp;oPSMessage.Type = <span class="number">1</span> Then</span><br><span class="line">         &amp;sErrMsgText = &amp;oPSMessage.Text;</span><br><span class="line">         <span class="comment">/* find name of field in error */</span></span><br><span class="line">         Local string &amp;SOURCE = &amp;oPSMessage.Source;</span><br><span class="line">         Local number &amp;LEN = Len(&amp;SOURCE);</span><br><span class="line">         <span class="comment">/* find last dot before field */</span></span><br><span class="line">         Local <span class="keyword">boolean</span> &amp;FIND = False;</span><br><span class="line">         Local number &amp;START = Find(<span class="string">&quot;.&quot;</span>, &amp;SOURCE);</span><br><span class="line">         <span class="function">While <span class="title">Not</span> <span class="params">(&amp;FIND)</span></span></span><br><span class="line"><span class="function">            Local number &amp;NSTART </span>= Find(<span class="string">&quot;.&quot;</span>, &amp;SOURCE, &amp;START + <span class="number">1</span>);</span><br><span class="line">            If &amp;NSTART = <span class="number">0</span> Then</span><br><span class="line">               &amp;FIND = True;</span><br><span class="line">            Else</span><br><span class="line">               &amp;START = &amp;NSTART;</span><br><span class="line">            End-If;</span><br><span class="line">         End-While;</span><br><span class="line">         </span><br><span class="line">         Local number &amp;FLEN = &amp;LEN - &amp;START;</span><br><span class="line">         Local string &amp;FIELD = Substring(&amp;SOURCE, &amp;START + <span class="number">1</span>, &amp;FLEN);</span><br><span class="line">      End-If;</span><br><span class="line">      </span><br><span class="line">      &amp;sErrText = &amp;sErrText | &amp;sErrMsgText | <span class="string">&quot; &quot;</span>;</span><br><span class="line">   End-For;</span><br><span class="line">   </span><br><span class="line">   %This.updateErrorLogTable(&amp;strC_APP_SEQ, &amp;strEMPLID, &amp;sErrText);</span><br><span class="line">   </span><br><span class="line">   &amp;oPSMessageCollection.DeleteAll();</span><br><span class="line">end-method;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*定义日志表更新方法*/</span></span><br><span class="line">method updateErrorLogTable</span><br><span class="line">   /+ &amp;strC_APP_SEQ as String, +/</span><br><span class="line">   /+ &amp;strEMPLID as String, +/</span><br><span class="line">   /+ &amp;_errMsgText as String +/</span><br><span class="line">   Local Record &amp;reApplyLog = CreateRecord(Record.C_APPLY_LOG);</span><br><span class="line">   &amp;reApplyLog.C_OA_APPL_NUM.Value = &amp;strC_APP_SEQ;</span><br><span class="line">   &amp;reApplyLog.C_APPLY_ID.Value = <span class="string">&quot;medresult&quot;</span>;</span><br><span class="line">   </span><br><span class="line">   If Not &amp;reApplyLog.SelectByKey() Then</span><br><span class="line">      &amp;reApplyLog.C_OA_APPL_NUM.Value = &amp;strC_APP_SEQ;</span><br><span class="line">      &amp;reApplyLog.C_APPLY_ID.Value = <span class="string">&quot;medresult&quot;</span>;</span><br><span class="line">      &amp;reApplyLog.EMPLID.Value = &amp;strEMPLID;</span><br><span class="line">      &amp;reApplyLog.C_APPLY_DESCR.Value = <span class="string">&quot;用人需求数据写入&quot;</span>;</span><br><span class="line">      &amp;reApplyLog.C_INTERFACE_STATUS.Value = <span class="string">&quot;F&quot;</span>;</span><br><span class="line">      &amp;reApplyLog.DESCRLONG.Value = &amp;_errMsgText;</span><br><span class="line">      &amp;reApplyLog.LASTUPDDTTM.Value = %Datetime;</span><br><span class="line">      &amp;reApplyLog.Insert();</span><br><span class="line">   Else</span><br><span class="line">      &amp;reApplyLog.EMPLID.Value = &amp;strEMPLID;</span><br><span class="line">      &amp;reApplyLog.C_APPLY_DESCR.Value = <span class="string">&quot;用人需求数据写入&quot;</span>;</span><br><span class="line">      &amp;reApplyLog.C_INTERFACE_STATUS.Value = <span class="string">&quot;F&quot;</span>;</span><br><span class="line">      &amp;reApplyLog.DESCRLONG.Value = &amp;_errMsgText;</span><br><span class="line">      &amp;reApplyLog.LASTUPDDTTM.Value = %Datetime;</span><br><span class="line">      &amp;reApplyLog.Update();</span><br><span class="line">   End-If;</span><br><span class="line">   CommitWork();</span><br><span class="line">end-method;</span><br></pre></td></tr></table></figure><h3 id="Postman测试"><a href="#Postman测试" class="headerlink" title="Postman测试"></a>Postman测试</h3><img src=https://gitee.com/gek7777/cdn.io/raw/master/image/1599036130018.png ><h4 id="步骤："><a href="#步骤：" class="headerlink" title="步骤："></a>步骤：</h4><ol><li>新增一个请求，选择POST类型，将之前PS服务操作的REST地址复制填入；</li><li>body——&gt;raw——&gt;json；</li><li>填入请求json内容，点击Send；</li><li>查看response_body内容；</li></ol>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Interface </tag>
            
            <tag> PeopleSoft </tag>
            
            <tag> PeopleCode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PeopleSoft-调用外部接口</title>
      <link href="2020/09/02/PeopleSoft-%E8%B0%83%E7%94%A8%E5%A4%96%E9%83%A8%E6%8E%A5%E5%8F%A3/"/>
      <url>2020/09/02/PeopleSoft-%E8%B0%83%E7%94%A8%E5%A4%96%E9%83%A8%E6%8E%A5%E5%8F%A3/</url>
      
        <content type="html"><![CDATA[<p>通过对接外部提供的接口文档，将PS系统表中的数据处理完成后，拼接为json字符串推送给对应系统，代码如下：</p><a id="more"></a><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br></pre></td><td class="code"><pre><span class="line">   /+ &amp;recC_EMPL_PRD_REQ as Record +/</span><br><span class="line">   /+ Returns String +/</span><br><span class="line">   </span><br><span class="line">  <span class="comment">/*</span></span><br><span class="line"><span class="comment">  分析JSON数据结构，创建需要的JSON对象或者数组；</span></span><br><span class="line"><span class="comment">  根据传入的表获取信息，拼接JSON串;</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">   Local string &amp;reqBody, &amp;rspBody;</span><br><span class="line">   <span class="comment">/* 创建一个请求json对象*/</span></span><br><span class="line">   Local JsonObject &amp;reqObj = CreateJsonObject();</span><br><span class="line">   <span class="comment">/*创建一个请求json数组的子对象*/</span></span><br><span class="line">   Local JsonObject &amp;reqObjSub = CreateJsonObject();</span><br><span class="line">   <span class="comment">/*创建一个请求json数组*/</span></span><br><span class="line">   Local JsonArray &amp;jArr = CreateJsonArray();</span><br><span class="line">   <span class="comment">/*json对象插入属性*/</span></span><br><span class="line">   &amp;reqObj.AddProperty(<span class="string">&quot;message&quot;</span>, &amp;reqObj1);</span><br><span class="line">   &amp;reqObj1.AddProperty(<span class="string">&quot;method&quot;</span>, <span class="string">&quot;createRequest&quot;</span>);</span><br><span class="line">   &amp;reqObj1.AddProperty(<span class="string">&quot;workflowid&quot;</span>, <span class="string">&quot;750&quot;</span>);</span><br><span class="line">   &amp;reqObj1.AddProperty(<span class="string">&quot;requestname&quot;</span>, <span class="string">&quot;转正申请&quot;</span>);</span><br><span class="line">   &amp;reqObj1.AddProperty(<span class="string">&quot;requestlevel&quot;</span>, <span class="string">&quot;0&quot;</span>);</span><br><span class="line">   &amp;reqObj1.AddProperty(<span class="string">&quot;creator&quot;</span>, &amp;recC_EMPL_PRD_REQ.EMPLID.Value);</span><br><span class="line">   &amp;reqObj1.AddProperty(<span class="string">&quot;isnextflow&quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">   <span class="comment">/*json对象插入数组*/</span></span><br><span class="line">   &amp;reqObj1.AddJsonArray(<span class="string">&quot;main&quot;</span>, &amp;jArr);</span><br><span class="line">   <span class="comment">/*创建请求json数组的子对象*/</span></span><br><span class="line">   &amp;reqObjSub = CreateJsonObject();</span><br><span class="line">  <span class="comment">/*将子对象插入json数组中*/</span></span><br><span class="line">   &amp;jArr.AddJsonObjectElement(<span class="string">&quot;&quot;</span>, &amp;reqObjSub);</span><br><span class="line">   <span class="comment">/*设置json数组子对象的属性*/</span></span><br><span class="line">   &amp;reqObjSub.AddProperty(<span class="string">&quot;fieldname&quot;</span>, <span class="string">&quot;bh&quot;</span>);</span><br><span class="line">   &amp;reqObjSub.AddProperty(<span class="string">&quot;fieldvalue&quot;</span>, &amp;recC_EMPL_PRD_REQ.C_APP_SEQ.Value);</span><br><span class="line">   </span><br><span class="line">   &amp;reqObjSub = CreateJsonObject();</span><br><span class="line">   &amp;jArr.AddJsonObjectElement(<span class="string">&quot;&quot;</span>, &amp;reqObjSub);</span><br><span class="line">   &amp;reqObjSub.AddProperty(<span class="string">&quot;fieldname&quot;</span>, <span class="string">&quot;sqrq&quot;</span>);</span><br><span class="line">   &amp;reqObjSub.AddProperty(<span class="string">&quot;fieldvalue&quot;</span>, &amp;recC_EMPL_PRD_REQ.C_APP_DT.Value);</span><br><span class="line">   </span><br><span class="line">   &amp;reqObjSub = CreateJsonObject();</span><br><span class="line">   &amp;jArr.AddJsonObjectElement(<span class="string">&quot;&quot;</span>, &amp;reqObjSub);</span><br><span class="line">   &amp;reqObjSub.AddProperty(<span class="string">&quot;fieldname&quot;</span>, <span class="string">&quot;sqr1&quot;</span>);</span><br><span class="line">   &amp;reqObjSub.AddProperty(<span class="string">&quot;fieldvalue&quot;</span>, &amp;recC_EMPL_PRD_REQ.EMPLID.Value);</span><br><span class="line">   </span><br><span class="line">   &amp;reqObjSub = CreateJsonObject();</span><br><span class="line">   &amp;jArr.AddJsonObjectElement(<span class="string">&quot;&quot;</span>, &amp;reqObjSub);</span><br><span class="line">   &amp;reqObjSub.AddProperty(<span class="string">&quot;fieldname&quot;</span>, <span class="string">&quot;sqrbm1&quot;</span>);</span><br><span class="line">   &amp;reqObjSub.AddProperty(<span class="string">&quot;fieldvalue&quot;</span>, &amp;recC_EMPL_PRD_REQ.DEPTID.Value);</span><br><span class="line">   </span><br><span class="line">   &amp;reqObjSub = CreateJsonObject();</span><br><span class="line">   &amp;jArr.AddJsonObjectElement(<span class="string">&quot;&quot;</span>, &amp;reqObjSub);</span><br><span class="line">   &amp;reqObjSub.AddProperty(<span class="string">&quot;fieldname&quot;</span>, <span class="string">&quot;xm1&quot;</span>);</span><br><span class="line">   &amp;reqObjSub.AddProperty(<span class="string">&quot;fieldvalue&quot;</span>, &amp;recC_EMPL_PRD_REQ.EMPLID2.Value);</span><br><span class="line">   </span><br><span class="line">   &amp;reqObjSub = CreateJsonObject();</span><br><span class="line">   &amp;jArr.AddJsonObjectElement(<span class="string">&quot;&quot;</span>, &amp;reqObjSub);</span><br><span class="line">   &amp;reqObjSub.AddProperty(<span class="string">&quot;fieldname&quot;</span>, <span class="string">&quot;zzrq&quot;</span>);</span><br><span class="line">   &amp;reqObjSub.AddProperty(<span class="string">&quot;fieldvalue&quot;</span>, &amp;recC_EMPL_PRD_REQ.C_PRO_PRD_DT.Value);</span><br><span class="line">   </span><br><span class="line">   &amp;reqObjSub = CreateJsonObject();</span><br><span class="line">   &amp;jArr.AddJsonObjectElement(<span class="string">&quot;&quot;</span>, &amp;reqObjSub);</span><br><span class="line">   &amp;reqObjSub.AddProperty(<span class="string">&quot;fieldname&quot;</span>, <span class="string">&quot;bm1&quot;</span>);</span><br><span class="line">   &amp;reqObjSub.AddProperty(<span class="string">&quot;fieldvalue&quot;</span>, &amp;recC_EMPL_PRD_REQ.DEPTID1.Value);</span><br><span class="line">   </span><br><span class="line">   &amp;reqObjSub = CreateJsonObject();</span><br><span class="line">   &amp;jArr.AddJsonObjectElement(<span class="string">&quot;&quot;</span>, &amp;reqObjSub);</span><br><span class="line">   &amp;reqObjSub.AddProperty(<span class="string">&quot;fieldname&quot;</span>, <span class="string">&quot;gw1&quot;</span>);</span><br><span class="line">   &amp;reqObjSub.AddProperty(<span class="string">&quot;fieldvalue&quot;</span>, &amp;recC_EMPL_PRD_REQ.POSITION_NBR.Value);</span><br><span class="line">   </span><br><span class="line">   Local string &amp;strC_POSN_GRDE_DESCR;</span><br><span class="line">   SQLExec(<span class="string">&quot;SELECT G.DESCR from PS_C_POSN_GRDE_VW G WHERE G.OPRID = :1  AND G.SETID = (SELECT P.SETID from ps_C_EMPL_PRD_REQ P WHERE P.C_SECTION_TYPE = &#x27;1000000003&#x27; AND P.C_APP_SEQ = :2 ) AND G.C_POSN_GRDE_ID = :3  AND G.EFFDT = (SELECT MAX(G1.EFFDT) from PS_C_POSN_GRDE_VW G1 WHERE G1.OPRID = G.OPRID AND G1.SETID = G.SETID AND G1.C_POSN_GRDE_ID = G.C_POSN_GRDE_ID AND G.EFFDT &lt;= SYSDATE )&quot;</span>, %OperatorId, &amp;recC_EMPL_PRD_REQ.C_APP_SEQ.Value, &amp;recC_EMPL_PRD_REQ.C_POSN_GRDE_ID.Value, &amp;strC_POSN_GRDE_DESCR);</span><br><span class="line">   &amp;reqObjSub = CreateJsonObject();</span><br><span class="line">   &amp;jArr.AddJsonObjectElement(<span class="string">&quot;&quot;</span>, &amp;reqObjSub);</span><br><span class="line">   &amp;reqObjSub.AddProperty(<span class="string">&quot;fieldname&quot;</span>, <span class="string">&quot;ygzj&quot;</span>);</span><br><span class="line">   &amp;reqObjSub.AddProperty(<span class="string">&quot;fieldvalue&quot;</span>, &amp;strC_POSN_GRDE_DESCR);</span><br><span class="line">   </span><br><span class="line">   Local string &amp;strLOCATION_DESCR4;</span><br><span class="line">   SQLExec(<span class="string">&quot;SELECT L.DESCR from PS_LOCATION_TBL L WHERE L.SETID = (SELECT P.SETID from ps_C_EMPL_PRD_REQ P WHERE P.C_SECTION_TYPE = &#x27;1000000003&#x27; AND P.C_APP_SEQ = :1 ) AND L.LOCATION = :2  AND L.EFF_STATUS = &#x27;A&#x27; AND L.EFFDT = (SELECT MAX(L1.EFFDT) from PS_LOCATION_TBL L1 WHERE L1.SETID = L.SETID AND L1.LOCATION = L.LOCATION AND L1.EFFDT &lt;= SYSDATE) &quot;</span>, &amp;recC_EMPL_PRD_REQ.C_APP_SEQ.Value, &amp;recC_EMPL_PRD_REQ.LOCATION.Value, &amp;strLOCATION_DESCR4);</span><br><span class="line">   &amp;reqObjSub = CreateJsonObject();</span><br><span class="line">   &amp;jArr.AddJsonObjectElement(<span class="string">&quot;&quot;</span>, &amp;reqObjSub);</span><br><span class="line">   &amp;reqObjSub.AddProperty(<span class="string">&quot;fieldname&quot;</span>, <span class="string">&quot;gzdd&quot;</span>);</span><br><span class="line">   &amp;reqObjSub.AddProperty(<span class="string">&quot;fieldvalue&quot;</span>, &amp;strLOCATION_DESCR4);</span><br><span class="line">   </span><br><span class="line">   &amp;reqObjSub = CreateJsonObject();</span><br><span class="line">   &amp;jArr.AddJsonObjectElement(<span class="string">&quot;&quot;</span>, &amp;reqObjSub);</span><br><span class="line">   &amp;reqObjSub.AddProperty(<span class="string">&quot;fieldname&quot;</span>, <span class="string">&quot;zzrq&quot;</span>);</span><br><span class="line">   &amp;reqObjSub.AddProperty(<span class="string">&quot;fieldvalue&quot;</span>, &amp;recC_EMPL_PRD_REQ.C_PRD_DT.Value);</span><br><span class="line"></span><br><span class="line">   &amp;reqObjSub = CreateJsonObject();</span><br><span class="line">   &amp;jArr.AddJsonObjectElement(<span class="string">&quot;&quot;</span>, &amp;reqObjSub);</span><br><span class="line">   &amp;reqObjSub.AddProperty(<span class="string">&quot;fieldname&quot;</span>, <span class="string">&quot;zzyy&quot;</span>);</span><br><span class="line">   &amp;reqObjSub.AddProperty(<span class="string">&quot;fieldvalue&quot;</span>, &amp;recC_EMPL_PRD_REQ.ACT_REASON_SUB.Value);</span><br><span class="line">  </span><br><span class="line">   Local string &amp;strACT_REASON_SUB_DESCR;</span><br><span class="line">   SQLExec(<span class="string">&quot;SELECT RB.descr1 from PS_C_ACT_RES_SUB RB WHERE RB.action_reason = &#x27;PPD&#x27; AND RB.act_reason_sub = :1 &quot;</span>, &amp;recC_EMPL_PRD_REQ.ACT_REASON_SUB.Value, &amp;strACT_REASON_SUB_DESCR);</span><br><span class="line">   &amp;reqObjSub = CreateJsonObject();</span><br><span class="line">   &amp;jArr.AddJsonObjectElement(<span class="string">&quot;&quot;</span>, &amp;reqObjSub);</span><br><span class="line">   &amp;reqObjSub.AddProperty(<span class="string">&quot;fieldname&quot;</span>, <span class="string">&quot;zzyyms&quot;</span>);</span><br><span class="line">   &amp;reqObjSub.AddProperty(<span class="string">&quot;fieldvalue&quot;</span>, &amp;strACT_REASON_SUB_DESCR);</span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">   &amp;reqObjSub = CreateJsonObject();</span><br><span class="line">   &amp;jArr.AddJsonObjectElement(<span class="string">&quot;&quot;</span>, &amp;reqObjSub);</span><br><span class="line">   &amp;reqObjSub.AddProperty(<span class="string">&quot;fieldname&quot;</span>, <span class="string">&quot;bcsm&quot;</span>);</span><br><span class="line">   &amp;reqObjSub.AddProperty(<span class="string">&quot;fieldvalue&quot;</span>, &amp;recC_EMPL_PRD_REQ.DESCR254.Value);</span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">   rem &amp;reqBody = &amp;reqObj.ToString();</span><br><span class="line">   <span class="comment">/* 接口地址; */</span></span><br><span class="line">   Local string &amp;sURL = <span class="string">&quot;http://oa.akucun.com/WorkflowCustomServiceServlet&quot;</span>;</span><br><span class="line">   Local string &amp;jsonBody;</span><br><span class="line">   <span class="comment">/*将json对象转为字符串*/</span></span><br><span class="line">   &amp;jsonBody = &amp;reqObj.ToString();</span><br><span class="line">   <span class="function">rem <span class="title">MessageBox</span><span class="params">(<span class="number">0</span>, <span class="string">&quot;&quot;</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="string">&quot;&amp;jsonBody==&quot;</span> | &amp;jsonBody)</span></span>;</span><br><span class="line">   <span class="function">rem <span class="title">WinMessage</span><span class="params">(<span class="string">&quot;&amp;jsonBody==&quot;</span> | &amp;jsonBody)</span></span>;</span><br><span class="line">   <span class="comment">/*创建httpclient对象*/</span></span><br><span class="line">   Local JavaObject &amp;jHttp = CreateJavaObject(<span class="string">&quot;org.apache.commons.httpclient.HttpClient&quot;</span>);</span><br><span class="line">   rem &amp;jHttp.getHttpConnectionManager().getParams().setConnectionTimeout(<span class="number">20000</span>);</span><br><span class="line">    <span class="comment">/*创建postMethod信息对象，包含一些必须的参数，例如：字符集等；*/</span></span><br><span class="line">   Local JavaObject &amp;jMethod = CreateJavaObject(<span class="string">&quot;org.apache.commons.httpclient.methods.PostMethod&quot;</span>, &amp;sURL);</span><br><span class="line">    <span class="comment">/*设置postMethod信息对象的setFollowRedirects参数*/</span></span><br><span class="line">   &amp;jMethod.setFollowRedirects( False);</span><br><span class="line">   <span class="comment">/*设置postMethod信息对象的setRequestHeader参数*/</span></span><br><span class="line">   &amp;jMethod.setRequestHeader(<span class="string">&quot;Content-Type&quot;</span>, <span class="string">&quot;application/json;charset=UTF-8&quot;</span>);</span><br><span class="line">   </span><br><span class="line">   <span class="comment">/* get some abritrary JSON from HTML Area in this case because it is easy */</span></span><br><span class="line">   <span class="comment">/* JSON in PeopleTools is painful */</span></span><br><span class="line">   Local number &amp;i;</span><br><span class="line">   <span class="comment">/*</span></span><br><span class="line"><span class="comment">   For &amp;i = 1 To &amp;headername.Len</span></span><br><span class="line"><span class="comment">      &amp;jMethod.setRequestHeader(&amp;headername [&amp;i], &amp;headevalue [&amp;i]);</span></span><br><span class="line"><span class="comment">   End-For;</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">   <span class="comment">/*设置postMethod对象的setRequestBody参数,把拼接好的json字符串传入*/</span></span><br><span class="line">   &amp;jMethod.setRequestBody(&amp;jsonBody);</span><br><span class="line">  <span class="comment">/*httpclient对象调用执行方法，传入配置好的postMethod对象*/</span></span><br><span class="line">   &amp;jHttp.executeMethod(&amp;jMethod);</span><br><span class="line"><span class="comment">/*******************************  begin 解析回传的JSON  ****************************************/</span></span><br><span class="line"><span class="comment">/*解析Json*/</span></span><br><span class="line">Local JsonParser &amp;JsonParser = CreateJsonParser();</span><br><span class="line">Local <span class="keyword">boolean</span> &amp;JsonParserStatus = &amp;JsonParser.Parse(&amp;responseBody);</span><br><span class="line">If &amp;JsonParserStatus = False Then</span><br><span class="line">   <span class="keyword">throw</span> CreateException(<span class="number">10003</span>, - <span class="number">1</span>, <span class="string">&quot;Json解析错误&quot;</span>);</span><br><span class="line">End-If;</span><br><span class="line"><span class="comment">/*取请求报文参数*/</span></span><br><span class="line">Local JsonObject &amp;jObj = &amp;JsonParser.GetRootObject();</span><br><span class="line">Local string &amp;strCode = &amp;jObj.GetProperty(<span class="string">&quot;code&quot;</span>);</span><br><span class="line">rem Local string &amp;strMsg = &amp;jObj.GetProperty(<span class="string">&quot;msg&quot;</span>); </span><br><span class="line">If &amp;strCode &lt;&gt; <span class="string">&quot;0&quot;</span> Then</span><br><span class="line">   C_EMPL_TRA_REQ.C_APPLI_RS.Value = <span class="number">5</span>;</span><br><span class="line">End-If;</span><br><span class="line">If &amp;responseStatus = <span class="number">0</span> Then</span><br><span class="line">   MessageBox(<span class="number">0</span>, <span class="string">&quot;&quot;</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="string">&quot;提交成功!&quot;</span>);</span><br><span class="line">Else</span><br><span class="line">   MessageBox(<span class="number">0</span>, <span class="string">&quot;&quot;</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="string">&quot;提交失败!原因:&quot;</span> | &amp;strMsg);</span><br><span class="line">End-If;</span><br><span class="line"><span class="comment">/*******************************  end 解析回传的JSON  ****************************************/</span></span><br><span class="line">   rem 获取返回结果;</span><br><span class="line">   Local string &amp;responseBody = &amp;jMethod.getResponseBodyAsString();</span><br><span class="line">   Local string &amp;responseStatus = &amp;jMethod.getStatusLine().getStatusCode();</span><br><span class="line">   <span class="function">rem <span class="title">MessageBox</span><span class="params">(<span class="number">0</span>, <span class="string">&quot;&quot;</span>, <span class="number">0</span>, <span class="number">0</span>, &amp;responseBody | <span class="string">&quot;==&quot;</span> | &amp;responseStatus)</span></span>;</span><br><span class="line">   rem &amp;responseBody = CreateJavaObject(<span class="string">&quot;java.lang.String&quot;</span>, CreateJavaObject(<span class="string">&quot;java.lang.String&quot;</span>, &amp;responseBody).getBytes(<span class="string">&quot;ISO8859-1&quot;</span>), <span class="string">&quot;UTF-8&quot;</span>).toString();</span><br><span class="line">   &amp;jMethod.releaseConnection();</span><br><span class="line">   rem 如果网络状态为<span class="number">200</span>，并且返回的接口编码为：<span class="number">0</span>，表示接口成功接收到推送的数据；否则，表示推送失败，需要把员工转正申请单中的数据删除;</span><br><span class="line">   Local string &amp;strReturn = <span class="string">&quot;&quot;</span>;</span><br><span class="line">   If &amp;responseStatus = <span class="string">&quot;200&quot;</span> And</span><br><span class="line">         (Substitute(&amp;responseBody, <span class="string">&quot;&quot;</span><span class="string">&quot;code&quot;</span><span class="string">&quot;:&quot;</span><span class="string">&quot;0&quot;</span><span class="string">&quot;&quot;</span>, <span class="string">&quot;&quot;</span>) &lt;&gt; &amp;responseBody) Then</span><br><span class="line">      &amp;strReturn = <span class="string">&quot;&quot;</span>;</span><br><span class="line">   Else</span><br><span class="line">      SQLExec(<span class="string">&quot; DELETE FROM ps_C_EMPL_PRD_REQ p WHERE p.c_app_seq = :1 and  p.C_SECTION_TYPE = &#x27;1000000003&#x27; &quot;</span>, &amp;recC_EMPL_PRD_REQ.C_APP_SEQ.Value);</span><br><span class="line">      SQLExec(<span class="string">&quot; COMMIT &quot;</span>);</span><br><span class="line">      &amp;strReturn = <span class="string">&quot;接口失败：&quot;</span> | &amp;responseBody;</span><br><span class="line">   End-If;</span><br><span class="line">   <span class="function">rem <span class="title">MessageBox</span><span class="params">(<span class="number">0</span>, <span class="string">&quot;&quot;</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="string">&quot;OA接口的结果&amp;strReturn：&quot;</span> | &amp;strReturn)</span></span>;</span><br><span class="line">   Return &amp;strReturn;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Interface </tag>
            
            <tag> PeopleSoft </tag>
            
            <tag> PeopleCode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PeopleSoft-差异分析报表代码</title>
      <link href="2020/08/19/PeopleSoft-%E5%B7%AE%E5%BC%82%E5%88%86%E6%9E%90%E6%8A%A5%E8%A1%A8%E4%BB%A3%E7%A0%81/"/>
      <url>2020/08/19/PeopleSoft-%E5%B7%AE%E5%BC%82%E5%88%86%E6%9E%90%E6%8A%A5%E8%A1%A8%E4%BB%A3%E7%A0%81/</url>
      
        <content type="html"><![CDATA[<p>以下代码为差异分析报表AE报表，设计思路：将表中的每一条数据先插入一维数组中，然后将一维数组放入二维数组，再对比二维数组的相邻两条；</p><a id="more"></a><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**================================================</span></span><br><span class="line"><span class="comment">任务:C_GP_RPT_0010</span></span><br><span class="line"><span class="comment">描述：差异分析表打上标记，然后分为两个部分</span></span><br><span class="line"><span class="comment">设计思路：将表中的每一条数据先插入一维数组中，然后将一维数组放入二维数组，再对比二维数组的相邻两条；</span></span><br><span class="line"><span class="comment">--------------------------------------------------------</span></span><br><span class="line"><span class="comment">作者：            操作时间：                操作：                     </span></span><br><span class="line"><span class="comment">SIE_ZL2020-07-03                  创建</span></span><br><span class="line"><span class="comment">=================================================*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/* 导入公共函数包 */</span></span><br><span class="line"><span class="keyword">import</span> C_HRS_FUNC:*;</span><br><span class="line"></span><br><span class="line">REM <span class="keyword">import</span> C_COMMON_FUNC:UTILITY:*;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 声明变量 */</span></span><br><span class="line">Local array of array of any &amp;arrRptPar; <span class="comment">/*定义报表参数列表*/</span></span><br><span class="line">Local array of any &amp;arrRptHead; <span class="comment">/*定义报表标题*/</span></span><br><span class="line"></span><br><span class="line">Local number &amp;seqNo; <span class="comment">/*序号*/</span></span><br><span class="line">Local string &amp;gpPayGroup;</span><br><span class="line">Local string &amp;calPrdId;</span><br><span class="line">Local string &amp;calPrdId1;</span><br><span class="line"></span><br><span class="line">rem Local string &amp;orderId;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 变量初始化 */</span></span><br><span class="line">&amp;arrRptPar = CreateArrayRept(CreateArrayAny(), <span class="number">0</span>).Clone();</span><br><span class="line">&amp;arrRptHead = CreateArrayAny();</span><br><span class="line">&amp;arrData = CreateArrayAny();</span><br><span class="line"></span><br><span class="line">&amp;oReport = create C_HRS_FUNC:REPORT();</span><br><span class="line">REM &amp;oUtility = create C_HRS_FUNC:UTILITY();</span><br><span class="line">REM &amp;oUtility2 = create C_COMMON_FUNC:UTILITY();</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 取得查询页面输入的查询参数 */</span></span><br><span class="line">&amp;seqNo = <span class="number">1</span>; <span class="comment">/*序号*/</span></span><br><span class="line">&amp;gpPayGroup = C_RPT_0010_AET.GP_PAYGROUP; <span class="comment">/*薪资组*/</span></span><br><span class="line">&amp;calPrdId = C_RPT_0010_AET.CAL_PRD_ID; <span class="comment">/*开始月份*/</span></span><br><span class="line">&amp;calPrdId1 = C_RPT_0010_AET.CAL_PRD_ID1; <span class="comment">/*结束月份*/</span></span><br><span class="line">Warning (&amp;calPrdId | <span class="string">&quot;---&quot;</span> | &amp;calPrdId1);</span><br><span class="line"></span><br><span class="line"><span class="comment">/*定义输出文件*/</span></span><br><span class="line">&amp;strTmplateId = <span class="string">&quot;差异分析表&quot;</span>;</span><br><span class="line">Local File &amp;rptFile = GetTempFile(%FilePath | &amp;strTmplateId | <span class="string">&quot;_&quot;</span> | %Date | <span class="string">&quot;.xls&quot;</span>, <span class="string">&quot;w&quot;</span>, <span class="string">&quot;u&quot;</span>, %FilePath_Absolute);</span><br><span class="line"><span class="comment">/*打印log*/</span></span><br><span class="line">Local File &amp;log = GetTempFile(%FilePath | <span class="string">&quot;log&quot;</span> | %Date | <span class="string">&quot;.txt&quot;</span>, <span class="string">&quot;w&quot;</span>, <span class="string">&quot;u&quot;</span>, %FilePath_Absolute);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">================================================================</span></span><br><span class="line"><span class="comment">生成报表头信息</span></span><br><span class="line"><span class="comment">================================================================</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">Rem 求出报表描述名称;</span><br><span class="line">&amp;arrRptPar.Push(CreateArrayAny(<span class="string">&quot;报表名称&quot;</span>, <span class="string">&quot;差异分析表&quot;</span>));</span><br><span class="line"></span><br><span class="line">Rem 取报表的制表人(OPRID+空格+OPRID对应员工的NAME_FORMAL);</span><br><span class="line">SQLExec(<span class="string">&quot;SELECT NAME_DISPLAY FROM PS_PERSONAL_DATA WHERE EMPLID = :1&quot;</span>, %EmployeeId, &amp;strRptPersonNm);</span><br><span class="line">&amp;strRptPersonNm = %OperatorId | <span class="string">&quot; &quot;</span> | &amp;strRptPersonNm;</span><br><span class="line"></span><br><span class="line">&amp;arrRptPar.Push(CreateArrayAny(<span class="string">&quot;制表人&quot;</span>, &amp;strRptPersonNm));</span><br><span class="line">&amp;arrRptPar.Push(CreateArrayAny(<span class="string">&quot;制表日期&quot;</span>, String(%Date)));</span><br><span class="line">rem Local string &amp;cPrdId = C_RPT_0010_AET.CAL_PRD_ID.Value;</span><br><span class="line">&amp;arrRptPar.Push(CreateArrayAny(<span class="string">&quot;开始月份&quot;</span>, &amp;calPrdId));</span><br><span class="line">&amp;arrRptPar.Push(CreateArrayAny(<span class="string">&quot;对比月份&quot;</span>, &amp;calPrdId1));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">================================================================</span></span><br><span class="line"><span class="comment">生成报表数据列头信息</span></span><br><span class="line"><span class="comment">================================================================</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line">Rem 设置报表格式信息;</span><br><span class="line">&amp;oReport.AddXlsHeader(&amp;rptFile);</span><br><span class="line">Rem 打印报表头信息;</span><br><span class="line">&amp;oReport.WritePara(&amp;rptFile, &amp;arrRptPar);</span><br><span class="line"></span><br><span class="line">Rem 初始化报表标题信息 <span class="number">8</span> ;</span><br><span class="line">&amp;arrRptHead.Push(<span class="string">&quot;序号&quot;</span>);</span><br><span class="line">&amp;arrRptHead.Push(<span class="string">&quot;工号&quot;</span>);</span><br><span class="line">rem &amp;arrRptHead.Push(<span class="string">&quot;员工记录&quot;</span>);</span><br><span class="line">&amp;arrRptHead.Push(<span class="string">&quot;姓名&quot;</span>);</span><br><span class="line">&amp;arrRptHead.Push(<span class="string">&quot;组织架构&quot;</span>);</span><br><span class="line">&amp;arrRptHead.Push(<span class="string">&quot;岗位&quot;</span>);</span><br><span class="line">&amp;arrRptHead.Push(<span class="string">&quot;入职时间&quot;</span>);</span><br><span class="line">&amp;arrRptHead.Push(<span class="string">&quot;离职时间&quot;</span>);</span><br><span class="line">&amp;arrRptHead.Push(<span class="string">&quot;薪资组&quot;</span>);</span><br><span class="line">&amp;arrRptHead.Push(<span class="string">&quot;项目&quot;</span>);</span><br><span class="line"></span><br><span class="line">REM <span class="number">17</span>;</span><br><span class="line">&lt;*</span><br><span class="line">&amp;arrRptHead.Push(<span class="string">&quot;应出勤&quot;</span>);</span><br><span class="line">&amp;arrRptHead.Push(<span class="string">&quot;实际出勤&quot;</span>);</span><br><span class="line">&amp;arrRptHead.Push(<span class="string">&quot;入离职缺勤&quot;</span>);</span><br><span class="line">&amp;arrRptHead.Push(<span class="string">&quot;事假&quot;</span>);</span><br><span class="line">&amp;arrRptHead.Push(<span class="string">&quot;病假&quot;</span>);</span><br><span class="line">&amp;arrRptHead.Push(<span class="string">&quot;产假&quot;</span>);</span><br><span class="line">&amp;arrRptHead.Push(<span class="string">&quot;旷工&quot;</span>);</span><br><span class="line">&amp;arrRptHead.Push(<span class="string">&quot;缺卡次数&quot;</span>);</span><br><span class="line">&amp;arrRptHead.Push(<span class="string">&quot;迟到早退次数&quot;</span>);</span><br><span class="line">&amp;arrRptHead.Push(<span class="string">&quot;严重迟到早退（次）&quot;</span>);</span><br><span class="line">&amp;arrRptHead.Push(<span class="string">&quot;延时/夜班次数&quot;</span>);</span><br><span class="line">&amp;arrRptHead.Push(<span class="string">&quot;出差天数&quot;</span>);</span><br><span class="line">&amp;arrRptHead.Push(<span class="string">&quot;平日加班(H)&quot;</span>);</span><br><span class="line">&amp;arrRptHead.Push(<span class="string">&quot;周末加班(H)&quot;</span>);</span><br><span class="line">&amp;arrRptHead.Push(<span class="string">&quot;节假日加班(H)&quot;</span>);</span><br><span class="line">&amp;arrRptHead.Push(<span class="string">&quot;缺卡扣款&quot;</span>);</span><br><span class="line">&amp;arrRptHead.Push(<span class="string">&quot;迟到扣款&quot;</span>);</span><br><span class="line">*&gt;</span><br><span class="line">REM <span class="number">25</span>;</span><br><span class="line"></span><br><span class="line">&amp;arrRptHead.Push(<span class="string">&quot;基本工资&quot;</span>);</span><br><span class="line">&amp;arrRptHead.Push(<span class="string">&quot;岗位工资&quot;</span>);</span><br><span class="line">&amp;arrRptHead.Push(<span class="string">&quot;月度绩效工资&quot;</span>);</span><br><span class="line">&amp;arrRptHead.Push(<span class="string">&quot;计件工资&quot;</span>);</span><br><span class="line">&amp;arrRptHead.Push(<span class="string">&quot;销售提成&quot;</span>);</span><br><span class="line">&amp;arrRptHead.Push(<span class="string">&quot;加班工资&quot;</span>);</span><br><span class="line">&amp;arrRptHead.Push(<span class="string">&quot;奖金&quot;</span>);</span><br><span class="line">&amp;arrRptHead.Push(<span class="string">&quot;证书补贴&quot;</span>);</span><br><span class="line">&amp;arrRptHead.Push(<span class="string">&quot;延时/夜班补贴&quot;</span>);</span><br><span class="line">&amp;arrRptHead.Push(<span class="string">&quot;驻外津贴&quot;</span>);</span><br><span class="line">&amp;arrRptHead.Push(<span class="string">&quot;特殊岗位津贴&quot;</span>);</span><br><span class="line">&amp;arrRptHead.Push(<span class="string">&quot;笔记本电脑津贴&quot;</span>);</span><br><span class="line">&amp;arrRptHead.Push(<span class="string">&quot;私车公用津贴&quot;</span>);</span><br><span class="line">&amp;arrRptHead.Push(<span class="string">&quot;工龄津贴&quot;</span>);</span><br><span class="line">&amp;arrRptHead.Push(<span class="string">&quot;高温津贴&quot;</span>);</span><br><span class="line">&amp;arrRptHead.Push(<span class="string">&quot;通讯津贴&quot;</span>);</span><br><span class="line">&amp;arrRptHead.Push(<span class="string">&quot;餐费津贴&quot;</span>);</span><br><span class="line">&amp;arrRptHead.Push(<span class="string">&quot;探亲津贴&quot;</span>);</span><br><span class="line">&amp;arrRptHead.Push(<span class="string">&quot;住房津贴&quot;</span>);</span><br><span class="line">&amp;arrRptHead.Push(<span class="string">&quot;交通津贴&quot;</span>);</span><br><span class="line">&amp;arrRptHead.Push(<span class="string">&quot;应发工资&quot;</span>);</span><br><span class="line">&amp;arrRptHead.Push(<span class="string">&quot;个人社保合计&quot;</span>);</span><br><span class="line">&amp;arrRptHead.Push(<span class="string">&quot;个人公积金合计&quot;</span>);</span><br><span class="line">&amp;arrRptHead.Push(<span class="string">&quot;当月个税&quot;</span>);</span><br><span class="line">&amp;arrRptHead.Push(<span class="string">&quot;实发工资&quot;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;oReport.WriteColName(&amp;rptFile, &amp;arrRptHead);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">===============================================</span></span><br><span class="line"><span class="comment">============   生成报表主题   =================</span></span><br><span class="line"><span class="comment">===============================================</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">rem 获取主要数据;</span><br><span class="line">Local string &amp;sqlStr;</span><br><span class="line">&amp;sqlStr = <span class="string">&quot;  SELECT emplid ,CAL_PRD_ID, C_AMT_002, C_AMT_003, C_AMT_004, C_AMT_008, C_AMT_009, C_AMT_011, C_AMT_010, &quot;</span>;</span><br><span class="line">&amp;sqlStr = &amp;sqlStr | <span class="string">&quot; C_AMT_006, C_AMT_012, C_AMT_013, C_AMT_015, C_AMT_016, C_AMT_018, C_AMT_017, C_AMT_020,  &quot;</span>;</span><br><span class="line">&amp;sqlStr = &amp;sqlStr | <span class="string">&quot;  C_AMT_019, C_AMT_021, C_AMT_022, C_AMT_023, C_AMT_024, C_AMT_027, C_AMT_090, C_AMT_091, C_AMT_047, C_AMT_028  &quot;</span>;</span><br><span class="line">&amp;sqlStr = &amp;sqlStr | <span class="string">&quot;    FROM PS_C_WA_PAY_RSLT P WHERE P.GP_PAYGROUP = :1  AND P.CAL_PRD_ID IN (:2, :3 )  ORDER BY P.EMPLID, P.CAL_PRD_ID DESC, P.RSLT_SEG_NUM  &quot;</span>;</span><br><span class="line">Local SQL &amp;rowSql = CreateSQL(&amp;sqlStr, &amp;gpPayGroup, &amp;calPrdId, &amp;calPrdId1);</span><br><span class="line"></span><br><span class="line">Local array &amp;data1;</span><br><span class="line"></span><br><span class="line">Local array of array of any &amp;data2;</span><br><span class="line"></span><br><span class="line">&amp;data1 = CreateArrayAny().Clone();</span><br><span class="line"></span><br><span class="line">rem &amp;data2 = CreateArray(CreateArrayAny(), <span class="number">0</span>).Clone();</span><br><span class="line">&amp;data2 = CreateArrayRept(CreateArrayAny(), <span class="number">0</span>).Clone();</span><br><span class="line"></span><br><span class="line">Local string &amp;Name;</span><br><span class="line">Local string &amp;deptPath;</span><br><span class="line">Local string &amp;stdPosnDescr;</span><br><span class="line">Local string &amp;lastHireDt;</span><br><span class="line">Local string &amp;endDt;</span><br><span class="line">Local string &amp;gpGroup;</span><br><span class="line">Local string &amp;tmpEmplid;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">While &amp;rowSql.Fetch(&amp;data1)</span><br><span class="line">   &amp;data2.Push(CreateArrayAny(&amp;data1));</span><br><span class="line">End-While;</span><br><span class="line"></span><br><span class="line">If &amp;data2.Len &gt; <span class="number">0</span> Then</span><br><span class="line">   Warning <span class="string">&quot;debug2&quot;</span> | &amp;data2.Len;</span><br><span class="line">   For &amp;i = <span class="number">1</span> To &amp;data2.Len</span><br><span class="line">      Warning <span class="string">&quot;debug3&quot;</span> | &amp;data2 [&amp;i][<span class="number">1</span>];</span><br><span class="line">      SQLExec(<span class="string">&quot; SELECT  JOB.NAME,JOB.c_short_dept_path,JOB.descr,JOB.last_hire_dt,JOB.termination_dt , job.gp_paygroup FROM PS_C_JOB_CURR_VW2 JOB WHERE JOB.emplid = :1 &quot;</span>, &amp;data2 [&amp;i][<span class="number">1</span>], &amp;Name, &amp;deptPath, &amp;stdPosnDescr, &amp;lastHireDt, &amp;endDt, &amp;gpGroup);</span><br><span class="line">      If &amp;i = <span class="number">2</span> Then</span><br><span class="line">         If &amp;data2 [<span class="number">2</span>][<span class="number">1</span>] &lt;&gt; &amp;data2 [<span class="number">1</span>][<span class="number">1</span>] Then</span><br><span class="line">            &amp;rptFile.WriteLine(<span class="string">&quot;&lt;tr&gt;&quot;</span>);</span><br><span class="line">            &amp;oReport.WriteCellData(&amp;rptFile, &amp;seqNo, <span class="string">&quot;30&quot;</span>); <span class="comment">/* 序号*/</span></span><br><span class="line">            &amp;oReport.WriteCellData(&amp;rptFile, <span class="string">&quot; &quot;</span>, <span class="string">&quot;30&quot;</span>); <span class="comment">/* 工号*/</span></span><br><span class="line">            rem  &amp;oReport.WriteCellData(&amp;rptFile, <span class="string">&quot; &quot;</span>, <span class="string">&quot;30&quot;</span>); <span class="comment">/* 员工记录*/</span></span><br><span class="line">            &amp;oReport.WriteCellData(&amp;rptFile, <span class="string">&quot; &quot;</span>, <span class="string">&quot;30&quot;</span>); <span class="comment">/* 姓名*/</span></span><br><span class="line">            &amp;oReport.WriteCellData(&amp;rptFile, <span class="string">&quot; &quot;</span>, <span class="string">&quot;30&quot;</span>); <span class="comment">/* 组织架构*/</span></span><br><span class="line">            &amp;oReport.WriteCellData(&amp;rptFile, <span class="string">&quot; &quot;</span>, <span class="string">&quot;30&quot;</span>); <span class="comment">/* 岗位*/</span></span><br><span class="line">            &amp;oReport.WriteCellData(&amp;rptFile, <span class="string">&quot; &quot;</span>, <span class="string">&quot;30&quot;</span>); <span class="comment">/* 入职时间*/</span></span><br><span class="line">            &amp;oReport.WriteCellData(&amp;rptFile, <span class="string">&quot; &quot;</span>, <span class="string">&quot;30&quot;</span>); <span class="comment">/* 离职时间*/</span></span><br><span class="line">            &amp;oReport.WriteCellData(&amp;rptFile, <span class="string">&quot; &quot;</span>, <span class="string">&quot;30&quot;</span>); <span class="comment">/* 薪资组*/</span></span><br><span class="line">            &amp;oReport.WriteCellData(&amp;rptFile, <span class="string">&quot;差异&quot;</span>, <span class="string">&quot;30&quot;</span>); <span class="comment">/* 项目(期间)*/</span></span><br><span class="line">            </span><br><span class="line">            For &amp;j = <span class="number">3</span> To &amp;data2 [&amp;i].Len</span><br><span class="line">               &amp;oReport.WriteCellData(&amp;rptFile, <span class="string">&quot;0&quot;</span>, <span class="string">&quot;30&quot;</span>); <span class="comment">/* 差异为0*/</span></span><br><span class="line">            End-For;</span><br><span class="line">            &amp;rptFile.WriteLine(<span class="string">&quot;&lt;/tr&gt;&quot;</span>);</span><br><span class="line">            &amp;seqNo = &amp;seqNo + <span class="number">1</span>;</span><br><span class="line">         Else</span><br><span class="line">            &amp;rptFile.WriteLine(<span class="string">&quot;&lt;tr&gt;&quot;</span>);</span><br><span class="line">            &amp;oReport.WriteCellData(&amp;rptFile, &amp;seqNo, <span class="string">&quot;30&quot;</span>); <span class="comment">/* 序号*/</span></span><br><span class="line">            &amp;oReport.WriteCellData(&amp;rptFile, <span class="string">&quot; &quot;</span>, <span class="string">&quot;30&quot;</span>); <span class="comment">/* 工号*/</span></span><br><span class="line">            rem  &amp;oReport.WriteCellData(&amp;rptFile, <span class="string">&quot; &quot;</span>, <span class="string">&quot;30&quot;</span>); <span class="comment">/* 员工记录*/</span></span><br><span class="line">            &amp;oReport.WriteCellData(&amp;rptFile, <span class="string">&quot; &quot;</span>, <span class="string">&quot;30&quot;</span>); <span class="comment">/* 姓名*/</span></span><br><span class="line">            &amp;oReport.WriteCellData(&amp;rptFile, <span class="string">&quot; &quot;</span>, <span class="string">&quot;30&quot;</span>); <span class="comment">/* 组织架构*/</span></span><br><span class="line">            &amp;oReport.WriteCellData(&amp;rptFile, <span class="string">&quot; &quot;</span>, <span class="string">&quot;30&quot;</span>); <span class="comment">/* 岗位*/</span></span><br><span class="line">            &amp;oReport.WriteCellData(&amp;rptFile, <span class="string">&quot; &quot;</span>, <span class="string">&quot;30&quot;</span>); <span class="comment">/* 入职时间*/</span></span><br><span class="line">            &amp;oReport.WriteCellData(&amp;rptFile, <span class="string">&quot; &quot;</span>, <span class="string">&quot;30&quot;</span>); <span class="comment">/* 离职时间*/</span></span><br><span class="line">            &amp;oReport.WriteCellData(&amp;rptFile, <span class="string">&quot; &quot;</span>, <span class="string">&quot;30&quot;</span>); <span class="comment">/* 薪资组*/</span></span><br><span class="line">            &amp;oReport.WriteCellData(&amp;rptFile, <span class="string">&quot;差异&quot;</span>, <span class="string">&quot;30&quot;</span>); <span class="comment">/* 项目(期间)*/</span></span><br><span class="line">            </span><br><span class="line">            For &amp;j = <span class="number">3</span> To &amp;data2 [&amp;i].Len</span><br><span class="line">               &amp;oReport.WriteCellData(&amp;rptFile, &amp;data2 [<span class="number">1</span>][&amp;j] - &amp;data2 [<span class="number">2</span>][&amp;j], <span class="string">&quot;30&quot;</span>); <span class="comment">/* 计算差异*/</span></span><br><span class="line">            End-For;</span><br><span class="line">            &amp;rptFile.WriteLine(<span class="string">&quot;&lt;/tr&gt;&quot;</span>);</span><br><span class="line">            &amp;seqNo = &amp;seqNo + <span class="number">1</span>;</span><br><span class="line">         End-If;</span><br><span class="line">      End-If;</span><br><span class="line">      If &amp;i &gt; <span class="number">2</span> And</span><br><span class="line">            &amp;tmpEmplid &lt;&gt; &amp;data2 [&amp;i][<span class="number">1</span>] Then</span><br><span class="line">         </span><br><span class="line">         </span><br><span class="line">         If &amp;tmpEmplid &lt;&gt; &amp;data2 [&amp;i - <span class="number">2</span>][<span class="number">1</span>] Then</span><br><span class="line">            &amp;rptFile.WriteLine(<span class="string">&quot;&lt;tr&gt;&quot;</span>);</span><br><span class="line">            &amp;oReport.WriteCellData(&amp;rptFile, &amp;seqNo, <span class="string">&quot;30&quot;</span>); <span class="comment">/* 序号*/</span></span><br><span class="line">            &amp;oReport.WriteCellData(&amp;rptFile, <span class="string">&quot; &quot;</span>, <span class="string">&quot;30&quot;</span>); <span class="comment">/* 工号*/</span></span><br><span class="line">            rem  &amp;oReport.WriteCellData(&amp;rptFile, <span class="string">&quot; &quot;</span>, <span class="string">&quot;30&quot;</span>); <span class="comment">/* 员工记录*/</span></span><br><span class="line">            &amp;oReport.WriteCellData(&amp;rptFile, <span class="string">&quot; &quot;</span>, <span class="string">&quot;30&quot;</span>); <span class="comment">/* 姓名*/</span></span><br><span class="line">            &amp;oReport.WriteCellData(&amp;rptFile, <span class="string">&quot; &quot;</span>, <span class="string">&quot;30&quot;</span>); <span class="comment">/* 组织架构*/</span></span><br><span class="line">            &amp;oReport.WriteCellData(&amp;rptFile, <span class="string">&quot; &quot;</span>, <span class="string">&quot;30&quot;</span>); <span class="comment">/* 岗位*/</span></span><br><span class="line">            &amp;oReport.WriteCellData(&amp;rptFile, <span class="string">&quot; &quot;</span>, <span class="string">&quot;30&quot;</span>); <span class="comment">/* 入职时间*/</span></span><br><span class="line">            &amp;oReport.WriteCellData(&amp;rptFile, <span class="string">&quot; &quot;</span>, <span class="string">&quot;30&quot;</span>); <span class="comment">/* 离职时间*/</span></span><br><span class="line">            &amp;oReport.WriteCellData(&amp;rptFile, <span class="string">&quot; &quot;</span>, <span class="string">&quot;30&quot;</span>); <span class="comment">/* 薪资组*/</span></span><br><span class="line">            &amp;oReport.WriteCellData(&amp;rptFile, <span class="string">&quot;差异&quot;</span>, <span class="string">&quot;30&quot;</span>); <span class="comment">/* 项目(期间)*/</span></span><br><span class="line">            </span><br><span class="line">            For &amp;j = <span class="number">3</span> To &amp;data2 [&amp;i].Len</span><br><span class="line">               &amp;oReport.WriteCellData(&amp;rptFile, <span class="string">&quot;0&quot;</span>, <span class="string">&quot;30&quot;</span>); <span class="comment">/* 差异为0*/</span></span><br><span class="line">            End-For;</span><br><span class="line">            &amp;rptFile.WriteLine(<span class="string">&quot;&lt;/tr&gt;&quot;</span>);</span><br><span class="line">            &amp;seqNo = &amp;seqNo + <span class="number">1</span>;</span><br><span class="line">            </span><br><span class="line">         Else</span><br><span class="line">            </span><br><span class="line">            &amp;rptFile.WriteLine(<span class="string">&quot;&lt;tr&gt;&quot;</span>);</span><br><span class="line">            &amp;oReport.WriteCellData(&amp;rptFile, &amp;seqNo, <span class="string">&quot;30&quot;</span>); <span class="comment">/* 序号*/</span></span><br><span class="line">            &amp;oReport.WriteCellData(&amp;rptFile, <span class="string">&quot; &quot;</span>, <span class="string">&quot;30&quot;</span>); <span class="comment">/* 工号*/</span></span><br><span class="line">            rem  &amp;oReport.WriteCellData(&amp;rptFile, <span class="string">&quot; &quot;</span>, <span class="string">&quot;30&quot;</span>); <span class="comment">/* 员工记录*/</span></span><br><span class="line">            &amp;oReport.WriteCellData(&amp;rptFile, <span class="string">&quot; &quot;</span>, <span class="string">&quot;30&quot;</span>); <span class="comment">/* 姓名*/</span></span><br><span class="line">            &amp;oReport.WriteCellData(&amp;rptFile, <span class="string">&quot; &quot;</span>, <span class="string">&quot;30&quot;</span>); <span class="comment">/* 组织架构*/</span></span><br><span class="line">            &amp;oReport.WriteCellData(&amp;rptFile, <span class="string">&quot; &quot;</span>, <span class="string">&quot;30&quot;</span>); <span class="comment">/* 岗位*/</span></span><br><span class="line">            &amp;oReport.WriteCellData(&amp;rptFile, <span class="string">&quot; &quot;</span>, <span class="string">&quot;30&quot;</span>); <span class="comment">/* 入职时间*/</span></span><br><span class="line">            &amp;oReport.WriteCellData(&amp;rptFile, <span class="string">&quot; &quot;</span>, <span class="string">&quot;30&quot;</span>); <span class="comment">/* 离职时间*/</span></span><br><span class="line">            &amp;oReport.WriteCellData(&amp;rptFile, <span class="string">&quot; &quot;</span>, <span class="string">&quot;30&quot;</span>); <span class="comment">/* 薪资组*/</span></span><br><span class="line">            &amp;oReport.WriteCellData(&amp;rptFile, <span class="string">&quot;差异&quot;</span>, <span class="string">&quot;30&quot;</span>); <span class="comment">/* 项目(期间)*/</span></span><br><span class="line">            </span><br><span class="line">            For &amp;j = <span class="number">3</span> To &amp;data2 [&amp;i].Len</span><br><span class="line">               &amp;oReport.WriteCellData(&amp;rptFile, &amp;data2 [&amp;i - <span class="number">2</span>][&amp;j] - &amp;data2 [&amp;i - <span class="number">1</span>][&amp;j], <span class="string">&quot;30&quot;</span>); <span class="comment">/* 计算差异*/</span></span><br><span class="line">            End-For;</span><br><span class="line">            &amp;rptFile.WriteLine(<span class="string">&quot;&lt;/tr&gt;&quot;</span>);</span><br><span class="line">            &amp;seqNo = &amp;seqNo + <span class="number">1</span>;</span><br><span class="line">         End-If;</span><br><span class="line">         </span><br><span class="line">         </span><br><span class="line">      End-If;</span><br><span class="line">      </span><br><span class="line">      &amp;rptFile.WriteLine(<span class="string">&quot;&lt;tr&gt;&quot;</span>);</span><br><span class="line">      &amp;oReport.WriteCellData(&amp;rptFile, &amp;seqNo, <span class="string">&quot;30&quot;</span>); <span class="comment">/* 序号*/</span></span><br><span class="line">      &amp;oReport.WriteCellData(&amp;rptFile, &amp;data2 [&amp;i][<span class="number">1</span>], <span class="string">&quot;30&quot;</span>); <span class="comment">/* 工号*/</span></span><br><span class="line">      rem &amp;oReport.WriteCellData(&amp;rptFile, &amp;data2 [&amp;i][<span class="number">2</span>], <span class="string">&quot;30&quot;</span>); <span class="comment">/* 员工记录*/</span></span><br><span class="line">      &amp;oReport.WriteCellData(&amp;rptFile, &amp;Name, <span class="string">&quot;30&quot;</span>); <span class="comment">/* 姓名*/</span></span><br><span class="line">      &amp;oReport.WriteCellData(&amp;rptFile, &amp;deptPath, <span class="string">&quot;30&quot;</span>); <span class="comment">/* 组织架构*/</span></span><br><span class="line">      &amp;oReport.WriteCellData(&amp;rptFile, &amp;stdPosnDescr, <span class="string">&quot;30&quot;</span>); <span class="comment">/* 岗位*/</span></span><br><span class="line">      &amp;oReport.WriteCellData(&amp;rptFile, &amp;lastHireDt, <span class="string">&quot;30&quot;</span>); <span class="comment">/* 入职时间*/</span></span><br><span class="line">      &amp;oReport.WriteCellData(&amp;rptFile, &amp;endDt, <span class="string">&quot;30&quot;</span>); <span class="comment">/* 离职时间*/</span></span><br><span class="line">      &amp;oReport.WriteCellData(&amp;rptFile, &amp;gpGroup, <span class="string">&quot;30&quot;</span>); <span class="comment">/* 薪资组*/</span></span><br><span class="line">      &amp;oReport.WriteCellData(&amp;rptFile, &amp;data2 [&amp;i][<span class="number">2</span>], <span class="string">&quot;30&quot;</span>); <span class="comment">/* 项目(期间)*/</span></span><br><span class="line">      </span><br><span class="line">      For &amp;j = <span class="number">3</span> To &amp;data2 [&amp;i].Len</span><br><span class="line">         &amp;oReport.WriteCellData(&amp;rptFile, &amp;data2 [&amp;i][&amp;j], <span class="string">&quot;30&quot;</span>);</span><br><span class="line">      End-For;</span><br><span class="line">      &amp;rptFile.WriteLine(<span class="string">&quot;&lt;/tr&gt;&quot;</span>);</span><br><span class="line">      &amp;tmpEmplid = &amp;data2 [&amp;i][<span class="number">1</span>];</span><br><span class="line">      </span><br><span class="line">   End-For;</span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">   If &amp;data2.Len = <span class="number">1</span> Then</span><br><span class="line">      &amp;rptFile.WriteLine(<span class="string">&quot;&lt;tr&gt;&quot;</span>);</span><br><span class="line">      &amp;oReport.WriteCellData(&amp;rptFile, &amp;seqNo, <span class="string">&quot;30&quot;</span>); <span class="comment">/* 序号*/</span></span><br><span class="line">      &amp;oReport.WriteCellData(&amp;rptFile, <span class="string">&quot; &quot;</span>, <span class="string">&quot;30&quot;</span>); <span class="comment">/* 工号*/</span></span><br><span class="line">      rem  &amp;oReport.WriteCellData(&amp;rptFile, <span class="string">&quot; &quot;</span>, <span class="string">&quot;30&quot;</span>); <span class="comment">/* 员工记录*/</span></span><br><span class="line">      &amp;oReport.WriteCellData(&amp;rptFile, <span class="string">&quot; &quot;</span>, <span class="string">&quot;30&quot;</span>); <span class="comment">/* 姓名*/</span></span><br><span class="line">      &amp;oReport.WriteCellData(&amp;rptFile, <span class="string">&quot; &quot;</span>, <span class="string">&quot;30&quot;</span>); <span class="comment">/* 组织架构*/</span></span><br><span class="line">      &amp;oReport.WriteCellData(&amp;rptFile, <span class="string">&quot; &quot;</span>, <span class="string">&quot;30&quot;</span>); <span class="comment">/* 岗位*/</span></span><br><span class="line">      &amp;oReport.WriteCellData(&amp;rptFile, <span class="string">&quot; &quot;</span>, <span class="string">&quot;30&quot;</span>); <span class="comment">/* 入职时间*/</span></span><br><span class="line">      &amp;oReport.WriteCellData(&amp;rptFile, <span class="string">&quot; &quot;</span>, <span class="string">&quot;30&quot;</span>); <span class="comment">/* 离职时间*/</span></span><br><span class="line">      &amp;oReport.WriteCellData(&amp;rptFile, <span class="string">&quot; &quot;</span>, <span class="string">&quot;30&quot;</span>); <span class="comment">/* 薪资组*/</span></span><br><span class="line">      &amp;oReport.WriteCellData(&amp;rptFile, <span class="string">&quot;差异&quot;</span>, <span class="string">&quot;30&quot;</span>); <span class="comment">/* 项目(期间)*/</span></span><br><span class="line">      </span><br><span class="line">      For &amp;j = <span class="number">3</span> To &amp;data2 [&amp;i].Len</span><br><span class="line">         &amp;oReport.WriteCellData(&amp;rptFile, <span class="string">&quot;0&quot;</span>, <span class="string">&quot;30&quot;</span>); <span class="comment">/* 差异为0*/</span></span><br><span class="line">      End-For;</span><br><span class="line">      &amp;rptFile.WriteLine(<span class="string">&quot;&lt;/tr&gt;&quot;</span>);</span><br><span class="line">   End-If;</span><br><span class="line">   If &amp;data2.Len = <span class="number">2</span> Then</span><br><span class="line">      rem  ;</span><br><span class="line">   End-If;</span><br><span class="line">   If &amp;data2.Len &gt; <span class="number">2</span> Then</span><br><span class="line">      If &amp;data2 [&amp;data2.Len - <span class="number">1</span>][<span class="number">1</span>] &lt;&gt; &amp;data2 [&amp;data2.Len][<span class="number">1</span>] Then</span><br><span class="line">         &amp;rptFile.WriteLine(<span class="string">&quot;&lt;tr&gt;&quot;</span>);</span><br><span class="line">         &amp;oReport.WriteCellData(&amp;rptFile, &amp;seqNo, <span class="string">&quot;30&quot;</span>); <span class="comment">/* 序号*/</span></span><br><span class="line">         &amp;oReport.WriteCellData(&amp;rptFile, <span class="string">&quot; &quot;</span>, <span class="string">&quot;30&quot;</span>); <span class="comment">/* 工号*/</span></span><br><span class="line">         rem  &amp;oReport.WriteCellData(&amp;rptFile, <span class="string">&quot; &quot;</span>, <span class="string">&quot;30&quot;</span>); <span class="comment">/* 员工记录*/</span></span><br><span class="line">         &amp;oReport.WriteCellData(&amp;rptFile, <span class="string">&quot; &quot;</span>, <span class="string">&quot;30&quot;</span>); <span class="comment">/* 姓名*/</span></span><br><span class="line">         &amp;oReport.WriteCellData(&amp;rptFile, <span class="string">&quot; &quot;</span>, <span class="string">&quot;30&quot;</span>); <span class="comment">/* 组织架构*/</span></span><br><span class="line">         &amp;oReport.WriteCellData(&amp;rptFile, <span class="string">&quot; &quot;</span>, <span class="string">&quot;30&quot;</span>); <span class="comment">/* 岗位*/</span></span><br><span class="line">         &amp;oReport.WriteCellData(&amp;rptFile, <span class="string">&quot; &quot;</span>, <span class="string">&quot;30&quot;</span>); <span class="comment">/* 入职时间*/</span></span><br><span class="line">         &amp;oReport.WriteCellData(&amp;rptFile, <span class="string">&quot; &quot;</span>, <span class="string">&quot;30&quot;</span>); <span class="comment">/* 离职时间*/</span></span><br><span class="line">         &amp;oReport.WriteCellData(&amp;rptFile, <span class="string">&quot; &quot;</span>, <span class="string">&quot;30&quot;</span>); <span class="comment">/* 薪资组*/</span></span><br><span class="line">         &amp;oReport.WriteCellData(&amp;rptFile, <span class="string">&quot;差异&quot;</span>, <span class="string">&quot;30&quot;</span>); <span class="comment">/* 项目(期间)*/</span></span><br><span class="line">         </span><br><span class="line">         For &amp;j = <span class="number">3</span> To &amp;data2 [&amp;data2.Len].Len</span><br><span class="line">            &amp;oReport.WriteCellData(&amp;rptFile, <span class="string">&quot;0&quot;</span>, <span class="string">&quot;30&quot;</span>); <span class="comment">/* 差异为0*/</span></span><br><span class="line">         End-For;</span><br><span class="line">         &amp;rptFile.WriteLine(<span class="string">&quot;&lt;/tr&gt;&quot;</span>);</span><br><span class="line">      Else</span><br><span class="line">         &amp;rptFile.WriteLine(<span class="string">&quot;&lt;tr&gt;&quot;</span>);</span><br><span class="line">         &amp;oReport.WriteCellData(&amp;rptFile, &amp;seqNo, <span class="string">&quot;30&quot;</span>); <span class="comment">/* 序号*/</span></span><br><span class="line">         &amp;oReport.WriteCellData(&amp;rptFile, <span class="string">&quot; &quot;</span>, <span class="string">&quot;30&quot;</span>); <span class="comment">/* 工号*/</span></span><br><span class="line">         rem  &amp;oReport.WriteCellData(&amp;rptFile, <span class="string">&quot; &quot;</span>, <span class="string">&quot;30&quot;</span>); <span class="comment">/* 员工记录*/</span></span><br><span class="line">         &amp;oReport.WriteCellData(&amp;rptFile, <span class="string">&quot; &quot;</span>, <span class="string">&quot;30&quot;</span>); <span class="comment">/* 姓名*/</span></span><br><span class="line">         &amp;oReport.WriteCellData(&amp;rptFile, <span class="string">&quot; &quot;</span>, <span class="string">&quot;30&quot;</span>); <span class="comment">/* 组织架构*/</span></span><br><span class="line">         &amp;oReport.WriteCellData(&amp;rptFile, <span class="string">&quot; &quot;</span>, <span class="string">&quot;30&quot;</span>); <span class="comment">/* 岗位*/</span></span><br><span class="line">         &amp;oReport.WriteCellData(&amp;rptFile, <span class="string">&quot; &quot;</span>, <span class="string">&quot;30&quot;</span>); <span class="comment">/* 入职时间*/</span></span><br><span class="line">         &amp;oReport.WriteCellData(&amp;rptFile, <span class="string">&quot; &quot;</span>, <span class="string">&quot;30&quot;</span>); <span class="comment">/* 离职时间*/</span></span><br><span class="line">         &amp;oReport.WriteCellData(&amp;rptFile, <span class="string">&quot; &quot;</span>, <span class="string">&quot;30&quot;</span>); <span class="comment">/* 薪资组*/</span></span><br><span class="line">         &amp;oReport.WriteCellData(&amp;rptFile, <span class="string">&quot;差异&quot;</span>, <span class="string">&quot;30&quot;</span>); <span class="comment">/* 项目(期间)*/</span></span><br><span class="line">         </span><br><span class="line">         For &amp;j = <span class="number">3</span> To &amp;data2 [&amp;data2.Len].Len</span><br><span class="line">            &amp;oReport.WriteCellData(&amp;rptFile, &amp;data2 [&amp;data2.Len - <span class="number">1</span>][&amp;j] - &amp;data2 [&amp;data2.Len][&amp;j], <span class="string">&quot;30&quot;</span>); <span class="comment">/* 计算差异*/</span></span><br><span class="line">         End-For;</span><br><span class="line">         &amp;rptFile.WriteLine(<span class="string">&quot;&lt;/tr&gt;&quot;</span>);</span><br><span class="line">         </span><br><span class="line">      End-If;</span><br><span class="line">      </span><br><span class="line">      </span><br><span class="line">   End-If;</span><br><span class="line">End-If;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*打印结尾信息*/</span></span><br><span class="line">&amp;oReport.WriteEnding(&amp;rptFile);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&amp;log.Close();</span><br><span class="line">&amp;rptFile.Close();</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PeopleSoft </tag>
            
            <tag> PeopleCode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Life-50公里徒步有感</title>
      <link href="2020/08/17/%E5%8F%98%E9%87%8F%E5%87%BD%E6%95%B0%E5%91%BD%E5%90%8D%E8%A7%84%E5%88%99/"/>
      <url>2020/08/17/%E5%8F%98%E9%87%8F%E5%87%BD%E6%95%B0%E5%91%BD%E5%90%8D%E8%A7%84%E5%88%99/</url>
      
        <content type="html"><![CDATA[<h3 id="常见的英文单词缩写提炼方法有三："><a href="#常见的英文单词缩写提炼方法有三：" class="headerlink" title="常见的英文单词缩写提炼方法有三："></a>常见的英文单词缩写提炼方法有三：</h3><ul><li>开始部分法</li></ul><p>把一个单词的开头几个字母当做该单词的缩写。比如 hippopotamus 缩写为hippo，different缩写为diff，这也是linux的一个命令，elementary缩写为elem等等。</p><ul><li>去掉元音法</li></ul><p>去掉单词中的元音字母a, e, i, o, u. 这种方法适合那些既不太长也不太短的单词，去掉元音后的缩写仍然可辨认可读出。例如quality缩写为qlty, teacher缩写为tchr，school缩写为schl，progress缩写为prgrss等等。</p><ul><li>首尾字母法</li></ul><p>只有一个音节的词可以通过提取第一个字母和最后一个字母的方法来缩写。例如mount缩写为mt，land和load都缩写为ld，girl缩写为gl等等。</p><p>对于多个单词的短语或者常用语可以是：</p><ul><li>单词首字母法</li></ul><p>提取每个单词的首字母。例如As Soon As Possible缩写为ASAP，By The Way缩写为BTW，Oh My God 缩写为OMG， NotApplicable缩写为NA，For YourInformation缩写为FYI等等。</p><a id="more"></a><h3 id="PeopleSoft-HCM规范"><a href="#PeopleSoft-HCM规范" class="headerlink" title="PeopleSoft HCM规范"></a>PeopleSoft HCM规范</h3><p>PeopleSoft HCM对缩写有统一的规范[2] ，我们看一下都是用了何种缩写方法：</p><table><thead><tr><th>原词</th><th>缩写</th><th>缩写方法</th></tr></thead><tbody><tr><td>Address</td><td><strong>Addr</strong></td><td>开始部分法</td></tr><tr><td>Allowance津贴</td><td><strong>Allow</strong></td><td>开始部分法</td></tr><tr><td>Approval</td><td><strong>Apvl</strong></td><td>去掉元音法</td></tr><tr><td>Approver, approve, or approved</td><td><strong>Appr</strong></td><td>开始部分法</td></tr><tr><td>Button</td><td><strong>Btn</strong></td><td>去掉元音法</td></tr><tr><td>Code</td><td><strong>Cd</strong></td><td>去掉元音法</td></tr><tr><td>Contract</td><td><strong>Cont</strong></td><td>开始部分法</td></tr><tr><td>Effective sequence</td><td><strong>Effseq</strong></td><td>单词首字母法</td></tr><tr><td>General ledger</td><td><strong>GL</strong></td><td>单词首字母法</td></tr><tr><td>Question</td><td><strong>Qstn</strong></td><td>去掉元音法</td></tr><tr><td>Time reporting code</td><td><strong>TRC</strong></td><td>单词首字母法</td></tr><tr><td>Taxable</td><td><strong>Txbl</strong></td><td>去掉元音法</td></tr><tr><td>Year to date</td><td><strong>YTD</strong></td><td>单词首字母法</td></tr></tbody></table><p>更多规范缩写，请参考PSFT官方book。</p>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PeopleSoft </tag>
            
            <tag> PeopleCode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PeopleSoft-简历图片</title>
      <link href="2020/08/17/PeopleSoft-%E7%AE%80%E5%8E%86%E5%9B%BE%E7%89%87/"/>
      <url>2020/08/17/PeopleSoft-%E7%AE%80%E5%8E%86%E5%9B%BE%E7%89%87/</url>
      
        <content type="html"><![CDATA[<h3 id="逻辑"><a href="#逻辑" class="headerlink" title="逻辑"></a>逻辑</h3><p>1、页面上传图片；2、页面一个HTML展示。</p><a id="more"></a><h2 id="页面新增照片上传和删除功能"><a href="#页面新增照片上传和删除功能" class="headerlink" title="页面新增照片上传和删除功能"></a>页面新增照片上传和删除功能</h2><h3 id="实体表中增加存储照片字段："><a href="#实体表中增加存储照片字段：" class="headerlink" title="实体表中增加存储照片字段："></a>实体表中增加存储照片字段：</h3><img src="https://gitee.com/gek7777/cdn.io/raw/master/image/20201221173008.png"/><h3 id="页面添加如图字段，隐藏14-15，14因为刷新不及时，所以利用html区域显示图片。"><a href="#页面添加如图字段，隐藏14-15，14因为刷新不及时，所以利用html区域显示图片。" class="headerlink" title="页面添加如图字段，隐藏14.15，14因为刷新不及时，所以利用html区域显示图片。"></a>页面添加如图字段，隐藏14.15，14因为刷新不及时，所以利用html区域显示图片。</h3><img src="https://gitee.com/gek7777/cdn.io/raw/master/image/20201221173045.png"/><h3 id="上传照片代码"><a href="#上传照片代码" class="headerlink" title="上传照片代码"></a>上传照片代码</h3><img src="https://gitee.com/gek7777/cdn.io/raw/master/image/20201221173104.png"/><h3 id="删除照片代码"><a href="#删除照片代码" class="headerlink" title="删除照片代码"></a>删除照片代码</h3><img src="https://gitee.com/gek7777/cdn.io/raw/master/image/20201221173121.png"/><h3 id="刷新照片代码"><a href="#刷新照片代码" class="headerlink" title="刷新照片代码"></a>刷新照片代码</h3><img src="https://gitee.com/gek7777/cdn.io/raw/master/image/20201221173136.png"/><h3 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//HTML代码：</span></span><br><span class="line">&lt;div&gt;&lt;img src=&quot;%bind(:1)&quot; width=&quot;110&quot; height=&quot;150&quot; &gt;&lt;/div&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">//上传代码：</span></span><br><span class="line">rem 上传员工照片;</span><br><span class="line"><span class="comment">/*Employee Photo Feature Changes*/</span></span><br><span class="line">C_HR_WRK.C_YES_NO = <span class="string">&quot;N&quot;</span>;</span><br><span class="line"></span><br><span class="line">rem C_PRPSINFO_TBL.EMPLOYEE_PHOTO;</span><br><span class="line">Local Record &amp;recC_PRPSINFO_TBL;</span><br><span class="line">Local Record &amp;recC_HR_WRK;</span><br><span class="line"></span><br><span class="line">Local Field &amp;fld;</span><br><span class="line">&amp;recC_PRPSINFO_TBL = GetRow().GetRecord(Record.C_PRPSINFO_TBL);</span><br><span class="line">&amp;recC_PRPSINFO_TBL.EMPLOYEE_PHOTO.SetDefault();</span><br><span class="line"></span><br><span class="line">&amp;nReturn = DeleteImage(C_PRPSINFO_TBL.EMPLOYEE_PHOTO);</span><br><span class="line">&amp;nReturn = InsertImage(C_PRPSINFO_TBL.EMPLOYEE_PHOTO);</span><br><span class="line"></span><br><span class="line"><span class="comment">//删除代码：</span></span><br><span class="line">&amp;nReturn = DeleteImage(C_PRPSINFO_TBL.EMPLOYEE_PHOTO);</span><br><span class="line"></span><br><span class="line"><span class="comment">//刷新代码：</span></span><br><span class="line">If C_HR_WRK.C_YES_NO.Value = <span class="string">&quot;Y&quot;</span> Then</span><br><span class="line">   </span><br><span class="line">   Local Record &amp;EMPL_PHOTO2 = CreateRecord(Record.C_PRPSINFO_TBL);</span><br><span class="line">   &amp;EMPL_PHOTO2.COUNTRY.Value = <span class="string">&quot;CHN&quot;</span>;</span><br><span class="line">   &amp;EMPL_PHOTO2.NATIONAL_ID_TYPE.Value = <span class="string">&quot;NID&quot;</span>;</span><br><span class="line">   &amp;EMPL_PHOTO2.NID_SPECIAL_CHAR.Value = C_PREHIRE0_TBL.NID_SPECIAL_CHAR.Value;</span><br><span class="line">   rem &amp;EMPL_PHOTO2.C_RE_NO.Value = C_PREHIRE0_TBL.C_RE_NO.Value;</span><br><span class="line">   Local <span class="keyword">boolean</span> &amp;Bykey = &amp;EMPL_PHOTO2.SelectByKey();</span><br><span class="line">   </span><br><span class="line">   <span class="function">rem   <span class="title">WinMessage</span><span class="params">(<span class="string">&quot;&amp;Bykey==&quot;</span> | &amp;Bykey)</span></span>;</span><br><span class="line">   &amp;short_url = %Response.GetImageURL(&amp;EMPL_PHOTO2);</span><br><span class="line">   <span class="function">rem    <span class="title">WinMessage</span><span class="params">(<span class="string">&quot;&amp;short_url==&quot;</span> | &amp;short_url)</span></span>;</span><br><span class="line">   </span><br><span class="line">   <span class="function">rem  <span class="title">WinMessage</span><span class="params">(<span class="string">&quot;%Request.ServerPort==&quot;</span> | %Request.ServerPort)</span></span>;</span><br><span class="line">   </span><br><span class="line">   If %Request.ServerPort = <span class="number">443</span> Then</span><br><span class="line">      &amp;URL_KY = &amp;short_url;</span><br><span class="line">   Else</span><br><span class="line">      &amp;URL_KY = <span class="string">&quot;Http://&quot;</span> | %Request.ServerName | <span class="string">&quot;:&quot;</span> | %Request.ServerPort | &amp;short_url;</span><br><span class="line">   End-If;</span><br><span class="line">   </span><br><span class="line">   <span class="function">rem  <span class="title">WinMessage</span><span class="params">(<span class="string">&quot;&amp;URL_KY==&quot;</span> | &amp;URL_KY)</span></span>;</span><br><span class="line">   <span class="function">If <span class="title">All</span><span class="params">(&amp;short_url)</span> Then</span></span><br><span class="line"><span class="function">      rem <span class="title">GetLevel0</span><span class="params">()</span><span class="params">(<span class="number">1</span>)</span>.<span class="title">GetRowset</span><span class="params">(Scroll.C_PRPSINFO_TBL)</span><span class="params">(<span class="number">1</span>)</span>.C_HR_WRK.HTMLAREA.Value </span>= GetHTMLText(HTML.C_PRE_PHOTO_IMG, &amp;URL_KY | <span class="string">&quot;?&quot;</span> | DateTimeToLocalizedString(%Datetime, <span class="string">&quot;yyyyMMddHHmmss&quot;</span>));</span><br><span class="line">      C_HR_WRK.HTMLAREA.Value = GetHTMLText(HTML.C_PRE_PHOTO_IMG, &amp;URL_KY | <span class="string">&quot;?&quot;</span> | DateTimeToLocalizedString(%Datetime, <span class="string">&quot;yyyyMMddHHmmss&quot;</span>));</span><br><span class="line">      <span class="function">rem     <span class="title">WinMessage</span><span class="params">(<span class="string">&quot;&amp;URL===&quot;</span> | &amp;URL_KY | <span class="string">&quot;?&quot;</span> | DateTimeToLocalizedString(%Datetime, <span class="string">&quot;yyyyMMddHHmmss&quot;</span>)</span>)</span>;</span><br><span class="line">   Else</span><br><span class="line">      <span class="function">rem  <span class="title">GetLevel0</span><span class="params">()</span><span class="params">(<span class="number">1</span>)</span>.<span class="title">GetRowset</span><span class="params">(Scroll.C_PRPSINFO_TBL)</span><span class="params">(<span class="number">1</span>)</span>.C_HR_WRK.HR_VT_IMAGE.Value </span>= <span class="string">&quot;PT_DUMMY_PHOTO&quot;</span>;</span><br><span class="line">      C_HR_WRK.HR_VT_IMAGE.Value = <span class="string">&quot;PT_DUMMY_PHOTO&quot;</span>;</span><br><span class="line">   End-If;</span><br><span class="line">   </span><br><span class="line">Else</span><br><span class="line">   MessageBox(<span class="number">0</span>, <span class="string">&quot;&quot;</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="string">&quot;请先保存后再刷新照片&quot;</span>);</span><br><span class="line">End-If;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="页面新增照片展示"><a href="#页面新增照片展示" class="headerlink" title="页面新增照片展示"></a>页面新增照片展示</h2><h3 id="HTML、表，字段"><a href="#HTML、表，字段" class="headerlink" title="HTML、表，字段"></a>HTML、表，字段</h3><p>创建一个HTML，用来生成一个HTML页面；添加一张图片，动态值；这里是数据动态生成的地方。备用。</p><img src=https://gitee.com/gek7777/cdn.io/raw/master/image/1594806702024.png ><p>建表，字段，用来接收HTML静态页面；</p><img src=https://gitee.com/gek7777/cdn.io/raw/master/image/1594807471976.png ><img src=https://gitee.com/gek7777/cdn.io/raw/master/image/1594806936001.png ><p>在页面中，创建一个HTML元件，设置为动态的展示，设置如下；</p><img src=https://gitee.com/gek7777/cdn.io/raw/master/image/1594806879213.png ><p>在页面生效代码中，动态获取照片数据</p><img src=https://gitee.com/gek7777/cdn.io/raw/master/image/1594807112837.png ><p>代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">Local Record &amp;EMPL_PHOTO2 = CreateRecord(Record.EMPL_PHOTO);</span><br><span class="line">&amp;EMPL_PHOTO2.EMPLID.Value = C_PER_BASE_VW.EMPLID.Value;</span><br><span class="line">&amp;EMPL_PHOTO2.PHOTO_SIZENAME.Value = <span class="string">&quot;PAGE&quot;</span>;</span><br><span class="line">Local <span class="keyword">boolean</span> &amp;Bykey = &amp;EMPL_PHOTO2.SelectByKey();</span><br><span class="line"></span><br><span class="line">&amp;short_url = %Response.GetImageURL(&amp;EMPL_PHOTO2);</span><br><span class="line">If %Request.ServerPort = <span class="number">443</span> Then</span><br><span class="line">   &amp;URL_KY = &amp;short_url;</span><br><span class="line">Else</span><br><span class="line">   &amp;URL_KY = <span class="string">&quot;Http://&quot;</span> | %Request.ServerName | <span class="string">&quot;:&quot;</span> | %Request.ServerPort | &amp;short_url;</span><br><span class="line">End-If;</span><br><span class="line"><span class="comment">//动态生成HTML页面，赋值给C_HTML_AVATAR字段；该字段关联了页面的HTML元件；</span></span><br><span class="line">C_EMPL_CARD_WK.C_HTML_AVATAR.Value = GetHTMLText(HTML.C_PHOTO_IMG, &amp;URL_KY | <span class="string">&quot;?&quot;</span> | DateTimeToLocalizedString(%Datetime, <span class="string">&quot;yyyyMMddHHmmss&quot;</span>));</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PeopleSoft </tag>
            
            <tag> PeopleCode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PeopleSoft-客制化表数据复制</title>
      <link href="2020/08/17/PeopleSoft-%E5%AE%A2%E5%88%B6%E5%8C%96%E8%A1%A8%E6%95%B0%E6%8D%AE%E5%A4%8D%E5%88%B6/"/>
      <url>2020/08/17/PeopleSoft-%E5%AE%A2%E5%88%B6%E5%8C%96%E8%A1%A8%E6%95%B0%E6%8D%AE%E5%A4%8D%E5%88%B6/</url>
      
        <content type="html"><![CDATA[<p>PeopleSoft中，利用系统函数进行客制化表复制。</p><a id="more"></a><h3 id="客制化表数据复制"><a href="#客制化表数据复制" class="headerlink" title="客制化表数据复制"></a>客制化表数据复制</h3><p>代码如下：</p><img src=https://gitee.com/gek7777/cdn.io/raw/master/image/1594807724089.png ><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">If <span class="title">None</span><span class="params">(&amp;retMsg)</span> Then</span></span><br><span class="line"><span class="function">         rem 工作经历</span>;</span><br><span class="line"><span class="comment">//创建rowSet;</span></span><br><span class="line">         Local Rowset &amp;workRs = CreateRowset(Record.C_HIR_WK_EX_TBL);</span><br><span class="line"><span class="comment">//判断&amp;workRs是否有数据，如果有，进行处理；</span></span><br><span class="line">         <span class="function">If <span class="title">All</span><span class="params">(&amp;workRs.GetRow(<span class="number">1</span>)</span>.C_HIR_WK_EX_TBL.NID_SPECIAL_CHAR.Value) Then</span></span><br><span class="line"><span class="function">         <span class="comment">//调用Fill方法,筛选数据；</span></span></span><br><span class="line"><span class="function">            &amp;workRs.<span class="title">Fill</span><span class="params">(<span class="string">&quot; WHERE NID_SPECIAL_CHAR=:1&quot;</span>, &amp;perRcd.NID_SPECIAL_CHAR.Value)</span></span>;</span><br><span class="line"><span class="comment">//调用函数进行表复制；</span></span><br><span class="line">            &amp;retMsg = submitDataList(&amp;workRs, <span class="string">&quot;C_HIR_WK_EX_TBL&quot;</span>, <span class="string">&quot;C_PRE_WK_EX_TBL&quot;</span>);</span><br><span class="line">         End-If;</span><br><span class="line"> End-If;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 提交数据行函数 */</span></span><br><span class="line"><span class="function">Function <span class="title">submitDataList</span><span class="params">(&amp;rs As Rowset, &amp;forRcdName As string, &amp;toRcdName As string)</span> Returns string</span></span><br><span class="line"><span class="function">   <span class="comment">/*</span></span></span><br><span class="line"><span class="function"><span class="comment">   args：&amp;rs - Rowset类型；&amp;forRcdName - string类型；&amp;toRcdName - string类型；</span></span></span><br><span class="line"><span class="function"><span class="comment">   retuen：返回值 string类型；</span></span></span><br><span class="line"><span class="function"><span class="comment">   */</span></span></span><br><span class="line"><span class="function">   &amp;rtnMsg </span>= <span class="string">&quot;&quot;</span>;</span><br><span class="line">   <span class="keyword">try</span></span><br><span class="line">      Local Record &amp;toRcd = CreateRecord(@(<span class="string">&quot;RECORD.&quot;</span> | &amp;toRcdName));</span><br><span class="line">      For &amp;i = <span class="number">1</span> To &amp;rs.ActiveRowCount</span><br><span class="line">          <span class="comment">//调用函数进行复制保存表每行的数据</span></span><br><span class="line">         submitRcdInfo(&amp;rs.GetRow(&amp;i).GetRecord(@(<span class="string">&quot;RECORD.&quot;</span> | &amp;forRcdName)), &amp;toRcd);</span><br><span class="line">      End-For;</span><br><span class="line">   <span class="keyword">catch</span> Exception &amp;ex</span><br><span class="line">      &amp;rtnMsg = &amp;ex.ToString();</span><br><span class="line">   end-<span class="keyword">try</span>;</span><br><span class="line">   Return &amp;rtnMsg;</span><br><span class="line">End-Function;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*复制并保存表信息函数*/</span></span><br><span class="line"><span class="function">Function <span class="title">submitRcdInfo</span><span class="params">(&amp;fromRcd As Record, &amp;toRcd As Record)</span></span></span><br><span class="line"><span class="function">    <span class="comment">//复制数据</span></span></span><br><span class="line"><span class="function">   &amp;fromRcd.<span class="title">CopyFieldsTo</span><span class="params">(&amp;toRcd)</span></span>;</span><br><span class="line">   <span class="comment">//插入</span></span><br><span class="line">   &amp;toRcd.Insert();</span><br><span class="line">   <span class="comment">//更新</span></span><br><span class="line">   &amp;toRcd.Update();</span><br><span class="line">End-Function;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="非客制化表一般利用CI写入数据"><a href="#非客制化表一般利用CI写入数据" class="headerlink" title="非客制化表一般利用CI写入数据"></a>非客制化表一般利用CI写入数据</h3><p>CI结构：</p><img src=https://gitee.com/gek7777/cdn.io/raw/master/image/1594864580127.png ><p>代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*利用CI写入职务数据*/</span></span><br><span class="line"><span class="function">Function <span class="title">inputJob</span><span class="params">(&amp;perRcd As Record)</span> Returns string</span></span><br><span class="line"><span class="function">   Local ApiObject &amp;oJobCollection, &amp;oJob</span>;</span><br><span class="line">   Local ApiObject &amp;oCompensationCollection, &amp;oCompensation;</span><br><span class="line">   </span><br><span class="line">   <span class="keyword">try</span></span><br><span class="line">      &amp;oSession = %Session;</span><br><span class="line">      rem ***** Set the PeopleSoft Session Error Message Mode *****;</span><br><span class="line">      rem ***** <span class="number">0</span> - None *****;</span><br><span class="line">      rem ***** <span class="number">1</span> - <span class="function">PSMessage Collection <span class="title">only</span> <span class="params">(<span class="keyword">default</span>)</span> *****</span>;</span><br><span class="line">      rem ***** <span class="number">2</span> - Message Box only *****;</span><br><span class="line">      rem ***** <span class="number">3</span> - Both collection and message box *****;</span><br><span class="line">      &amp;oSession.PSMessagesMode = <span class="number">1</span>;</span><br><span class="line">      </span><br><span class="line">      rem ***** Get the Component Interface *****;</span><br><span class="line"><span class="comment">//获取CI对象</span></span><br><span class="line">      &amp;oCJobDataEmpCi = &amp;oSession.GetCompIntfc(CompIntfc.C_JOB_DATA_EMP_CI);</span><br><span class="line"><span class="comment">//如果没有创建成功的话，提示，可能是CI不存在或者用户没有CI权限</span></span><br><span class="line">      If &amp;oCJobDataEmpCi = Null Then</span><br><span class="line">         &amp;rtnMsg = errorHandler();</span><br><span class="line">         <span class="function">REM  throw <span class="title">CreateException</span><span class="params">(<span class="number">0</span>, <span class="number">0</span>, <span class="string">&quot;GetCompIntfc failed&quot;</span>)</span></span>;</span><br><span class="line">      End-If;</span><br><span class="line">      rem ***** Set the Component Interface Mode *****;</span><br><span class="line">      &amp;oCJobDataEmpCi.InteractiveMode = False;</span><br><span class="line"><span class="comment">//CI具有获取历史记录功能</span></span><br><span class="line">      &amp;oCJobDataEmpCi.GetHistoryItems = True;</span><br><span class="line"><span class="comment">//CI具有编辑修改历史记录功能</span></span><br><span class="line">      &amp;oCJobDataEmpCi.EditHistoryItems = False;</span><br><span class="line">      </span><br><span class="line">      rem ***** Set Component Interface Get/Create Keys *****;</span><br><span class="line"><span class="comment">//确定CI主键；</span></span><br><span class="line">      &amp;oCJobDataEmpCi.EMPLID = &amp;perRcd.EMPLID.Value;</span><br><span class="line">      &amp;oCJobDataEmpCi.EMPL_RCD = <span class="number">0</span>;</span><br><span class="line">      </span><br><span class="line">      <span class="comment">//根据0层主键获取CI</span></span><br><span class="line">      rem If Not &amp;oCJobDataEmpCi.Get() Then</span><br><span class="line">      rem ***** No rows exist <span class="keyword">for</span> the specified keys.*****;</span><br><span class="line">      rem    &amp;rtnMsg = errorHandler();</span><br><span class="line">      <span class="function">rem    throw <span class="title">CreateException</span><span class="params">(<span class="number">0</span>, <span class="number">0</span>, <span class="string">&quot;Get failed&quot;</span>)</span></span>;</span><br><span class="line">      rem   End-If;</span><br><span class="line">      <span class="comment">//根据0层主键创建CI</span></span><br><span class="line">      rem ***** Execute Create ******;</span><br><span class="line">      If Not &amp;oCJobDataEmpCi.Create() Then;</span><br><span class="line">         rem ***** Unable to Create Component Interface <span class="keyword">for</span> the Add keys provided. *****;</span><br><span class="line">         &amp;rtnMsg = errorHandler();</span><br><span class="line">         <span class="function">rem  throw <span class="title">CreateException</span><span class="params">(<span class="number">0</span>, <span class="number">0</span>, <span class="string">&quot;Create failed&quot;</span>)</span></span>;</span><br><span class="line">      Else</span><br><span class="line">         <span class="comment">//根据0层CI获取到1层JOB表集合；</span></span><br><span class="line">         &amp;oJobCollection = &amp;oCJobDataEmpCi.JOB;</span><br><span class="line">         Local integer &amp;i164;</span><br><span class="line">         For &amp;i164 = <span class="number">1</span> To &amp;oJobCollection.Count;</span><br><span class="line"><span class="comment">//遍历拿到表对象</span></span><br><span class="line">            &amp;oJob = &amp;oJobCollection.Item(&amp;i164);</span><br><span class="line">            &amp;oJob.EFFDT_0 = &amp;perRcd.HIRE_DT.Value;</span><br><span class="line">            rem &amp;oJob.EFFSEQ = [*];</span><br><span class="line">            &amp;oJob.DEPTID = &amp;perRcd.DEPTID.Value;;</span><br><span class="line">            rem &amp;oJob.JOBCODE = [*];</span><br><span class="line">            &amp;oJob.SUPERVISOR_ID = &amp;perRcd.SUPERVISOR_ID.Value;</span><br><span class="line">        <span class="comment">/*   rem &amp;oJob.ACTION_0 = [*];</span></span><br><span class="line"><span class="comment">            rem &amp;oJob.ACTION_REASON = [*];</span></span><br><span class="line"><span class="comment">            rem &amp;oJob.LOCATION = [*];</span></span><br><span class="line"><span class="comment">            rem &amp;oJob.TAX_LOCATION_CD = [*];</span></span><br><span class="line"><span class="comment">            rem &amp;oJob.JOB_ENTRY_DT = [*];</span></span><br><span class="line"><span class="comment">            rem &amp;oJob.SHIFT = [*];</span></span><br><span class="line"><span class="comment">            rem &amp;oJob.REG_TEMP = [*];</span></span><br><span class="line"><span class="comment">            rem &amp;oJob.FULL_PART_TIME = [*]; */</span></span><br><span class="line">            &amp;oJob.COMPANY = &amp;perRcd.COMPANYID.Value;</span><br><span class="line">           <span class="comment">/* rem &amp;oJob.PAYGROUP = [*];</span></span><br><span class="line"><span class="comment">            rem &amp;oJob.BAS_GROUP_ID = [*];</span></span><br><span class="line"><span class="comment">            rem &amp;oJob.ELIG_CONFIG1 = [*];</span></span><br><span class="line"><span class="comment">            rem &amp;oJob.ELIG_CONFIG2 = [*];</span></span><br><span class="line"><span class="comment">            rem &amp;oJob.ELIG_CONFIG3 = [*];</span></span><br><span class="line"><span class="comment">            rem &amp;oJob.ELIG_CONFIG4 = [*];</span></span><br><span class="line"><span class="comment">            rem &amp;oJob.ELIG_CONFIG5 = [*];</span></span><br><span class="line"><span class="comment">            rem &amp;oJob.ELIG_CONFIG6 = [*];</span></span><br><span class="line"><span class="comment">            rem &amp;oJob.ELIG_CONFIG7 = [*];</span></span><br><span class="line"><span class="comment">            rem &amp;oJob.ELIG_CONFIG8 = [*];</span></span><br><span class="line"><span class="comment">            rem &amp;oJob.ELIG_CONFIG9 = [*];</span></span><br><span class="line"><span class="comment">            rem &amp;oJob.EMPL_TYPE = [*];</span></span><br><span class="line"><span class="comment">            rem &amp;oJob.HOLIDAY_SCHEDULE = [*];</span></span><br><span class="line"><span class="comment">            rem &amp;oJob.STD_HOURS_0 = [*];</span></span><br><span class="line"><span class="comment">            rem &amp;oJob.STD_HRS_FREQUENCY = [*];</span></span><br><span class="line"><span class="comment">            rem &amp;oJob.OFFICER_CD = [*]; */</span></span><br><span class="line">            &amp;oJob.EMPL_CLASS = &amp;perRcd.EMPL_CLASS.Value;</span><br><span class="line">         <span class="comment">/*   rem &amp;oJob.SAL_ADMIN_PLAN = [*];</span></span><br><span class="line"><span class="comment">            rem &amp;oJob.GRADE = [*];</span></span><br><span class="line"><span class="comment">            rem &amp;oJob.GRADE_ENTRY_DT = [*];</span></span><br><span class="line"><span class="comment">            rem &amp;oJob.STEP = [*];</span></span><br><span class="line"><span class="comment">            rem &amp;oJob.STEP_ENTRY_DT = [*];</span></span><br><span class="line"><span class="comment">            rem &amp;oJob.GL_PAY_TYPE = [*];</span></span><br><span class="line"><span class="comment">            rem &amp;oJob.EARNS_DIST_TYPE = [*];</span></span><br><span class="line"><span class="comment">            rem &amp;oJob.COMP_FREQUENCY = [*];</span></span><br><span class="line"><span class="comment">            rem &amp;oJob.ANNL_BENEF_BASE_RT = [*];</span></span><br><span class="line"><span class="comment">            rem &amp;oJob.SHIFT_RT = [*];</span></span><br><span class="line"><span class="comment">            rem &amp;oJob.SHIFT_FACTOR = [*];*/</span></span><br><span class="line">            &amp;oJob.PAY_SYSTEM_FLG = <span class="string">&quot;OT&quot;</span>;</span><br><span class="line">            &amp;oJob.BUSINESS_UNIT = &amp;perRcd.BUSINESS_UNIT.Value;</span><br><span class="line">            </span><br><span class="line">            &amp;oJob.C_STD_POSN_ID = &amp;perRcd.C_POSITION_ID.Value;</span><br><span class="line">            <span class="function">rem  <span class="title">WinMessage</span><span class="params">(&amp;perRcd.C_POSN_RANK_ID.Value)</span></span>;</span><br><span class="line">            rem  &amp;oJob.C_POSN_RANK_ID = &amp;perRcd.C_POSN_RANK_ID.Value;</span><br><span class="line">            &amp;oJob.C_LINE_MANAGEMENT = &amp;perRcd.C_LINE_MANAGEMENT.Value;</span><br><span class="line">            &amp;oJob.COUNTRY_0 = &amp;perRcd.COUNTRY.Value;</span><br><span class="line">            &amp;oJob.CITY = &amp;perRcd.CITY.Value;</span><br><span class="line">            &amp;oJob.C_HIR_MNG_ID = &amp;perRcd.C_HIR_MNG_ID.Value;</span><br><span class="line">            &amp;oJob.C_IS_EXIST_HC = &amp;perRcd.C_IS_EXIST_HC.Value;</span><br><span class="line">            rem   &amp;oJob.C_ACTION_SUBREASON = [*];</span><br><span class="line">            rem Local string &amp;cSalaryType;</span><br><span class="line">            <span class="function">rem  <span class="title">SQLExec</span><span class="params">(<span class="string">&quot;SELECT h.C_SALARY_TYPE FROM PS_C_HIRE_TBL h WHERE h.emplid = :1 &quot;</span>, &amp;perRcd.EMPLID.Value, &amp;cSalaryType)</span></span>;</span><br><span class="line">            rem   &amp;oJob.C_SALARY_TYPE = &amp;cSalaryType;</span><br><span class="line">            &amp;oJob.C_SALARY_TYPE = &amp;perRcd.C_SALARY_TYPE.Value;</span><br><span class="line">            <span class="comment">/*rem  WinMessage(&quot;ID:&quot; | &amp;perRcd.EMPLID.Value | &quot;---薪酬制&quot; | &amp;cSalaryType);*/</span></span><br><span class="line"></span><br><span class="line">     <span class="comment">//获取薪酬表内容</span></span><br><span class="line">            Local Rowset &amp;xcRs = CreateRowset(Record.C_HIRE_XC_TBL);</span><br><span class="line">            &amp;xcRs.Fill(<span class="string">&quot; WHERE emplid = :1&quot;</span>, &amp;perRcd.EMPLID.Value);</span><br><span class="line">            rem ***** Set COMPENSATION Collection Field Properties -- Parent: JOB Collection *****;</span><br><span class="line">   <span class="comment">//根据0层CI获取1层COMPENSATION表集合</span></span><br><span class="line">            &amp;oCompensationCollection = &amp;oJob.COMPENSATION;</span><br><span class="line">            Local integer &amp;i29;</span><br><span class="line">            For &amp;i29 = <span class="number">1</span> To &amp;xcRs.ActiveRowCount;</span><br><span class="line">               If &amp;i29 = <span class="number">1</span> Then</span><br><span class="line">                   <span class="comment">//第一个COMPENSATION表对象直接赋值；</span></span><br><span class="line">                  &amp;oCompensation = &amp;oCompensationCollection.Item(<span class="number">1</span>);</span><br><span class="line">               Else</span><br><span class="line">                   <span class="comment">//每进入一次循环则插入一个COMPENSATION表对象；</span></span><br><span class="line">                  &amp;oCompensation = &amp;oCompensationCollection.insertItem(<span class="number">1</span>);</span><br><span class="line">               End-If;</span><br><span class="line">               &amp;oCompensation.COMP_EFFSEQ = &amp;xcRs.GetRow(&amp;i29).C_HIRE_XC_TBL.COMP_EFFSEQ.Value;</span><br><span class="line">               &amp;oCompensation.COMP_RATECD = &amp;xcRs.GetRow(&amp;i29).C_HIRE_XC_TBL.COMP_RATECD.Value;</span><br><span class="line">               &amp;oCompensation.COMP_RATE_POINTS = &amp;xcRs.GetRow(&amp;i29).C_HIRE_XC_TBL.COMP_RATE_POINTS.Value;</span><br><span class="line">               &amp;oCompensation.COMPRATE_0 = &amp;xcRs.GetRow(&amp;i29).C_HIRE_XC_TBL.COMPRATE.Value;</span><br><span class="line">               &amp;oCompensation.COMP_PCT = &amp;xcRs.GetRow(&amp;i29).C_HIRE_XC_TBL.COMP_PCT.Value;</span><br><span class="line">               &amp;oCompensation.COMP_FREQUENCY_0 = &amp;xcRs.GetRow(&amp;i29).C_HIRE_XC_TBL.COMP_FREQUENCY.Value;</span><br><span class="line">               &amp;oCompensation.CURRENCY_CD_0 = &amp;xcRs.GetRow(&amp;i29).C_HIRE_XC_TBL.CURRENCY_CD.Value;</span><br><span class="line">            End-For;</span><br><span class="line">         End-For;</span><br><span class="line">         </span><br><span class="line">         rem ***** Execute Save *****;</span><br><span class="line">         If Not &amp;oCJobDataEmpCi.Save() Then;</span><br><span class="line">            &amp;rtnMsg = errorHandler();</span><br><span class="line">            <span class="function">rem  throw <span class="title">CreateException</span><span class="params">(<span class="number">0</span>, <span class="number">0</span>, <span class="string">&quot;Save failed&quot;</span>)</span></span>;</span><br><span class="line">         End-If;</span><br><span class="line">      End-If;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">catch</span> Exception &amp;ex</span><br><span class="line">      &amp;rtnMsg = &amp;ex.ToString();    </span><br><span class="line">   end-<span class="keyword">try</span>;</span><br><span class="line"></span><br><span class="line">   Return &amp;rtnMsg;</span><br><span class="line">   </span><br><span class="line">End-Function;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PeopleSoft </tag>
            
            <tag> PeopleCode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Oracle-in函数和exist函数对比</title>
      <link href="2020/08/17/Oracle-in%E5%87%BD%E6%95%B0%E5%92%8Cexist%E5%87%BD%E6%95%B0%E5%AF%B9%E6%AF%94/"/>
      <url>2020/08/17/Oracle-in%E5%87%BD%E6%95%B0%E5%92%8Cexist%E5%87%BD%E6%95%B0%E5%AF%B9%E6%AF%94/</url>
      
        <content type="html"><![CDATA[<h3 id="SQL中IN函数的优化语句"><a href="#SQL中IN函数的优化语句" class="headerlink" title="SQL中IN函数的优化语句"></a>SQL中IN函数的优化语句</h3><p><strong>优化前：</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> *</span><br><span class="line">  <span class="keyword">FROM</span> PS_C_PS_QRY_RST S</span><br><span class="line"> <span class="keyword">WHERE</span> <span class="number">1</span> = <span class="number">1</span></span><br><span class="line">   <span class="keyword">AND</span> S.GP_PAYGROUP <span class="keyword">IN</span> (<span class="keyword">SELECT</span> C1.GP_PAYGROUP</span><br><span class="line">                           <span class="keyword">FROM</span> PS_C_PAYGROUP_TBL C1</span><br><span class="line">                          <span class="keyword">WHERE</span> C1.OPRID = <span class="string">&#x27;SIE_ZL&#x27;</span>)</span><br></pre></td></tr></table></figure><p><strong>优化后：</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> *</span><br><span class="line">  <span class="keyword">FROM</span> PS_C_PS_QRY_RST S</span><br><span class="line"> <span class="keyword">WHERE</span> <span class="number">1</span> = <span class="number">1</span></span><br><span class="line">   <span class="keyword">AND</span> <span class="keyword">EXISTS</span></span><br><span class="line"> (<span class="keyword">SELECT</span> <span class="string">&#x27;X&#x27;</span></span><br><span class="line">          <span class="keyword">FROM</span> PS_C_PAYGROUP_TBL C1</span><br><span class="line">         <span class="keyword">WHERE</span>  C1.OPRID = <span class="string">&#x27;SIE_ZL&#x27;</span></span><br><span class="line">           <span class="keyword">AND</span> C1.GP_PAYGROUP = S.GP_PAYGROUP)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>优化分析：</strong>利用EXIST的优化操作，会自动根据主表和关联表的数据量，进行优化处理，例如表二数据量大，则将二表作为基表，如果表一数据量大，则将一表作为基表。利用IN函数的话，只会把T表一作为基表。</p>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PeopleSoft-Grid设置</title>
      <link href="2020/08/17/PeopleSoft-Grid%E8%AE%BE%E7%BD%AE/"/>
      <url>2020/08/17/PeopleSoft-Grid%E8%AE%BE%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h2 id="设置grid列标题"><a href="#设置grid列标题" class="headerlink" title="设置grid列标题"></a>设置grid列标题</h2><p>操作如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&amp;Grid = getGrid(page.c_test_page,<span class="string">&quot;c_test_grid&quot;</span>);</span><br><span class="line">&amp;Grid.getColumn(<span class="string">&quot;test&quot;</span>).label = <span class="string">&quot;测试&quot;</span>;</span><br></pre></td></tr></table></figure><h2 id="设置grid每行，每列只读"><a href="#设置grid每行，每列只读" class="headerlink" title="设置grid每行，每列只读"></a>设置grid每行，每列只读</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">local rowset &amp;rs = getRowset(scroll.C_TEST_TBL);</span><br><span class="line">FOR &amp;i = <span class="number">1</span> TO &amp;rs.activeRowCount</span><br><span class="line">    FOR &amp;l = <span class="number">1</span> TO &amp;rs(&amp;i).getRecord(Record.C_TEST_TBL).fieldCount;</span><br><span class="line">    &amp;rs(&amp;i).getRecord(Record.C_TEST_TBL).getField(&amp;l).enabled = <span class="keyword">false</span>;</span><br><span class="line">end-<span class="keyword">for</span>; </span><br><span class="line">end-<span class="keyword">for</span>;</span><br></pre></td></tr></table></figure><h2 id="链接字段赋值"><a href="#链接字段赋值" class="headerlink" title="链接字段赋值"></a>链接字段赋值</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*将LINK的字段赋值为每行的员工ID*/</span></span><br><span class="line"><span class="function">IF <span class="title">ALL</span><span class="params">(C_TEST_TBL.C_TEST_EMPLID)</span> THEN</span></span><br><span class="line"><span class="function">    <span class="comment">/*如果在表上写getrow()的话，直接获取相对位置*/</span></span></span><br><span class="line"><span class="function"><span class="title">GETROW</span><span class="params">()</span>.C_TEST_TBL.C_TEST_LINK.LABEL </span>= GETROW().C_TEST_TBL.C_TEST_EMPLID.VALUE;</span><br><span class="line"><span class="comment">/*如果不写，可能获取0层上的表，可能会取错位置*/</span></span><br><span class="line">C_TEST_TBL.C_TEST_LINK.LABEL = C_TEST_TBL.C_TEST_EMPLID.VALUE;</span><br><span class="line">END-IF;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PeopleSoft </tag>
            
            <tag> PeopleCode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Oracle-结果拼接union</title>
      <link href="2020/08/17/Oracle-%E7%BB%93%E6%9E%9C%E6%8B%BC%E6%8E%A5union/"/>
      <url>2020/08/17/Oracle-%E7%BB%93%E6%9E%9C%E6%8B%BC%E6%8E%A5union/</url>
      
        <content type="html"><![CDATA[<p><strong>union -去重</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="string">&#x27;a&#x27;</span> <span class="keyword">from</span> dual</span><br><span class="line"><span class="keyword">UNION</span> </span><br><span class="line"><span class="keyword">SELECT</span> <span class="string">&#x27;a&#x27;</span> <span class="keyword">from</span> dual</span><br><span class="line"><span class="comment">-- 结果：a</span></span><br></pre></td></tr></table></figure><p><strong>union all  - 不去重</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="string">&#x27;a&#x27;</span> <span class="keyword">from</span> dual</span><br><span class="line"><span class="keyword">UNION</span> <span class="keyword">ALL</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="string">&#x27;a&#x27;</span> <span class="keyword">from</span> dual</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">结果：</span></span><br><span class="line"><span class="comment">a</span></span><br><span class="line"><span class="comment">a</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Oracle-常用的条件语句</title>
      <link href="2020/08/17/Oracle-%E5%B8%B8%E7%94%A8%E7%9A%84%E6%9D%A1%E4%BB%B6%E8%AF%AD%E5%8F%A5/"/>
      <url>2020/08/17/Oracle-%E5%B8%B8%E7%94%A8%E7%9A%84%E6%9D%A1%E4%BB%B6%E8%AF%AD%E5%8F%A5/</url>
      
        <content type="html"><![CDATA[<h3 id="Oracle-常用的条件语句"><a href="#Oracle-常用的条件语句" class="headerlink" title="Oracle-常用的条件语句"></a>Oracle-常用的条件语句</h3><ul><li><strong>Decode()</strong></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">Decode</span>(&amp;a, <span class="string">&quot;0&quot;</span>,<span class="string">&quot;A&quot;</span>,<span class="string">&quot;1&quot;</span>,<span class="string">&quot;B&quot;</span>,<span class="string">&quot;C&quot;</span>) <span class="keyword">from</span> dual;</span><br><span class="line"><span class="comment">--对&amp;a进行判断，如果&amp;a等于0，即返回A，如果&amp;a等于1，返回B，其他情况返回C；</span></span><br></pre></td></tr></table></figure><ul><li><strong>case</strong></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">CASE</span></span><br><span class="line">         <span class="keyword">WHEN</span> &amp;A = <span class="number">1</span> <span class="keyword">THEN</span></span><br><span class="line">          <span class="string">&#x27;A&#x27;</span></span><br><span class="line">         <span class="keyword">WHEN</span> &amp;A = <span class="number">2</span> <span class="keyword">THEN</span></span><br><span class="line">          <span class="string">&#x27;B&#x27;</span></span><br><span class="line">         <span class="keyword">ELSE</span></span><br><span class="line">          <span class="string">&#x27;C&#x27;</span></span><br><span class="line">       <span class="keyword">END</span> <span class="keyword">CASE</span></span><br><span class="line">  <span class="keyword">FROM</span> DUAL</span><br><span class="line"><span class="comment">-- 对&amp;A进行判断，如果&amp;A等于1，则返回A,如果&amp;A等于2，返回B，其他情况返回C；</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PeopleSoft-数组创建及常用方法</title>
      <link href="2020/08/17/PeopleSoft-%E6%95%B0%E7%BB%84%E5%88%9B%E5%BB%BA%E5%8F%8A%E5%B8%B8%E7%94%A8%E6%96%B9%E6%B3%95/"/>
      <url>2020/08/17/PeopleSoft-%E6%95%B0%E7%BB%84%E5%88%9B%E5%BB%BA%E5%8F%8A%E5%B8%B8%E7%94%A8%E6%96%B9%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<p>关于一、二维数据的创建、初始化等方法….</p><a id="more"></a><h3 id="一维数组"><a href="#一维数组" class="headerlink" title="一维数组"></a>一维数组</h3><h4 id="空数组"><a href="#空数组" class="headerlink" title="空数组"></a>空数组</h4><ul><li><strong>any类型</strong></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">local array Of any  &amp;arr1 = createArray();</span><br><span class="line">local array   &amp;arr1 = createArray();   <span class="comment">//不指定类型即为任意类型；</span></span><br><span class="line"><span class="comment">// 初始化一个不含元素的任意类型空数组；数组下标从1开始，数组的长度为 0；</span></span><br></pre></td></tr></table></figure><ul><li><strong>string类型</strong></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">local array Of string &amp;arr1 = CreateArrayRept(<span class="string">&quot;&quot;</span>,<span class="number">0</span>);</span><br><span class="line"><span class="comment">// 初始化一个不含元素的string类型的数组；数组下标从1开始，长度为0；</span></span><br><span class="line"></span><br><span class="line">local array  Of string &amp;arr1 = CreateArrayRept(<span class="string">&quot;zc&quot;</span>,<span class="number">3</span>);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">     &quot;zc&quot;   --  表示需要初始化时插入的string元素；</span></span><br><span class="line"><span class="comment">     3    --表示创建数组的长度；</span></span><br><span class="line"><span class="comment">     创建了一个string类型的数组，同时插入三个元素，每个元素都是&quot;zc&quot;</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><ul><li><strong>number类型</strong></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">local array of number &amp;arr1 = CreateArrayRept(<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line"><span class="comment">// 初始化一个不含元素的number类型的数组；数组下标从1开始，长度为0；</span></span><br><span class="line"></span><br><span class="line">local array of number &amp;arr1 = CreateArrayRept(<span class="number">2</span>,<span class="number">3</span>);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">     2   --  表示需要初始化时插入的number元素；</span></span><br><span class="line"><span class="comment">     3    --表示创建数组的长度；</span></span><br><span class="line"><span class="comment">     创建了一个number类型的数组，同时插入三个元素，每个元素都是2</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><ul><li><strong>record类型</strong></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Local Array of Record &amp;AR = createAyyayRpt(&amp;rec, <span class="number">0</span>);</span><br><span class="line"><span class="comment">// 初始化一个不含元素的record类型的数组；数组下标从1开始，长度为0；</span></span><br></pre></td></tr></table></figure><h4 id="非空数组"><a href="#非空数组" class="headerlink" title="非空数组"></a>非空数组</h4><ul><li>string类型</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">local array of string &amp;arr1 = CreateArray(<span class="string">&quot;X&quot;</span>,<span class="number">123</span>);</span><br><span class="line"><span class="comment">// 初始化时直接插入两个string元素；数组的第一个元素下标是1；数组长度为2；</span></span><br></pre></td></tr></table></figure><ul><li>number类型</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">local array of number &amp;arr1 = CreateArray(<span class="number">123</span>,<span class="number">234</span>,<span class="number">345</span>);</span><br><span class="line"><span class="comment">// 初始化时直接插入三个number类型元素；数组的第一个元素下标是1；数组长度为3；</span></span><br></pre></td></tr></table></figure><ul><li>record类型</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">local array of record &amp;arr1 = CreateArray(&amp;rec1,&amp;rec2,&amp;rec3);</span><br><span class="line"><span class="comment">// 初始化时直接插入三个record元素；数组的第一个元素下标是1；数组长度为3；</span></span><br></pre></td></tr></table></figure><h3 id="二维数组"><a href="#二维数组" class="headerlink" title="二维数组"></a>二维数组</h3><h4 id="空数组-1"><a href="#空数组-1" class="headerlink" title="空数组"></a>空数组</h4><ul><li><strong>any类型</strong> </li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">local array of array of any &amp;arr2 = CreateArray(CreateArray()); </span><br><span class="line">&amp;arr2.shift();  </span><br><span class="line"><span class="comment">//创建一个二维的any类型的数组；shift()函数是删掉数组；</span></span><br></pre></td></tr></table></figure><ul><li><strong>string类型</strong></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">local array of array of string &amp;arr2 = CreateArrayRept(CreateArrayRept(<span class="string">&quot;&quot;</span>, <span class="number">0</span>), <span class="number">0</span>); </span><br><span class="line"><span class="comment">//创建一个二维的string类型的数组；</span></span><br></pre></td></tr></table></figure><ul><li><strong>number类型</strong></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">local array of array of string &amp;arr2 = CreateArrayRept(CreateArrayRept(<span class="number">0</span>, <span class="number">0</span>), <span class="number">0</span>); </span><br><span class="line"><span class="comment">//创建一个二维的number类型的数组；</span></span><br></pre></td></tr></table></figure><h4 id="非空数组-1"><a href="#非空数组-1" class="headerlink" title="非空数组"></a>非空数组</h4><ul><li><strong>any类型</strong></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">local array of array of any &amp;arr2 = CreateArray(CreateArray()); </span><br><span class="line"><span class="comment">//创建一个二维的any类型的非空数组；数组有一个null数组元素，但是无法获取；数组长度为1</span></span><br></pre></td></tr></table></figure><ul><li><strong>string类型</strong></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">local array of array of string &amp;arr2 = CreateArray(CreateArray(<span class="string">&quot;&quot;</span>,<span class="number">0</span>)); </span><br><span class="line"><span class="comment">//创建一个二维的string类型的数组；数组有一个null数组元素，但是无法获取；数组长度为1</span></span><br></pre></td></tr></table></figure><ul><li><strong>number类型</strong></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">local array of array of number &amp;arr2 = CreateArray(CreateArray(<span class="number">0</span>,<span class="number">0</span>)); </span><br><span class="line"><span class="comment">//创建一个二维的number类型额数组，数组有一个元素，</span></span><br></pre></td></tr></table></figure><h3 id="数组常用函数"><a href="#数组常用函数" class="headerlink" title="数组常用函数"></a>数组常用函数</h3><ul><li><strong>CreateArrayRept</strong></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&amp;arr1 = CreateArrayRept(<span class="number">100</span>, <span class="number">3</span>);</span><br><span class="line"><span class="comment">//创建一个重复的数组,三个元素都是100；</span></span><br></pre></td></tr></table></figure><ul><li><strong>CreateArrayAny()</strong></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">local Array of Any &amp;ArrayAny = CreateArrayAny(<span class="number">1</span>, <span class="number">2</span>, <span class="string">&quot;hi&quot;</span>, <span class="string">&quot;there&quot;</span>);</span><br><span class="line"><span class="comment">//创建一个any类型的一维数组；</span></span><br></pre></td></tr></table></figure><ul><li><strong>push()</strong></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&amp;arr = createArray(<span class="string">&quot;a&quot;</span>,<span class="string">&quot;b&quot;</span>,<span class="string">&quot;c&quot;</span>);</span><br><span class="line">&amp;arr.push(<span class="string">&quot;z&quot;</span>);</span><br><span class="line"><span class="comment">//将“z”压入&amp;arr数组中，此时&amp;arr包含：“a”，“b”，“c”，“z”。</span></span><br></pre></td></tr></table></figure><ul><li><strong>find()</strong></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//这个方法仅适用于一维和二维数组，三维及以上会报错；</span></span><br><span class="line">&amp;arr = createArray(<span class="string">&quot;a&quot;</span>,<span class="string">&quot;b&quot;</span>,<span class="string">&quot;c&quot;</span>);</span><br><span class="line"><span class="comment">/*一维*/</span></span><br><span class="line"><span class="comment">//根据元素名称获取下标；</span></span><br><span class="line">local number &amp;indx = &amp;arr.find(<span class="string">&quot;a&quot;</span>);  --&amp;indx = <span class="number">1</span>；</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li><strong>get()</strong></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&amp;arr = createArray(<span class="string">&quot;a&quot;</span>,<span class="string">&quot;b&quot;</span>,<span class="string">&quot;c&quot;</span>);</span><br><span class="line"><span class="comment">/*一维*/</span></span><br><span class="line"><span class="comment">//获取下标获取元素名称；</span></span><br><span class="line">local string &amp;itname = &amp;arr.get(<span class="number">1</span>);  --&amp;itname = <span class="string">&quot;a&quot;</span>；</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li><strong>join()</strong></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//此方法可以将一个数组的所有元素输出一个string类型的字符串；</span></span><br><span class="line">Local array of array of number &amp;AAN;</span><br><span class="line"></span><br><span class="line">&amp;AAN = CreateArray(CreateArray(<span class="number">1</span>, <span class="number">2</span>), CreateArray(<span class="number">3</span>, <span class="number">4</span>), <span class="number">5</span>);</span><br><span class="line">&amp;STR = &amp;AAN.Join(<span class="string">&quot;, &quot;</span>);</span><br><span class="line"><span class="comment">//result ：((1, 2), (3, 4), 5)；逗号可以替换为需要的符号；</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li><strong>shift()</strong></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&amp;arr = createArray(<span class="string">&quot;a&quot;</span>,<span class="string">&quot;b&quot;</span>,<span class="string">&quot;c&quot;</span>);</span><br><span class="line">local string &amp;str = &amp;arr.shift();</span><br><span class="line"><span class="comment">//删除并且获取数组最底层的元素；此时&amp;str的值为 a，而且&amp;arr数组中只剩下两个元素，一个是“b”，“c”。</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li><strong>unshift()</strong></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//插入元素，单个或者多个；</span></span><br><span class="line">&amp;A = CreateArray(<span class="string">&quot;a&quot;</span>, <span class="string">&quot;B&quot;</span>, <span class="string">&quot;c&quot;</span>);</span><br><span class="line">&amp;A.Unshift(<span class="string">&quot;x&quot;</span>, <span class="string">&quot;Y&quot;</span>);</span><br><span class="line"><span class="comment">//结果：x Y a B c</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li><strong>pop()</strong></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&amp;arr = createArray(<span class="string">&quot;a&quot;</span>,<span class="string">&quot;b&quot;</span>,<span class="string">&quot;c&quot;</span>);</span><br><span class="line">local string &amp;str = &amp;arr.pop();</span><br><span class="line"><span class="comment">//删除并且获取数组最顶层的元素；此时&amp;str的值为 c，而且&amp;arr数组中只剩下两个元素，一个是“a”，“b”。</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li><strong>clone()</strong></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Local Array of Array of String &amp;AAN, &amp;AAN2;</span><br><span class="line"></span><br><span class="line">&amp;AAN = CreateArray(CreateArray(<span class="string">&quot;A&quot;</span>, <span class="string">&quot;B&quot;</span>), CreateArray(<span class="string">&quot;C&quot;</span>, <span class="string">&quot;D&quot;</span>), <span class="string">&quot;E&quot;</span>);</span><br><span class="line">&amp;AAN2 = &amp;AAN.Clone();</span><br><span class="line">&amp;AAN2[<span class="number">1</span>][<span class="number">1</span>] = <span class="string">&quot;Z&quot;</span>;</span><br><span class="line"><span class="comment">//方法为克隆方法，&amp;AAN2不仅获取了&amp;AAN数组所有的内容，而且，会新建一个引用，如果更改&amp;AAN2的内容，&amp;AAN的内容不会发生变化；</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li><strong>next()</strong></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Local array of string &amp;arr1 = CreateArray(<span class="string">&quot;a&quot;</span>, <span class="string">&quot;s&quot;</span>, <span class="string">&quot;d&quot;</span>, <span class="string">&quot;f&quot;</span>);</span><br><span class="line">&amp;index = <span class="number">0</span>;</span><br><span class="line">While &amp;arr1.Next(&amp;index)</span><br><span class="line">   MessageBox(<span class="number">0</span>, <span class="string">&quot;&quot;</span>, <span class="number">0</span>, <span class="number">0</span>, &amp;arr1 [&amp;index]);</span><br><span class="line">End-While;</span><br><span class="line"><span class="comment">//此方法会先自增参数，然后获取对应元素；使用该方法可以循环获取数组元素；</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li><strong>replace</strong></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">Local array of string &amp;AS;</span><br><span class="line">&amp;AS = CreateArray(<span class="string">&quot;AA&quot;</span>, <span class="string">&quot;BB&quot;</span>, <span class="string">&quot;CC&quot;</span>);</span><br><span class="line">&amp;AS.Replace(<span class="number">1</span>, <span class="number">1</span>, <span class="string">&quot;ZZ&quot;</span>, <span class="string">&quot;YY&quot;</span>);</span><br><span class="line"><span class="comment">//结果: ZZ YY BB CC</span></span><br><span class="line">&amp;AS.Replace(<span class="number">2</span>, <span class="number">2</span>, <span class="string">&quot;MM&quot;</span>);</span><br><span class="line"><span class="comment">//结果: ZZ MM CC</span></span><br><span class="line">&amp;AS.Replace( - <span class="number">2</span>, - <span class="number">1</span>, <span class="string">&quot;OO&quot;</span>);</span><br><span class="line"><span class="comment">//结果: ZZ OO CC</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">第一个数字为需要替换的开始下标；第一个数字可以为负数，即反向开始；</span></span><br><span class="line"><span class="comment">第二个数字为需要替换的数组个数；</span></span><br><span class="line"><span class="comment">第三个参数开始为可选参数，如果为无，表示替换为空元素；</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li><strong>Reverse()</strong></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&amp;AN = CreateArray(CreateArray(<span class="number">1</span>, <span class="number">2</span>), CreateArray(<span class="number">3</span>, <span class="number">4</span>), CreateArray(<span class="number">5</span>, <span class="number">6</span>)).reverse();</span><br><span class="line"><span class="comment">//结果： ((5,6), (3,4), (1,2)； 仅反转该层级数组的顺序，不会反转子数组的顺序；</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li><strong>set()</strong></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">.<span class="comment">//根据下标获取到对应元素赋值</span></span><br><span class="line">&amp;MyArray[<span class="number">8</span>] = &amp;MyValue;</span><br><span class="line">&amp;MyArray.Set(<span class="number">8</span>) = &amp;MyValue;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li><strong>sort()</strong></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&amp;A = CreateArray(<span class="string">&quot;John&quot;</span>, <span class="string">&quot;Frank&quot;</span>, <span class="string">&quot;Harry&quot;</span>);</span><br><span class="line">&amp;A.Sort(<span class="string">&quot;A&quot;</span>);   <span class="comment">//&amp;A.Sort(&quot;A&quot;) ;  按字符集排序， A为升序，D为降序；</span></span><br><span class="line"><span class="comment">//结果：“ Frank”，“ Harry”，“ John”</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li><strong>Subarray()</strong></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//创建子数组，仅支持一维数组，如果是多维数组，则使用clone()方法；</span></span><br><span class="line">&amp;A = CreateArray(<span class="string">&quot;John&quot;</span>, <span class="string">&quot;Frank&quot;</span>, <span class="string">&quot;Harry&quot;</span>);</span><br><span class="line">&amp;AAN = &amp;A.Subarray(<span class="number">2</span>, <span class="number">2</span>);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">参数1：数组开始下标；</span></span><br><span class="line"><span class="comment">参数2：数组截取长度；</span></span><br><span class="line"><span class="comment">注意：不支持反向截取；</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li><strong>substitute()</strong></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//替换元素</span></span><br><span class="line">&amp;A = CreateArray();</span><br><span class="line">&amp;A[<span class="number">1</span>] = <span class="string">&quot;John&quot;</span>;</span><br><span class="line">&amp;A[<span class="number">2</span>] = <span class="string">&quot;Jane&quot;</span>;</span><br><span class="line">&amp;A[<span class="number">3</span>] = <span class="string">&quot;Henry&quot;</span>;</span><br><span class="line">&amp;A.Substitute(<span class="string">&quot;Henry&quot;</span>, <span class="string">&quot;Hamilton&quot;</span>);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">参数1：需要被替换的元素；</span></span><br><span class="line"><span class="comment">参数2：替换后的元素；</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PeopleSoft </tag>
            
            <tag> PeopleCode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaWeb-05</title>
      <link href="2020/07/05/JavaWeb-05/"/>
      <url>2020/07/05/JavaWeb-05/</url>
      
        <content type="html"><![CDATA[<h2 id="EL表达式"><a href="#EL表达式" class="headerlink" title="EL表达式"></a>EL表达式</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">EL： Expression Language</span><br><span class="line">EL表达式是用来代替JSP页面中的JSP脚本</span><br><span class="line"></span><br><span class="line">因为我们的原则是在JSP页面中尽量少的，甚至不实用Java代码</span><br><span class="line"></span><br><span class="line">EL表达式的基本语法规范：</span><br><span class="line">    $&#123;标识符&#125;</span><br><span class="line">1.获取数据</span><br><span class="line">    可以从当前JSP域对象中，找出了对应的属性，获取属性值 </span><br><span class="line">    </span><br><span class="line">    可以获取域对象中数据，同时获取Java对象数据</span><br><span class="line">        对照代码 01EL.jsp</span><br><span class="line">    </span><br><span class="line">    获取集合中的数据</span><br><span class="line">        对照代码 02EL.jsp</span><br><span class="line">        </span><br><span class="line">2.EL表达式使用算术运算符，关系运算符，逻辑运算符和三目运算符</span><br><span class="line">        对照代码 03EL.jsp   </span><br><span class="line">        </span><br><span class="line">3.内置对象</span><br><span class="line">    EL表示可以使用内置(隐式)对象</span><br></pre></td></tr></table></figure><a id="more"></a><table><thead><tr><th>EL表达式</th><th>对照JSP</th></tr></thead><tbody><tr><td>pageContext</td><td>JSP页面中的pageContext对象，可以获取其他8大对象</td></tr><tr><td>pageScope</td><td>代表page域中保存的数据，Map对象</td></tr><tr><td>requestScope</td><td>代表request域中保存的数据，Map对象</td></tr><tr><td>sessionScope</td><td>代表session域中保存的数据，Map对象</td></tr><tr><td>applicationScope</td><td>代表application域中保存的数据，Map对象</td></tr><tr><td>param</td><td>表示保存所有页面请求参数的Map对象</td></tr><tr><td>paramValue</td><td>一般对照页面多选操作的Map对象，得到的其实是一个String[]数组</td></tr><tr><td>header</td><td>对应所有的Http请求头数据</td></tr><tr><td>headerValues</td><td>对应所有Http请求头数据，保存的是String[]数组</td></tr><tr><td>cookie</td><td>对应cookie的Map对象</td></tr><tr><td>initParam</td><td>保存所有WEB应用的初始化参数Map对象</td></tr></tbody></table><h2 id="JSP标签"><a href="#JSP标签" class="headerlink" title="JSP标签"></a>JSP标签</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">1.内置动作标签(了解)</span><br><span class="line"></span><br><span class="line">2.JSP标签</span><br><span class="line">    JSP Standard Tag Library JSP标准标签库</span><br><span class="line">    </span><br><span class="line">    a.主要包含</span><br><span class="line">        核心标签 C:</span><br><span class="line">        JSTL函数 fn:</span><br><span class="line">        格式化标签 fmt:</span><br><span class="line">        数据库标签</span><br><span class="line">        XML标签</span><br><span class="line">        </span><br><span class="line">    b.使用过程</span><br><span class="line">        在JSP文件中导入相关的标签库</span><br><span class="line">        <span class="tag">&lt;<span class="name">%@taglib</span> <span class="attr">uri</span>=<span class="string">&quot;http://java.sun.com/jsp/jstl/core&quot;</span> <span class="attr">prefix</span>=<span class="string">&quot;c&quot;</span>%&gt;</span></span><br><span class="line"></span><br><span class="line">    c.核心标签库</span><br><span class="line">        c:set c:out</span><br><span class="line">        </span><br><span class="line">        判断和循环</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaWeb </tag>
            
            <tag> Web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaWeb-04</title>
      <link href="2020/07/05/JavaWeb-04/"/>
      <url>2020/07/05/JavaWeb-04/</url>
      
        <content type="html"><![CDATA[<h2 id="什么是JSP？"><a href="#什么是JSP？" class="headerlink" title="什么是JSP？"></a>什么是JSP？</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">Java Server Pages,它和servlet技术一样，都是Java中用于开发动态WEB资源的技术</span><br><span class="line">JSP相当于Java + HTML</span><br><span class="line">JSP最大的特点就是：有种写HTML代码的感觉，HTML只能提供静态的WEB资源</span><br><span class="line">JSP技术允许在HTML页面中嵌套Java代码</span><br><span class="line">对比Servlet有一个特别好的地方，可以对前端页面进行排版</span><br><span class="line"></span><br><span class="line">JSP的执行过程：</span><br><span class="line">    JSP本质上就是一个Servlet程序</span><br><span class="line">    1.第一次访问JSP文件时，会在Tomcat的work目录下生成一个对应的java程序</span><br><span class="line">        例如：01hello.jsp &#x3D;&#x3D;&gt; _01hello_jsp.java</span><br><span class="line">    2.根据这个java程序生成对应的class字节码文件</span><br><span class="line">    3.Tomcat服务器会加载这个class字节码文件，执行里面的代码，执行的本质其实是一个Servlet程序</span><br><span class="line">    4.如果是第二次访问这个JSP文件，不会重新生存对应的java程序，以及class文件，直接执行对应的class文件</span><br><span class="line">    </span><br><span class="line">    这里Tomcat服务器会根据JSP文件和class文件的修改时间，来判断是否需要重新生成Java和编译之后的class文件</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="JSP语法规则"><a href="#JSP语法规则" class="headerlink" title="JSP语法规则"></a>JSP语法规则</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">1.JSP脚本</span><br><span class="line">    <span class="tag">&lt;<span class="name">%</span></span></span><br><span class="line"><span class="tag">        只能是<span class="attr">Java</span>代码</span></span><br><span class="line"><span class="tag">    %&gt;</span></span><br><span class="line">    在JSP脚本中只能出现Java代码，不能出现其他的任何东西，例如：html代码</span><br><span class="line">    在JSP脚本中的代码会被JSP编译器原封不动的放到Servlet程序中的_jspService方法中   </span><br><span class="line"></span><br><span class="line">2.JSP表达式</span><br><span class="line">     <span class="tag">&lt;<span class="name">%=Java的表达式%</span>&gt;</span></span><br><span class="line">     例如：</span><br><span class="line">        <span class="tag">&lt;<span class="name">%=</span> <span class="attr">new</span> <span class="attr">Date</span>()%&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">%=name%</span>&gt;</span></span><br><span class="line">        Java的表达式就是一条Java语句，但是在JSP表达式语法中不允许出现分号</span><br><span class="line">        </span><br><span class="line">3.JSP声明</span><br><span class="line">    <span class="tag">&lt;<span class="name">%!</span></span></span><br><span class="line"><span class="tag">        定义变量，方法  </span></span><br><span class="line"><span class="tag">    %&gt;</span></span><br><span class="line">        JSP声明的Java代码不会被编译到_jspservice方法中，而是定义在这个JSP文件对应的class类中，JSP声明中的变量是成员变量，方法可以认为是成员方法</span><br><span class="line">        </span><br><span class="line">4.JSP注释</span><br><span class="line">    <span class="tag">&lt;<span class="name">%--</span> 注释内容<span class="attr">--</span>%&gt;</span> 唯一推荐格式</span><br></pre></td></tr></table></figure><h2 id="JSP三大指令"><a href="#JSP三大指令" class="headerlink" title="JSP三大指令"></a>JSP三大指令</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line">JSP指令不是直接生成可视化文件，而是告诉JSP引擎如何处理JSP页面中的其他部分</span><br><span class="line"></span><br><span class="line">JSP指令的基本语法：</span><br><span class="line">    <span class="tag">&lt;<span class="name">%@</span> 指令名 属性名=<span class="string">&quot;值&quot;</span>%&gt;</span></span><br><span class="line"></span><br><span class="line">1.include指令</span><br><span class="line">    include指令用于引入其他JSP页面，如果使用include指令引入其他的JSP页面，JSP引擎会把这两个JSP文件翻译成一个servlet，</span><br><span class="line">    所以include指令引入称之为静态引入</span><br><span class="line">    </span><br><span class="line">    格式：</span><br><span class="line">        <span class="tag">&lt;<span class="name">%@include</span> <span class="attr">file</span>=<span class="string">&quot;relativeURL&quot;</span>%&gt;</span></span><br><span class="line">        这里要求file属性使用URL用来引入其他的JSP文件，这里URL必须是一个相对路径，如果使用&quot;/&quot;，表示当前WEB项目的根目录</span><br><span class="line">        </span><br><span class="line">    【注意】</span><br><span class="line">        1.被引入的文件必须符合JSP语法</span><br><span class="line">        2.被引入的文件可以使用HTML，JSP这些文件格式，JSP引擎也会按照JSP语法规则处理</span><br><span class="line">            小规范：</span><br><span class="line">                如果是静态的引入文件，通常会使用.jspf(JSP Fragments)作为文件后缀名</span><br><span class="line">2.Page指令</span><br><span class="line">    用于定义JSP页面的各种属性，无论它在哪一个位置出现，都作用于整个JSP页面，书写要求：page指令最好放在页面的开始</span><br><span class="line">    </span><br><span class="line">    page指令的常用语法：</span><br><span class="line">        <span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span></span></span><br><span class="line"><span class="tag">            [<span class="attr">language</span> = <span class="string">&quot;java&quot;</span>],</span></span><br><span class="line"><span class="tag">            [<span class="attr">import</span> = <span class="string">&quot;pagename.* 或者class&quot;</span>],</span></span><br><span class="line"><span class="tag">            [<span class="attr">session</span> = <span class="string">&quot;true&quot;</span>],</span></span><br><span class="line"><span class="tag">            [<span class="attr">buffer</span> = <span class="string">&quot;nune | 8kB | sizekB&quot;</span>],</span></span><br><span class="line"><span class="tag">            [<span class="attr">autoFlush</span> = <span class="string">&quot;true | false&quot;</span>],</span></span><br><span class="line"><span class="tag">            [<span class="attr">errorPage</span> = <span class="string">&quot;relativeURL&quot;</span>],</span></span><br><span class="line"><span class="tag">            [<span class="attr">isErrorPage</span> = <span class="string">&quot;true | false&quot;</span>],</span></span><br><span class="line"><span class="tag">            [<span class="attr">pageEncode</span> = <span class="string">&quot;utf-8 | charSet&quot;</span>],</span></span><br><span class="line"><span class="tag">            [<span class="attr">contentType</span> = <span class="string">&quot;text/html;charset = utf-8&quot;</span>]</span></span><br><span class="line"><span class="tag">        %&gt;</span></span><br><span class="line">        </span><br><span class="line">        使用errorPage设置当前页面的错误异常处理页面，在错误处理页面中，如果需要使用exception对象，必须设置isErrorPage=&quot;true&quot;</span><br><span class="line">        </span><br><span class="line">        一般情况下不会给每一个页面都设置ErrorPage，否则工作量太大了。</span><br><span class="line"></span><br><span class="line">全局异常处理</span><br><span class="line">在web.xml中配置</span><br><span class="line">  <span class="tag">&lt;<span class="name">error-page</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- error-code 是要捕获的错误编号 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">error-code</span>&gt;</span>404<span class="tag">&lt;/<span class="name">error-code</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- location 式异常处理页面所在位置  --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">location</span>&gt;</span>/common/404.jsp<span class="tag">&lt;/<span class="name">location</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">error-page</span>&gt;</span></span><br><span class="line">  </span><br><span class="line">   <span class="tag">&lt;<span class="name">error-page</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- error-code 是要捕获的错误编号 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">error-code</span>&gt;</span>500<span class="tag">&lt;/<span class="name">error-code</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- location 式异常处理页面所在位置  --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">location</span>&gt;</span>/common/500.jsp<span class="tag">&lt;/<span class="name">location</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">error-page</span>&gt;</span></span><br><span class="line">  </span><br><span class="line">   <span class="tag">&lt;<span class="name">error-page</span>&gt;</span></span><br><span class="line">   <span class="comment">&lt;!-- 这里是完整的包名.类名  --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">exception-type</span>&gt;</span>java.lang.NullPointerException<span class="tag">&lt;/<span class="name">exception-type</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- location 式异常处理页面所在位置  --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">location</span>&gt;</span>/common/error.jsp<span class="tag">&lt;/<span class="name">location</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">error-page</span>&gt;</span></span><br><span class="line"> 3.teblib指令</span><br></pre></td></tr></table></figure><p>​        </p><h2 id="JSP和Servlet的分工"><a href="#JSP和Servlet的分工" class="headerlink" title="JSP和Servlet的分工"></a>JSP和Servlet的分工</h2><pre><code>Servlet用来处理响应的数据JSP用来处理Servlet转发过来的响应数据</code></pre><h2 id="内置对象"><a href="#内置对象" class="headerlink" title="内置对象"></a>内置对象</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">每一个JSP页面在第一次访问的时候，WEB服务器都会把JSP文件交给JSP引擎处理，处理之后，会出现一个非常重要的方法_jspservice，</span><br><span class="line">本质就是Servlet里面的Service方法</span><br><span class="line"></span><br><span class="line">JSP引擎在调用JSP对应的_jspService方法时，会提供给 _jspService方法<span class="number">9</span>个开发相关的内置对象</span><br><span class="line"></span><br><span class="line"><span class="number">1.</span>九大内置对象</span><br></pre></td></tr></table></figure><table><thead><tr><th>内置对象</th><th>对应的Servlet技术</th></tr></thead><tbody><tr><td>request</td><td>HttpServletRequest</td></tr><tr><td>response</td><td>HttpServletResponse</td></tr><tr><td>application</td><td>ServletContext</td></tr><tr><td>Session</td><td>HttpSession</td></tr><tr><td>out</td><td>jspWriter 类似于PrintWrite</td></tr><tr><td>pageContext</td><td>pageContext</td></tr><tr><td>exception</td><td>throwable</td></tr><tr><td>config</td><td>Servletconfig</td></tr><tr><td>page</td><td>Object(this) 很少使用</td></tr></tbody></table><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2.</span>out    会有一个buffer缓存。 （自己的理解：JSPWriter对象）</span><br><span class="line">out用于给客户端发送文本数据</span><br><span class="line">out对象是通过pageContext对象里面的pageOut获取的，类似于response.getWriter()获取到的PrintWriter对象</span><br><span class="line">    </span><br><span class="line"><span class="number">3.</span>pageContext</span><br><span class="line">    pageContext对象是JSP技术最重要的一个对象，这个pageContext表示当前JSP页面的运行环境</span><br><span class="line">    这个对象不仅封装了其他的<span class="number">8</span>大内置(隐式)对象的引用，而且pageContext本身就是一个域对象，</span><br><span class="line">    可以用来保存数据。而且pageContext还封装了WEB开发中经常涉及到的一些常用操作</span><br><span class="line">        例如：</span><br><span class="line">            跳转其他资源，检索其他域对象的属性</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaWeb </tag>
            
            <tag> Web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaWeb-03</title>
      <link href="2020/07/05/JavaWeb-03/"/>
      <url>2020/07/05/JavaWeb-03/</url>
      
        <content type="html"><![CDATA[<h2 id="Servlet实现记录你是当前第几个访问者"><a href="#Servlet实现记录你是当前第几个访问者" class="headerlink" title="Servlet实现记录你是当前第几个访问者"></a>Servlet实现记录你是当前第几个访问者</h2><pre><code> 注意事项：    1.防止线程安全问题    2.在使用同步代码块选择锁对象，通常会使用当前servlet程序对象</code></pre><a id="more"></a><h2 id="servletConfig对象"><a href="#servletConfig对象" class="headerlink" title="servletConfig对象"></a>servletConfig对象</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>configServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>b_servletconfig.configServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- Servlet程序的初始化参数 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>user<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>root<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>password<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>12345<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">在web.xml文件中利用<span class="tag">&lt;<span class="name">intt-param</span>&gt;</span>标签来定义Servlet初始化参数，主要包含两个子标签</span><br><span class="line"><span class="tag">&lt;<span class="name">param-name</span>&gt;</span> <span class="tag">&lt;<span class="name">param-value</span>&gt;</span></span><br><span class="line">当Tomcat服务器程序启动，WEB容器在创建servlet时，会把初始化参数封装到ServletConfig对象中，</span><br><span class="line">这个ServletConfig对象，会作为Servlet对象的初始化方法init的参数</span><br><span class="line"></span><br><span class="line">【注意】</span><br><span class="line">    在一个Servlet 对应一个ServletConfig</span><br></pre></td></tr></table></figure><h2 id="ServletContext"><a href="#ServletContext" class="headerlink" title="ServletContext"></a>ServletContext</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">表示当前整个WEB应用，一个WEB应用有且只有一个ServletContext对象</span><br><span class="line"></span><br><span class="line"><span class="number">1.</span>获取WEB应用的路径</span><br><span class="line">ServletContext context = <span class="keyword">this</span>.getServletContext();</span><br><span class="line">context.getContextPath();</span><br><span class="line">request.getContextPath();</span><br><span class="line"></span><br><span class="line"><span class="number">2.</span>WEB应用的全局参数</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--这是针对整个WEB项目的初始化参数--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">context-param</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">param-name</span>&gt;</span>AAA<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>aaa<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">context-param</span>&gt;</span> </span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">context.getInitParameter(String parameter);</span><br><span class="line"></span><br><span class="line"><span class="number">3.</span>ServletContext是一个域对象</span><br><span class="line"></span><br><span class="line">request，session域</span><br><span class="line"></span><br><span class="line">可以利用ServletContext域对象，完成整个WEB项目中的数据共享传递</span><br><span class="line">不仅能传递基本数据类型，也可以传递类对象类型</span><br><span class="line">setAttribute(String name, Object value);</span><br><span class="line">getAttribute(String name);</span><br><span class="line"></span><br><span class="line"><span class="number">4.</span>转发和重定向</span><br><span class="line">    WEB服务器接收到客户端的请求之后，让Tomcat服务器去调用另一个WEB资源，这称之为转发</span><br><span class="line">    </span><br><span class="line">    request域转发</span><br><span class="line">        request.setAttribute(String name, Object value)</span><br><span class="line">        <span class="comment">//转发的方法</span></span><br><span class="line">        req.getRequestDispatcher(String uri).forward(HttpServletRequest req, HttpServletResponse resp)</span><br><span class="line">        uri:服务器端要访问别的WEB资源路径，这里是服务器端的地址，一般用 / 来头，表示WEB项目的根目录</span><br><span class="line">        HttpServletRequest req：原本用户请求当前页面的request对象</span><br><span class="line">        HttpServletResponse resp： 原本用户请求当前页面生成的response对象</span><br><span class="line">        </span><br><span class="line">    重定向</span><br><span class="line">        response.sendRedirect(String url);</span><br><span class="line">        这个url是相对于webapps的，是提供给浏览器使用的URL</span><br><span class="line">        </span><br><span class="line">        推荐写法</span><br><span class="line">            response.sendRedirect(request.getContextPath() + <span class="string">&quot;重定向地址&quot;</span>);</span><br><span class="line">        </span><br><span class="line">        【注意】</span><br><span class="line">            在重定向的情况下，request域不能使用</span><br></pre></td></tr></table></figure><h2 id="会话控制"><a href="#会话控制" class="headerlink" title="会话控制"></a>会话控制</h2><pre><code>软件中的会话：    打开浏览器——&gt;访问服务器上的内容——&gt;关闭浏览器登录业务场景：    打开浏览器 -&gt;访问登录页面-&gt;输入用户名 密码 验证码-&gt;发送给服务器-&gt;服务器验证信息-&gt;返回给浏览器-&gt;浏览器加载页面发现：    一处登录，处处使用    购物车场景：        在手机淘宝app选购，加入购物车，网页的也能看到。        这里的购物车数据在哪里保存会话控制技术：    管理 浏览器客户端 和 服务器 之间进行会话过程产生的会话数据</code></pre><h2 id="会话控制技术"><a href="#会话控制技术" class="headerlink" title="会话控制技术"></a>会话控制技术</h2><pre><code>Cookie技术：会话数据保存在浏览器客户端，也就是用户本地Session技术：会话数据保存在服务器上</code></pre><h3 id="Cookie技术"><a href="#Cookie技术" class="headerlink" title="Cookie技术"></a>Cookie技术</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">核心技术：</span><br><span class="line">    <span class="number">1.</span>创建Cookie对象</span><br><span class="line">        Cookie(String name, String value);</span><br><span class="line">    <span class="number">2.</span>设置Cookie</span><br><span class="line">        setvalue(String name) <span class="comment">//通过name来设置Cookie的value</span></span><br><span class="line">        setPath(String path);<span class="comment">//设置Cookie的有效范围</span></span><br><span class="line">        setMax(<span class="keyword">int</span> time); <span class="comment">//设置最大有效时间</span></span><br><span class="line">    <span class="number">3.</span>发送Cookie到浏览器保存</span><br><span class="line">        response.addCookie(Cookie c); <span class="comment">//发送Cookie给浏览器</span></span><br><span class="line">    <span class="number">4.</span>服务器接受浏览器访问时带来的Cookie数据</span><br><span class="line">        Cookie[] request.getCookies();</span><br><span class="line">        </span><br><span class="line">Cookie有一定的局限性</span><br><span class="line">    <span class="number">1.</span>限制数据类型 必须是String</span><br><span class="line">    <span class="number">2.</span>不能保存中文</span><br><span class="line">    <span class="number">3.</span>Cookie保存数据容量较小，只有<span class="number">4</span>KB</span><br><span class="line"></span><br><span class="line">【但是有前提，需要开启Cookie才可以使用Session】</span><br><span class="line">    Session的特点：</span><br><span class="line">        会话数据保存在服务器上，可以生成临时或者永久temp文件</span><br></pre></td></tr></table></figure><h3 id="Session技术"><a href="#Session技术" class="headerlink" title="Session技术"></a>Session技术</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">HttpSession</span><br><span class="line">    <span class="number">1.</span>获取Session对象</span><br><span class="line">        <span class="function">HttpSession <span class="title">getSession</span><span class="params">()</span></span>;</span><br><span class="line">        <span class="function">HttpSession <span class="title">getSession</span><span class="params">(<span class="keyword">boolean</span> create)</span></span>;</span><br><span class="line">    <span class="number">2.</span>设置Session有效时间</span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">setMaxInactiveInterval</span><span class="params">(<span class="keyword">int</span> interval)</span></span>;<span class="comment">//设置Session的有效时间</span></span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">invalidate</span><span class="params">()</span></span>; <span class="comment">//销毁Session</span></span><br><span class="line">        <span class="function">String <span class="title">getId</span><span class="params">()</span></span>; <span class="comment">//获取Session的ID</span></span><br><span class="line">        </span><br><span class="line">    <span class="number">3.</span>Session也是一个域对象，这里可以保存数据属性到Session</span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">setAttribute</span><span class="params">(String name, Object value)</span></span>; <span class="comment">//设置Session里面保存是会话数据内容，可以保存一个对象</span></span><br><span class="line">        <span class="function">Object <span class="title">getAttribute</span><span class="params">(String name)</span></span>;<span class="comment">//获取到Session里面的数据</span></span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">removeAttribute</span><span class="params">(String name)</span></span>; <span class="comment">//清空Session里面的数据</span></span><br></pre></td></tr></table></figure><p>​    </p>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaWeb </tag>
            
            <tag> Web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaWeb-02</title>
      <link href="2020/07/05/JavaWeb-02/"/>
      <url>2020/07/05/JavaWeb-02/</url>
      
        <content type="html"><![CDATA[<h2 id="HTTP协议"><a href="#HTTP协议" class="headerlink" title="HTTP协议:"></a>HTTP协议:</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">HTTP是一个规范，是用来约束WEB服务器和浏览器之间的通讯协议</span><br><span class="line">HTTP是HyperText Tranfer Protocol 超文本传输协议</span><br><span class="line">基于TCP/IP的一个协议，用于连接WEB服务器和WEB浏览器</span><br><span class="line"></span><br><span class="line">HTTP的协议版本：</span><br><span class="line">HTTP/<span class="number">1.0</span>   HTTP/<span class="number">1.1</span> 多数</span><br><span class="line"></span><br><span class="line">HTTP协议对于浏览器来说可以分为</span><br><span class="line">HTTP请求：从浏览器发送给服务器的请求内容</span><br><span class="line">HTTP响应：浏览器接受服务器发送的数据内容</span><br><span class="line"></span><br><span class="line">HTTP请求：</span><br><span class="line"> HTTP请求头：</span><br><span class="line">GET / HTTP/<span class="number">1.1</span>  --请求行</span><br><span class="line">Host: www.baidu.com  --请求的服务器地址</span><br><span class="line">Connection: keep-alive</span><br><span class="line">Cache-Control: max-age=<span class="number">0</span></span><br><span class="line">Upgrade-Insecure-Requests: <span class="number">1</span></span><br><span class="line">User-Agent: Mozilla/<span class="number">5.0</span> (Windows NT <span class="number">10.0</span>; Win64; x64) AppleWebKit/<span class="number">537.36</span> (KHTML, like Gecko) Chrome/<span class="number">67.0</span>.<span class="number">3396.87</span> </span><br><span class="line">Safari/<span class="number">537.36</span></span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=<span class="number">0.9</span>,image/webp,image/apng,*<span class="comment">/*;q=0.8</span></span><br><span class="line"><span class="comment">Referer: https://www.baidu.com/</span></span><br><span class="line"><span class="comment">Accept-Encoding: gzip, deflate, br</span></span><br><span class="line"><span class="comment">Accept-Language: zh-CN,zh;q=0.9</span></span><br><span class="line"><span class="comment">Cookie: BAIDUID=9EB21B2EF7DA91C0F31857314A0FE50D:FG=1; BIDUPSID=9EB21B2EF7DA91C0F31857314A0FE50D;</span></span><br><span class="line"><span class="comment"> PSTM=1529307712; BD_UPN=12314753; BDORZ=B490B5EBF6F3CD402E515D22BCDA1598;</span></span><br><span class="line"><span class="comment"> H_PS_645EC=9546Ddy%2BJwlbF0qwIgkz3vAgT%2FSATDZLAT%2FRJInpF%2FGoKAFeefS2O7%2F1JMQ; BD_HOME=0; H_PS_PSSID=1428_21089;</span></span><br><span class="line"><span class="comment"> FP_UID=fa1cecbdc1cde0448616d7090e32a513; </span></span><br><span class="line"><span class="comment"> BDUSS=UpWSktPMEJsOUlxWllNSEcxTktCfnBIWjRQdzFKYXdJMmNXUTNaNkZhZm04RTViQVFBQUFBJCQAAAAAAAAAAAEAAAC~o3Usyq7Su8TqtcTB9Mr</span></span><br><span class="line"><span class="comment"> YAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOZjJ1vmYydbT*/</span></span><br><span class="line"> </span><br><span class="line">使用GET请求方式：</span><br><span class="line">GET /Day40WEB/TestHttp?name=<span class="number">123</span>&amp;password=<span class="number">123</span> HTTP/<span class="number">1.1</span></span><br><span class="line">?之后就是GET请求的数据参数</span><br><span class="line"></span><br><span class="line">使用POST请求方式</span><br><span class="line">在URL中没有看到任何的参数</span><br><span class="line">而且请求的方式也略有不同</span><br><span class="line">POST /Day40WEB/TestHttp HTTP/<span class="number">1.1</span></span><br><span class="line">请求的数据在POST请求特有的 请求体内保存 也就是谷歌浏览器 Form Data</span><br><span class="line"></span><br><span class="line">响应头：</span><br><span class="line">HTTP/<span class="number">1.1</span> <span class="number">200</span> OK</span><br><span class="line">Server: Apache-Coyote/<span class="number">1.1</span>  --使用的服务器是什么</span><br><span class="line">Content-Length: <span class="number">0</span>--响应得到的数据长度，字节数</span><br><span class="line">Date: Mon, <span class="number">18</span> Jun <span class="number">2018</span> <span class="number">09</span>:<span class="number">49</span>:<span class="number">20</span> GMT 格林尼治时间标准时间</span><br><span class="line"></span><br><span class="line">格式：</span><br><span class="line">HTTP/版本号(目前常用都是<span class="number">1.1</span>)状态码 原因的简单描述</span><br></pre></td></tr></table></figure><a id="more"></a><table><thead><tr><th>状态码</th><th>含义</th></tr></thead><tbody><tr><td>100 ~ 199</td><td>表示成功接收请求，要求客户端继续提交下一次请求</td></tr><tr><td>200 ~ 299</td><td>表示成功接收并且处理完成了整个操作流程，常用200</td></tr><tr><td>300 ~ 399</td><td>为了完成请求，要求客户做出进一步的操作，例如：跳转，资源不存在，跳转新界面  常用302 304 307</td></tr><tr><td>400 ~ 499</td><td>客户请求错误，常用404</td></tr><tr><td>500 ~ 599</td><td>服务器坏了！常用500</td></tr></tbody></table><h2 id="Servlet映射路径"><a href="#Servlet映射路径" class="headerlink" title="Servlet映射路径"></a>Servlet映射路径</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Tomcat服务器启动之后</span><br><span class="line">http:<span class="comment">//localhost:8080/Day40WEB/TestHttp</span></span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 自定义的名字--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>TestHttp<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- servlet程序完整的包名.类名--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>zhaolong.TestHttp<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 要求和上面Servlet-name完全一致--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>TestHttp<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 映射路径--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/TestHttp<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><pre><code>浏览器访问服务器的URL分析1.浏览器根据输入的URL来访问Tomcat服务器 http://localhost:80802./Day40WEB 访问Tomcat服务器下webapps里面的Day40WEB项目文件夹3./TestHttp 用来匹配在【WEB-INF】下的【web.xml】文件里面的url-pattern/TestHttp 称之为 映射路径映射流程：    1.在【WEB-INF】下的web.xml文件中匹配url-pattern    2.匹配到，就可以获取到&lt;servlet-mapping&gt;，可以找到&lt;servlet-name&gt;标签内容，获取servlet-name属性    3.通过匹配&lt;servlet-name&gt;,找到&lt;servlet&gt;,也就可以获取到&lt;servlet-class&gt;标签内容    在这个标签中包含了servlet程序运行需要执行的.class文件    4.通过这个包名.类名就可以加载这个.class(字节码文件)，运行servlet程序，这里用到【反射】思想url-pattern 匹配形式：    精确匹配：        url-pattern规定的是什么样的匹配，就在URL中写什么        例如：            /TestHttp 在浏览器中只能输入：                http://localhost:8080/Day40WEB/TestHttp    模糊匹配：        /*      http://localhost:8080/Day40WEB/任意内容    都可以访问当前的Servlet程序        *.do    http://localhost:8080/Day40WEB/任意内容.do  以.do结尾        *.html (伪静态) http://localhost:8080/Day40WEB/任意内容.html        *.action        *.jsp    注意事项：        1.模糊匹配不能同时使用/和*        2.如果同时存在模糊匹配和精确匹配，精确匹配的优先级高        3.使用后缀名的模糊匹配优先级最低        4.要求所有的Servlet程序的url-pattern都不能为/ ，不允许和Tomcat默认Servlet冲突</code></pre><p>​    </p><h2 id="Tomcat默认的Servlet程序-【缺省路径】"><a href="#Tomcat默认的Servlet程序-【缺省路径】" class="headerlink" title="Tomcat默认的Servlet程序 【缺省路径】"></a>Tomcat默认的Servlet程序 【缺省路径】</h2><pre><code>在URL中输入http://localhost:8080/Day40WEB/流程：    1.在Day40的项目目录下【WEB-INF】里面的web.xml中匹配url-pattern为/ 的标签 【精确匹配】    2.如果没有匹配到这个 / 映射路径，这个时候Tomact会把这个映射路径交给 在Tomcat中默认    的Servlet程序中，DefaultServlet    3.DefaultServlet会首先在Day40WEB的项目目录下找有没有对应的index.***文件        这里可以支持index.html index.htm index.jsp    4.如果有，将对应的index.***文件发送给浏览器    5.如果没有，报状态码 404 跳转到默认的404页面</code></pre><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>default<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>org.apache.catalina.servlets.DefaultServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>debug<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>0<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>listings<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>false<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">load-on-startup</span>&gt;</span>1<span class="tag">&lt;/<span class="name">load-on-startup</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>default<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="Servlet生命周期【重点】"><a href="#Servlet生命周期【重点】" class="headerlink" title="Servlet生命周期【重点】"></a>Servlet生命周期【重点】</h2><pre><code>之前提到的生命周期：    成员变量，局部变量，类对象，线程的生命周期Servlet程序的生命周期    是由Tomcat服务器控制的，因为Servlet程序，目前只能在Tomcat服务器上运行Servlet生命周期的四个主要方法：    1)构造方法        用于创建Servlet对象        有且只执行一次    2)init方法        初始化构造方法创建好的Servlet对象        有且执行一次    3)Service方法        提供Servlet程序的服务        随便用几次        当指定的Servlet程序被创建，初始化之后，并没有销毁，而且从任何浏览器任何ip地址访问当前Servlet程序，        都不会重新创建，而是始终执行这一个Servlet程序        Servlet就是一个单例对象    4)Destroy方法        销毁Servlet对象，在Tomcat服务器关闭时执行        有且只执行一次</code></pre><h2 id="Servlet的自动加载"><a href="#Servlet的自动加载" class="headerlink" title="Servlet的自动加载"></a>Servlet的自动加载</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">在Tomcat服务器，假如在Servlet程序代码量巨大，操作的数据很大，并没有自动启动，而是当用户访问的时候才启动servlet，</span><br><span class="line">这样会导致用户访问的友好度不够，时间效率低</span><br><span class="line"></span><br><span class="line">如果一个Servlet程序运行启动过程比较长，操作复杂度较大，为了提供用户的访问体验，会设置自动加载</span><br><span class="line"></span><br><span class="line">需要修改web.xml文件</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>LifeDome<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>d_life.LifeDome<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 这里就是负责自动加载的xml语句，中间的数字从1开始，数字越小，优先级越高 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">load-on-startup</span>&gt;</span>1<span class="tag">&lt;/<span class="name">load-on-startup</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"></span><br><span class="line">用来在Tomcat服务器上提前加载一些重要的Servlet</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaWeb </tag>
            
            <tag> Web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaWeb-01</title>
      <link href="2020/07/05/JavaWeb-01/"/>
      <url>2020/07/05/JavaWeb-01/</url>
      
        <content type="html"><![CDATA[<h2 id="软件环境"><a href="#软件环境" class="headerlink" title="软件环境"></a>软件环境</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Eclipse 和 MyEclipse2015</span><br><span class="line"></span><br><span class="line">Eclipse：免费，提供了一些javaEE开发需要的插件</span><br><span class="line">大部分企业会使用Eclipse</span><br><span class="line">Spring</span><br><span class="line"></span><br><span class="line">安装插件的过程：</span><br><span class="line">eclipse里help 里inst software 搜索 Oxygen 选择Web,xml,JavaEE and OSGI</span><br><span class="line">接受条款安装</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="Tomcat从入门到熟悉"><a href="#Tomcat从入门到熟悉" class="headerlink" title="Tomcat从入门到熟悉"></a>Tomcat从入门到熟悉</h2><h3 id="B-S-和-C"><a href="#B-S-和-C" class="headerlink" title="B/S 和 C/"></a>B/S 和 C/</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">B/S:</span><br><span class="line">浏览器和服务器架构</span><br><span class="line">好处：</span><br><span class="line"><span class="number">1.</span>不需要符合各种平台环境的客户端，有浏览器就可以了。</span><br><span class="line"><span class="number">2.</span>更新方便，服务器更新，浏览器只要刷新就行了</span><br><span class="line"></span><br><span class="line">C/S:</span><br><span class="line">客户端和服务端架构</span><br><span class="line">QQ 微信 快手</span><br><span class="line"></span><br><span class="line">好处：</span><br><span class="line"><span class="number">1.</span>用户体验比B/S略好</span><br><span class="line">弊端：</span><br><span class="line"><span class="number">1.</span>如果使用服务，必须装软件</span><br><span class="line"><span class="number">2.</span>服务器更新之后，要求客户端也随之更新</span><br><span class="line"></span><br><span class="line">中小型更多选择B/S架构</span><br><span class="line">HTML CSS JavaScript JavaEE MySQL/Oracle Tomcat Ngnix</span><br></pre></td></tr></table></figure><h3 id="什么是服务器？"><a href="#什么是服务器？" class="headerlink" title="什么是服务器？"></a>什么是服务器？</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">计算机：</span><br><span class="line">cpu 内存 硬盘 带宽</span><br><span class="line"><span class="number">1</span>核 <span class="number">1</span>g <span class="number">40</span>g  <span class="number">10</span>m</span><br><span class="line"></span><br><span class="line">HTML+CSS</span><br><span class="line">CSS做成一个独立的CSS文件</span><br><span class="line"></span><br><span class="line">流量：</span><br><span class="line">家用宽带<span class="number">100</span>M下载速度，<span class="number">20</span>M上行速度</span><br><span class="line">商用/服务器宽带<span class="number">100</span>M上下行速度</span><br><span class="line"></span><br><span class="line">服务器除了硬件之外，还有软件</span><br><span class="line">这个软件是用来提供共享资源能力的，让网络端的电脑能够访问服务器</span><br><span class="line">Tomcat Ngnix apche组织</span><br><span class="line"></span><br><span class="line">WebLogic：BEA公司，收费的，完全支持JavaEE规范</span><br><span class="line">WebSphere：IBM公司，收费的，完全支持JavaEE规范</span><br><span class="line">JBoss： Redhat公司，收费的，完全支持JavaEE规范</span><br><span class="line"></span><br><span class="line">Tomcat：apche组织，完全免费开源的，支持我们能用到的JavaEE部分规范</span><br><span class="line">Servlet JSP JDBC</span><br><span class="line"></span><br><span class="line">数据库服务器：</span><br><span class="line">安装了数据库软件得一个电脑 MySQL Oracle SQLserver</span><br><span class="line"></span><br><span class="line">WEB服务器：</span><br><span class="line">提供WEB服务器的一台电脑，安装了WEB服务器软件</span><br><span class="line"></span><br><span class="line">Tomcat基本使用方法</span><br><span class="line"><span class="number">1.</span>从官网上下载<span class="number">8.</span>x版本</span><br><span class="line"></span><br><span class="line"><span class="number">2.</span>下载完成后，解压到无中文的路径</span><br><span class="line"></span><br><span class="line"><span class="number">3.</span>启动用/bin/startup.bat</span><br><span class="line">  关闭用/bin/shutdowm.bat</span><br><span class="line">  【注意】绝对不允许直接叉掉</span><br><span class="line"></span><br><span class="line"><span class="number">4.</span>浏览器输入：</span><br><span class="line">http:<span class="comment">//localhost:8080</span></span><br><span class="line"></span><br><span class="line"><span class="number">5.</span>加载成功即服务器启动成功</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">Tomcat的目录结构：</span><br><span class="line">bin:存放Tomcat程序的二进制文件 目录</span><br><span class="line">conf：存放Tomcat的配置文件，主要操作对象是server.xml</span><br><span class="line">lib:存放Tomcat运行需要的jar包，这里面有一个需要关注的是servlet-api.jar</span><br><span class="line">logs：存放运行时日志的临时文件夹</span><br><span class="line">webapps：共享资源路径，WEB应用保存的目录</span><br><span class="line">work：Tomcat的运行目录，JSP运行的临时目录。JSP生成的临时文件都会放在这里</span><br><span class="line"></span><br><span class="line">Tomcat共享文件演示</span><br><span class="line">只要操作的是webapps这个文件夹</span><br><span class="line"></span><br><span class="line">在webapps这个文件夹下创建一个目录</span><br><span class="line">mywebs</span><br><span class="line"></span><br><span class="line">在mywebs下写一个html文件</span><br><span class="line">index.html</span><br><span class="line"></span><br><span class="line">在浏览器输入：</span><br><span class="line">http:<span class="comment">//ip:8080/mywebs/index.html</span></span><br><span class="line">就可以访问了</span><br><span class="line"></span><br><span class="line">http：这是HTTP协议</span><br><span class="line">ip：服务器的ip地址</span><br><span class="line"><span class="number">8080</span>：服务器Tomcat软件得端口号</span><br><span class="line">mywebs：在tomcat服务器下共享目录webapps里的一个JavaWEB项目目录名</span><br><span class="line">index.html是一个HTML文件</span><br><span class="line"></span><br><span class="line">小知识：</span><br><span class="line">index.html因为它的名字是index，在没有确定申请访问那一个文件时，默认会打开index.html</span><br></pre></td></tr></table></figure><p>​<br>​<br>​<br>​<br>​        </p>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaWeb </tag>
            
            <tag> Web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Tomcat-主页访问404</title>
      <link href="2020/07/05/Tomcat-%E4%B8%BB%E9%A1%B5%E8%AE%BF%E9%97%AE404/"/>
      <url>2020/07/05/Tomcat-%E4%B8%BB%E9%A1%B5%E8%AE%BF%E9%97%AE404/</url>
      
        <content type="html"><![CDATA[<p>配置Tomcat后，启动后访问<a href="http://localhost:8080主页显示404，主要问题是以下问题：">http://localhost:8080主页显示404，主要问题是以下问题：</a></p><a id="more"></a><img src=https://gitee.com/gek7777/cdn.io/raw/master/image/1552545741805.png ><p>在eclipse正常启动Tomcat，却不能正常通过<a href="http://localhost:8080访问Tomcat主页的问题。如图在eclipse中的server中设置，需要启动服务器以后才能设置。">http://localhost:8080访问Tomcat主页的问题。如图在eclipse中的server中设置，需要启动服务器以后才能设置。</a></p>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Tomcat </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Oracle-PLSQLDEV环境配置问题</title>
      <link href="2020/07/05/Oracle-PLSQLDEV%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE%E9%97%AE%E9%A2%98/"/>
      <url>2020/07/05/Oracle-PLSQLDEV%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<p>1、安装好Oracle 以后，需要配置两个环境变量</p><p>第一个：在系统环境变量中配置Path变量，加入下面两个</p><img src=https://gitee.com/gek7777/cdn.io/raw/master/image/1553041350229.png ><p><strong>如果不加，AD连接会报A64的问题。</strong></p><p>作用：占时不了解。</p><p>第二个：配置TNS_ADMIN 文件，指定为<strong>当前使用的连接串</strong>所在的文件夹路径。</p><img src=https://gitee.com/gek7777/cdn.io/raw/master/image/1553041519814.png ><p><strong>如果指定，PL/SQL中会默认加载系统自带的ADMIN文件夹下的连接串。</strong></p><p>作用：在PL/SQL中的help–&gt;support，会发现TNS file 的路径是系统默认的文件。会找不到配置的连接串。</p>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Oracle </tag>
            
            <tag> 环境 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git-“npm-v”报错</title>
      <link href="2020/07/05/Git-%E2%80%9Cnpm-v%E2%80%9D%E6%8A%A5%E9%94%99/"/>
      <url>2020/07/05/Git-%E2%80%9Cnpm-v%E2%80%9D%E6%8A%A5%E9%94%99/</url>
      
        <content type="html"><![CDATA[<img src=https://gitee.com/gek7777/cdn.io/raw/master/image/1553327875569.png ><p>把C:\Users\zhaolong\ .npmrc 文件删除。</p>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo-deployer-git错误</title>
      <link href="2020/07/05/Hexo-deployer-git%E9%94%99%E8%AF%AF/"/>
      <url>2020/07/05/Hexo-deployer-git%E9%94%99%E8%AF%AF/</url>
      
        <content type="html"><![CDATA[<p>hexo指令无法使用，一直报错，不管是hexo clean 、hexo g、还是hexo d 、hexo new，这些指令都出现了错误，</p><p>报错原因：插件错误，hexo-deployer-git插件出现错误</p><p>去网上查找原因，没有找到该问题的解决办法。</p><p>很明显是该插件的问题，就重新下载该插件，但是却提示：</p><p>This package is no longer maintained，该插件不再维护。</p><p>把博客文件夹中node_modules删了，然后git bash中输入：</p><p> npm install -g cnpm –registry=<a href="https://registry.npm.taobao.org/">https://registry.npm.taobao.org</a></p><img src=https://gitee.com/gek7777/cdn.io/raw/master/image/1553331102831.png ><p>然后再输入：cnpm install hexo-deployer-git –save</p><img src=https://gitee.com/gek7777/cdn.io/raw/master/image/1553331111538.png >]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Eclipse默认浏览器修改</title>
      <link href="2020/07/05/Eclipse-%E9%BB%98%E8%AE%A4%E6%B5%8F%E8%A7%88%E5%99%A8%E4%BF%AE%E6%94%B9/"/>
      <url>2020/07/05/Eclipse-%E9%BB%98%E8%AE%A4%E6%B5%8F%E8%A7%88%E5%99%A8%E4%BF%AE%E6%94%B9/</url>
      
        <content type="html"><![CDATA[<img src=https://gitee.com/gek7777/cdn.io/raw/master/image/1552545620249.png ><p>关于eclipse默认浏览器的配置，如图。</p>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> eclipse </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Oracle-PS常用的SQL语句</title>
      <link href="2020/07/05/Oracle-PS%E5%B8%B8%E7%94%A8%E7%9A%84SQL%E8%AF%AD%E5%8F%A5/"/>
      <url>2020/07/05/Oracle-PS%E5%B8%B8%E7%94%A8%E7%9A%84SQL%E8%AF%AD%E5%8F%A5/</url>
      
        <content type="html"><![CDATA[<h2 id="一、PS常用的sql语句"><a href="#一、PS常用的sql语句" class="headerlink" title="一、PS常用的sql语句"></a>一、PS常用的sql语句</h2><h3 id="1、查询某部门的所有子部门"><a href="#1、查询某部门的所有子部门" class="headerlink" title="1、查询某部门的所有子部门"></a>1、查询某部门的所有子部门</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--包含所有的子部门</span></span><br><span class="line"><span class="keyword">select</span> b.deptid,b.* <span class="keyword">from</span> Ps_c_Org_Path_Tbl b <span class="keyword">where</span>  <span class="keyword">INSTR</span> (b.c_org_path2, <span class="string">&#x27;100000002&#x27;</span> ) &gt; <span class="number">0</span> ;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">c_Org_Path_Tbl表是部门路径表，包含了部门的所有子部门ID和路径。</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h3 id="2、查询当前月份的第一天"><a href="#2、查询当前月份的第一天" class="headerlink" title="2、查询当前月份的第一天"></a>2、查询当前月份的第一天</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--某个月份的第一天</span></span><br><span class="line"><span class="keyword">select</span> trunc(add_months(<span class="keyword">last_day</span>(<span class="keyword">sysdate</span>), <span class="number">-1</span>) + <span class="number">1</span>)  <span class="keyword">from</span> dual </span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">函数：last_day(sysdate)-获取当前日期的最后一天；</span></span><br><span class="line"><span class="comment">函数：add_months(last_day(sysdate), -1)-获取前一个月的最后一天；</span></span><br><span class="line"><span class="comment">函数：trunc(add_months(last_day(sysdate), -1) + 1)-前一个月最后一天加一天以后，取整部分；</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Oracle-左右移动位数且自增功能</title>
      <link href="2020/07/05/Oracle-%E5%B7%A6%E5%8F%B3%E7%A7%BB%E5%8A%A8%E4%BD%8D%E6%95%B0%E4%B8%94%E8%87%AA%E5%A2%9E%E5%8A%9F%E8%83%BD/"/>
      <url>2020/07/05/Oracle-%E5%B7%A6%E5%8F%B3%E7%A7%BB%E5%8A%A8%E4%BD%8D%E6%95%B0%E4%B8%94%E8%87%AA%E5%A2%9E%E5%8A%9F%E8%83%BD/</url>
      
        <content type="html"><![CDATA[<h2 id="五位数自增"><a href="#五位数自增" class="headerlink" title="五位数自增"></a>五位数自增</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--语句如下：</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">REPLACE</span>(<span class="keyword">LPAD</span>(<span class="keyword">COUNT</span>(<span class="number">1</span>) + <span class="number">1</span>, <span class="number">5</span>), <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27;0&#x27;</span>) <span class="keyword">FROM</span> PS_C_OUT_SOUR_TBL</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">分析：1.先去表中现有数据，加1；</span></span><br><span class="line"><span class="comment">2.然后向右移动5位；</span></span><br><span class="line"><span class="comment">3.将空格用0替换；</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Oracle-备份表数据</title>
      <link href="2020/07/05/Oracle-%E5%A4%87%E4%BB%BD%E8%A1%A8%E6%95%B0%E6%8D%AE/"/>
      <url>2020/07/05/Oracle-%E5%A4%87%E4%BB%BD%E8%A1%A8%E6%95%B0%E6%8D%AE/</url>
      
        <content type="html"><![CDATA[<h3 id="1、根据源表创建备份表并且取源表的数据插入"><a href="#1、根据源表创建备份表并且取源表的数据插入" class="headerlink" title="1、根据源表创建备份表并且取源表的数据插入"></a>1、根据源表创建备份表并且取源表的数据插入</h3> <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> backupsTBL <span class="keyword">as</span> <span class="keyword">select</span> * <span class="keyword">from</span> sourceTBL;</span><br></pre></td></tr></table></figure><h3 id="2、如果备份表已经是存在的，从源表中拿到取数插入"><a href="#2、如果备份表已经是存在的，从源表中拿到取数插入" class="headerlink" title="2、如果备份表已经是存在的，从源表中拿到取数插入"></a>2、如果备份表已经是存在的，从源表中拿到取数插入</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--全部字段内容备份</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> backupsTBL <span class="keyword">select</span> * <span class="keyword">from</span> sourceTBL;</span><br><span class="line"><span class="comment">--部分字段内容备份</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> backupsTBL(<span class="keyword">name</span>,age) <span class="keyword">select</span> <span class="keyword">name</span>,age <span class="keyword">from</span> sourceTBL;</span><br></pre></td></tr></table></figure><h3 id="3、同一张表中，将某个字段A的值赋给字段B"><a href="#3、同一张表中，将某个字段A的值赋给字段B" class="headerlink" title="3、同一张表中，将某个字段A的值赋给字段B"></a>3、同一张表中，将某个字段A的值赋给字段B</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">update</span> table_name <span class="keyword">set</span> B =  A;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PeopleSoft-常用API</title>
      <link href="2020/07/05/PeopleSoft-%E5%B8%B8%E7%94%A8API/"/>
      <url>2020/07/05/PeopleSoft-%E5%B8%B8%E7%94%A8API/</url>
      
        <content type="html"><![CDATA[<h3 id="其他数据类型转字符串String"><a href="#其他数据类型转字符串String" class="headerlink" title="其他数据类型转字符串String"></a>其他数据类型转字符串String</h3><p><strong>方法：String(a)。</strong></p><h3 id="其他数据类型转小数Number"><a href="#其他数据类型转小数Number" class="headerlink" title="其他数据类型转小数Number"></a>其他数据类型转小数Number</h3><p><strong>方法：Number(a)。</strong></p><h3 id="其他数据类型转整数Integer"><a href="#其他数据类型转整数Integer" class="headerlink" title="其他数据类型转整数Integer"></a>其他数据类型转整数Integer</h3><p><strong>方法：Integer(a)。</strong>注意：如果是小数类型数据，会去掉小数部分，直接取整。</p><a id="more"></a><h3 id="其他数据类型转数值型Value"><a href="#其他数据类型转数值型Value" class="headerlink" title="其他数据类型转数值型Value"></a>其他数据类型转数值型Value</h3><p>方法：Value(a)。例如：String类型转数值类型。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Value(<span class="string">&quot;5.56&quot;</span>);</span><br><span class="line">Value(<span class="string">&quot;12,300&quot;</span>);</span><br></pre></td></tr></table></figure><h3 id="String类型转Date类型、Datetime类型"><a href="#String类型转Date类型、Datetime类型" class="headerlink" title="String类型转Date类型、Datetime类型"></a>String类型转Date类型、Datetime类型</h3><p><strong>方法：Date(a)</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Date(<span class="number">19970701</span>);</span><br></pre></td></tr></table></figure><p><strong>方法：Datetime6(year, month, day, hour, minute, second)</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Datetime6(<span class="number">1990</span>,<span class="number">01</span>,<span class="number">01</span>,<span class="number">09</span>,<span class="number">30</span>,<span class="number">20</span>);  </span><br><span class="line"><span class="comment">//时间：1990-1-1 9:30:20</span></span><br></pre></td></tr></table></figure><h3 id="字符串修剪、截取、替换、比对"><a href="#字符串修剪、截取、替换、比对" class="headerlink" title="字符串修剪、截取、替换、比对"></a>字符串修剪、截取、替换、比对</h3><p><strong>左修剪方法：LTrim（）</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Local string &amp;str = <span class="string">&quot;,，.。;：&#x27;“”123&quot;</span>;</span><br><span class="line">Local string &amp;str1 = LTrim(&amp;str, <span class="string">&quot;，,“”.。;：&#x27;&quot;</span>);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">LTrim() -- 左起修剪：</span></span><br><span class="line"><span class="comment">参数&amp;str，为需要修剪的字符串；</span></span><br><span class="line"><span class="comment">参数&quot;&quot;,需要去除的字符，顺序随意，会根据包含的字符，一一对比，如有相同，则去除；</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><p><strong>右修剪方法：RTrim（）</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Local string &amp;str = <span class="string">&quot;,，.。;：&#x27;“”123&quot;</span>;</span><br><span class="line">Local string &amp;str1 = RTrim(&amp;str, <span class="string">&quot;，,“”.。;：&#x27;&quot;</span>);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">RTrim() -- 右起修剪：</span></span><br><span class="line"><span class="comment">参数&amp;str，为需要修剪的字符串；</span></span><br><span class="line"><span class="comment">参数&quot;&quot;,需要去除的字符，顺序随意，会根据包含的字符，一一对比，如有相同，则去除；</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><p><strong>截取方法：substring()、left()、right()</strong> </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&amp;str = <span class="string">&quot;12345abc&quot;</span>;</span><br><span class="line">&amp;ret = substring(&amp;str,<span class="number">1</span>,<span class="number">5</span>);</span><br><span class="line">结果：<span class="number">12345</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">Substring(source_str, start_pos, length) --按长度截取字符串；</span></span><br><span class="line"><span class="comment">参数source_str，需要截取的源字符串；</span></span><br><span class="line"><span class="comment">参数start_pos，开始下标；</span></span><br><span class="line"><span class="comment">参数length，截取的长度；</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line">&amp;str = <span class="string">&quot;12345abc&quot;</span>;</span><br><span class="line">&amp;ret = left(&amp;str,<span class="number">5</span>);</span><br><span class="line">结果：<span class="number">12345</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">left(source_str,num_char);  -- 从左开始数，截取指定字符字数；</span></span><br><span class="line"><span class="comment">参数1：源字符串；</span></span><br><span class="line"><span class="comment">参数2：截取字符个数；</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line">&amp;str = <span class="string">&quot;12345abc&quot;</span>;</span><br><span class="line">&amp;ret = right(&amp;str,<span class="number">3</span>);</span><br><span class="line">结果：abc</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">left(source_str,num_char);  -- 从右开始数，截取指定字符字数；</span></span><br><span class="line"><span class="comment">参数1：源字符串；</span></span><br><span class="line"><span class="comment">参数2：截取字符个数；</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><p><strong>替换方法：Substitute()</strong>  <strong>对比也可使用该方法实现</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&amp;str = <span class="string">&quot;12345abc&quot;</span>;</span><br><span class="line">&amp;ret = Substitute(&amp;str,<span class="string">&quot;1&quot;</span>,<span class="string">&quot;&quot;</span>);</span><br><span class="line">结果：<span class="number">2345</span>sbc</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">Substitute(source_text, old_text, new_text) -- 取子串所在的下标；</span></span><br><span class="line"><span class="comment">参数1：需要替换的源字符串；</span></span><br><span class="line"><span class="comment">参数2：需要替换的子串；</span></span><br><span class="line"><span class="comment">参数3：替换的新子串；</span></span><br><span class="line"><span class="comment">返回值：替换后的字符串；</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">if</span> <span class="title">Substitute</span><span class="params">(&amp;str,<span class="string">&quot;1&quot;</span>,<span class="string">&quot;&quot;</span>)</span> </span>= &amp;str then</span><br><span class="line">    winmessage(<span class="string">&quot;不含该子串&quot;</span>);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    winmessage(<span class="string">&quot;包含该子串&quot;</span>);</span><br><span class="line">end-<span class="keyword">if</span>;</span><br><span class="line"><span class="comment">/* 对目标源串进行子串替换为空，如果替换后仍然等于源串，说明该源串不含子串；*/</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p> <strong>获取随机数</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//获取0-1之间的随机数。</span></span><br><span class="line">rand(); </span><br></pre></td></tr></table></figure><p><strong>获取唯一ID</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//获取唯一ID;</span></span><br><span class="line">UUIDGEN();</span><br></pre></td></tr></table></figure><p><strong>获取当前访问组件名称</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//获取当前访问组件的CI名称;</span></span><br><span class="line">&amp;CI_Name = %CompIntfcName;</span><br></pre></td></tr></table></figure><p><strong>sleep函数（客制化）</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//利用以下PeopleCede，进行系统定时休眠。   </span></span><br><span class="line">   Local datetime &amp;dttmTemp;</span><br><span class="line">   &amp;dttmTemp = %Datetime;</span><br><span class="line">   While (%Datetime - &amp;dttmTemp) &lt; <span class="number">1</span></span><br><span class="line">   End-While;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PeopleSoft </tag>
            
            <tag> PeopleCode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PeopleSoft-页面关联字段自动带出</title>
      <link href="2020/07/05/PeopleSoft-%E9%A1%B5%E9%9D%A2%E5%85%B3%E8%81%94%E5%AD%97%E6%AE%B5%E8%87%AA%E5%8A%A8%E5%B8%A6%E5%87%BA/"/>
      <url>2020/07/05/PeopleSoft-%E9%A1%B5%E9%9D%A2%E5%85%B3%E8%81%94%E5%AD%97%E6%AE%B5%E8%87%AA%E5%8A%A8%E5%B8%A6%E5%87%BA/</url>
      
        <content type="html"><![CDATA[<p>PeopleSoft中，页面中关联字段自动带出的实现方式…</p><a id="more"></a><h2 id="自动关联带出的实现方式"><a href="#自动关联带出的实现方式" class="headerlink" title="自动关联带出的实现方式"></a>自动关联带出的实现方式</h2><img src=https://gitee.com/gek7777/cdn.io/raw/master/image/1591163282031.png ><h3 id="建立一个搜索视图，页面字段进行视图关联。"><a href="#建立一个搜索视图，页面字段进行视图关联。" class="headerlink" title="建立一个搜索视图，页面字段进行视图关联。"></a>建立一个搜索视图，页面字段进行视图关联。</h3><img src=https://gitee.com/gek7777/cdn.io/raw/master/image/1591163434713.png ><img src=https://gitee.com/gek7777/cdn.io/raw/master/image/1591163328618.png ><h3 id="设置控制字段：该字段放大镜选择，带出对应字段信息。"><a href="#设置控制字段：该字段放大镜选择，带出对应字段信息。" class="headerlink" title="设置控制字段：该字段放大镜选择，带出对应字段信息。"></a>设置控制字段：该字段放大镜选择，带出对应字段信息。</h3><img src=https://gitee.com/gek7777/cdn.io/raw/master/image/1591163524512.png ><h3 id="设置需要带出的字段：根绝控制字段带出对应视图的字段。"><a href="#设置需要带出的字段：根绝控制字段带出对应视图的字段。" class="headerlink" title="设置需要带出的字段：根绝控制字段带出对应视图的字段。"></a>设置需要带出的字段：根绝控制字段带出对应视图的字段。</h3><img src=https://gitee.com/gek7777/cdn.io/raw/master/image/1591163688487.png ><img src=https://gitee.com/gek7777/cdn.io/raw/master/image/1591163588073.png >]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PeopleSoft </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PeopleSoft-序号自增</title>
      <link href="2020/07/05/PeopleSoft-%E5%BA%8F%E5%8F%B7%E8%87%AA%E5%A2%9E/"/>
      <url>2020/07/05/PeopleSoft-%E5%BA%8F%E5%8F%B7%E8%87%AA%E5%A2%9E/</url>
      
        <content type="html"><![CDATA[<p>PeopleSoft的页面中，关于某些表字段需要自增，按照以下操作即可…</p><a id="more"></a><h2 id="序号自增"><a href="#序号自增" class="headerlink" title="序号自增"></a>序号自增</h2><img src=https://gitee.com/gek7777/cdn.io/raw/master/image/1590565143907.png ><p><del>代码写在页面对应表的RowInit中，每次点击添加一行时，会触发该代码，代码如下：</del></p><p>实践证明：代码写在Rowinit中，每次加载该表时，会把生成的序号保存在缓存中，保存时，如果该表没有业务数据，但是有必填字段，则会出触发必填校验。应该将代码写在该表的某个必填字段的fieldchange中，只有当需要填写数据时，才会自增序号，否则不触发自增序号，缓存中也就无数据，保存时也不会触发必填校验。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*==========================================================</span></span><br><span class="line"><span class="comment">  任务编号: </span></span><br><span class="line"><span class="comment">  说    明: 序号自增</span></span><br><span class="line"><span class="comment">  ----------------------------------------------------------</span></span><br><span class="line"><span class="comment">  日期             作者         说明</span></span><br><span class="line"><span class="comment"> 2020-05-11                        创建</span></span><br><span class="line"><span class="comment">===========================================================*/</span></span><br><span class="line">Local number &amp;seq = <span class="number">0</span>;</span><br><span class="line"><span class="function">If <span class="title">None</span><span class="params">(C_SOCI_RELA_TBL.SEQNBR)</span> Then</span></span><br><span class="line"><span class="function">   Local Rowset &amp;rs </span>= GetLevel0()(<span class="number">1</span>).GetRowset(Scroll.C_SOCI_RELA_TBL);</span><br><span class="line">   For &amp;i = <span class="number">1</span> To &amp;rs.ActiveRowCount</span><br><span class="line">      If &amp;rs(&amp;i).C_SOCI_RELA_TBL.SEQNBR.Value &gt; &amp;seq Then</span><br><span class="line">         &amp;seq = &amp;rs(&amp;i).C_SOCI_RELA_TBL.SEQNBR.Value;</span><br><span class="line">      End-If;</span><br><span class="line">   End-For;</span><br><span class="line">   C_SOCI_RELA_TBL.SEQNBR.Value = &amp;seq + <span class="number">1</span>;</span><br><span class="line">End-If;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PeopleSoft </tag>
            
            <tag> PeopleCode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PeopleSoft-设置页面默认值/初始值</title>
      <link href="2020/07/05/PeopleSoft-%E8%AE%BE%E7%BD%AE%E9%A1%B5%E9%9D%A2%E9%BB%98%E8%AE%A4%E5%80%BC-%E5%88%9D%E5%A7%8B%E5%80%BC/"/>
      <url>2020/07/05/PeopleSoft-%E8%AE%BE%E7%BD%AE%E9%A1%B5%E9%9D%A2%E9%BB%98%E8%AE%A4%E5%80%BC-%E5%88%9D%E5%A7%8B%E5%80%BC/</url>
      
        <content type="html"><![CDATA[<p>PeopleSoft的表、页面中进行默认赋值，初始值等……</p><a id="more"></a><h2 id="字段赋默认值"><a href="#字段赋默认值" class="headerlink" title="字段赋默认值"></a>字段赋默认值</h2><h3 id="默认赋值（写死）"><a href="#默认赋值（写死）" class="headerlink" title="默认赋值（写死）"></a>默认赋值（写死）</h3><img src=https://gitee.com/gek7777/cdn.io/raw/master/image/1591164695247.png ><h3 id="根据用户所绑定的员工属于的集合ID，赋予默认值。（动态的，根据不同的集合ID的员工，赋予的值不一样）"><a href="#根据用户所绑定的员工属于的集合ID，赋予默认值。（动态的，根据不同的集合ID的员工，赋予的值不一样）" class="headerlink" title="根据用户所绑定的员工属于的集合ID，赋予默认值。（动态的，根据不同的集合ID的员工，赋予的值不一样）"></a>根据用户所绑定的员工属于的集合ID，赋予默认值。（动态的，根据不同的集合ID的员工，赋予的值不一样）</h3><img src=https://gitee.com/gek7777/cdn.io/raw/master/image/1591164784448.png ><h3 id="注意：组件搜索视图的默认赋值。"><a href="#注意：组件搜索视图的默认赋值。" class="headerlink" title="注意：组件搜索视图的默认赋值。"></a>注意：组件搜索视图的默认赋值。</h3><p>这里不能使用在表上的默认赋值或者根据绑定的安全性赋值，应该通过代码在组件搜索视图上进行默认值赋值。</p><img src=https://gitee.com/gek7777/cdn.io/raw/master/image/1593480303522.png ><p>代码需要写在搜索视图的SearchInit上。</p><img src=https://gitee.com/gek7777/cdn.io/raw/master/image/1593480325462.png ><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">Declare Function getDefalutSetIdByPriPlst PeopleCode C_FUNC_DWK.SETID FieldFormula;</span><br><span class="line">Declare Function getDefalutBUByPriPlst PeopleCode C_FUNC_DWK.BUSINESS_UNIT FieldFormula;</span><br><span class="line"></span><br><span class="line">SetSearchDialogBehavior(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">SetSearchEdit(C_STD_POSN_VW1.SETID);</span><br><span class="line">SetSearchDefault(C_STD_POSN_VW1.SETID);</span><br><span class="line"></span><br><span class="line">SetSearchEdit(C_STD_POSN_VW1.BUSINESS_UNIT);</span><br><span class="line">SetSearchDefault(C_STD_POSN_VW1.BUSINESS_UNIT);</span><br><span class="line"></span><br><span class="line">C_STD_POSN_VW1.SETID.Value = getDefalutSetIdByPriPlst();</span><br><span class="line">C_STD_POSN_VW1.BUSINESS_UNIT.Value = getDefalutBUByPriPlst();</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PeopleSoft </tag>
            
            <tag> PeopleCode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PeopleSoft-警告、错误、消息盒子</title>
      <link href="2020/07/05/PeopleSoft-%E8%AD%A6%E5%91%8A%E3%80%81%E9%94%99%E8%AF%AF%E3%80%81%E6%B6%88%E6%81%AF%E7%9B%92%E5%AD%90/"/>
      <url>2020/07/05/PeopleSoft-%E8%AD%A6%E5%91%8A%E3%80%81%E9%94%99%E8%AF%AF%E3%80%81%E6%B6%88%E6%81%AF%E7%9B%92%E5%AD%90/</url>
      
        <content type="html"><![CDATA[<h2 id="PeopleCode-中的“警告、错误、消息盒子”"><a href="#PeopleCode-中的“警告、错误、消息盒子”" class="headerlink" title="PeopleCode 中的“警告、错误、消息盒子”"></a>PeopleCode 中的“警告、错误、消息盒子”</h2><h3 id="PS页面中配置提示消息路径："><a href="#PS页面中配置提示消息路径：" class="headerlink" title="PS页面中配置提示消息路径："></a>PS页面中配置提示消息路径：</h3><p>根据消息严重性不一样，会有不同的结果。1.取消；2.消息；3.警告；4.错误；不同的消息，程序会根据不同的严重性进入不同的步骤。</p><p>1.显示消息并且强制取消程序；</p><p>2.显示消息并继续处理；</p><p>3.显示消息并视为警告；</p><p>4.显示消息并视为错误；</p><a id="more"></a><img src=https://gitee.com/gek7777/cdn.io/raw/master/image/1591945383723.png ><p>Messagebox、winMessage类在以下类型中不回被触发；</p><ul><li><p>SavePreChange.</p></li><li><p>Workflow.</p></li><li><p>RowSelect.</p></li><li><p>SavePostChange.</p></li><li><p>Any PeopleCode event that fires as a result of a ScrollSelect (or one of its relatives) function calls, or a Select (or one of its relatives) Rowset class method.</p></li></ul><h3 id="Messagebox"><a href="#Messagebox" class="headerlink" title="Messagebox"></a>Messagebox</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">MessageBox(style, title, message_set, message_num, default_msg_txt[, paramlist]);</span><br><span class="line"></span><br><span class="line">MessageBox(<span class="number">0</span>, <span class="string">&quot;&quot;</span>, <span class="number">1</span>, <span class="number">2</span>, &amp;String);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">&quot;0&quot;是buttons，类型详情参考下标；</span></span><br><span class="line"><span class="comment">&quot;&quot;在web服务中会被忽略；</span></span><br><span class="line"><span class="comment">&quot;1&quot;是PS中的消息集合编号;</span></span><br><span class="line"><span class="comment">&quot;2&quot;是PS中的消息编号；</span></span><br><span class="line"><span class="comment">&quot;&amp;String&quot;是找不到消息集合编号&amp;消息编号时，会默认提示该内容。</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><ul><li><strong>messagebox不同buttons类型：</strong></li></ul><table><thead><tr><th>Category</th><th>Value</th><th>Constant</th><th>Meaning</th></tr></thead><tbody><tr><td>Buttons</td><td>0</td><td>%MsgStyle_OK</td><td>The message box contains one push button: OK.</td></tr><tr><td></td><td>1</td><td>%MsgStyle_OKCancel</td><td>The message box contains two pushbuttons: OK and Cancel.</td></tr><tr><td></td><td>2</td><td>%MsgStyle_AbortRetryIgnore</td><td>The message box contains three pushbuttons: Abort, Retry, and Ignore.</td></tr><tr><td></td><td>3</td><td>%MsgStyle_YesNoCancel</td><td>The message box contains three pushbuttons: Yes, No, and Cancel.</td></tr><tr><td></td><td>4</td><td>%MsgStyle_YesNo</td><td>The message box contains two push buttons: Yes and No.</td></tr><tr><td></td><td>5</td><td>%MsgStyle_RetryCancel</td><td>The message box contains two push buttons: Retry and Cancel.</td></tr></tbody></table><ul><li><strong>messagebox不同buttons类型的返回值（数值型）：</strong></li></ul><table><thead><tr><th align="left">Value</th><th align="left">Constant</th><th align="left">Meaning</th></tr></thead><tbody><tr><td align="left">-1</td><td align="left">%MsgResult_Warning</td><td align="left">Warning was generated.</td></tr><tr><td align="left">1</td><td align="left">%MsgResult_OK</td><td align="left">OK button was selected.</td></tr><tr><td align="left">2</td><td align="left">%MsgResult_Cancel</td><td align="left">Cancel button was selected.</td></tr><tr><td align="left">3</td><td align="left">%MsgResult_Abort</td><td align="left">Abort button was selected.</td></tr><tr><td align="left">4</td><td align="left">%MsgResult_Retry</td><td align="left">Retry button was selected.</td></tr><tr><td align="left">5</td><td align="left">%MsgResult_Ignore</td><td align="left">Ignore button was selected.</td></tr><tr><td align="left">6</td><td align="left">%MsgResult_Yes</td><td align="left">Yes button was selected.</td></tr><tr><td align="left">7</td><td align="left">%MsgResult_No</td><td align="left">No button was selected.</td></tr></tbody></table><h3 id="winmessage"><a href="#winmessage" class="headerlink" title="winmessage"></a>winmessage</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//一般用于调试测试使用；</span></span><br><span class="line">winmessage(<span class="string">&quot;用于调试&quot;</span>);</span><br></pre></td></tr></table></figure><h3 id="Warning"><a href="#Warning" class="headerlink" title="Warning"></a>Warning</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//一般在报表中使用警告；</span></span><br><span class="line">Warning(<span class="string">&quot;警告内容是啥呢~~&quot;</span>);</span><br><span class="line"><span class="comment">//直接提示默认内容</span></span><br><span class="line"><span class="comment">//不会中断程序；</span></span><br><span class="line"><span class="function">Warning <span class="title">MsgGet</span><span class="params">(<span class="number">1000</span>, <span class="number">1</span>, &amp;String)</span></span>;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">&quot;1000&quot;PS中的消息集合编号，&quot;1&quot;是PS中的消息编号；&quot;&amp;String&quot;是找不到消息集合编号&amp;消息编号时，会默认提示该内容。</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h3 id="Error"><a href="#Error" class="headerlink" title="Error"></a>Error</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Error(<span class="string">&quot;错误内容是啥呢~~&quot;</span>)</span><br><span class="line"><span class="comment">//直接提示默认内容</span></span><br><span class="line"><span class="comment">//会中断程序；</span></span><br><span class="line"><span class="function">Error <span class="title">MsgGet</span><span class="params">(<span class="number">11100</span>, <span class="number">180</span>, &amp;String)</span></span>;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">&quot;11100&quot;PS中的消息集合编号，&quot;180&quot;是PS中的消息编号；&quot;&amp;String&quot;是找不到消息集合编号&amp;消息编号时，会默认提示该内容。</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h3 id="MsgGet"><a href="#MsgGet" class="headerlink" title="MsgGet"></a>MsgGet</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//只做获取消息；无论消息的严重性如何，只获取消息的描述内容；</span></span><br><span class="line">&amp;MsgText = MsgGet(<span class="number">30000</span>, <span class="number">2</span>, <span class="string">&quot;Message not found&quot;</span>);</span><br></pre></td></tr></table></figure><h3 id="MsgGetExplainText"><a href="#MsgGetExplainText" class="headerlink" title="MsgGetExplainText"></a>MsgGetExplainText</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//获取消息的同时，可以动态替换消息内容；</span></span><br><span class="line">&amp;MsgText = MsgGetExplainText(message_set, message_num, default_msg_txt[, paramlist])</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">消息中的动态参数用‘:1’‘:2’作为形参；函数的默认返回值default_msg_txt后的字段为动态输入的实际参数；</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h3 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h3><p>​    一般来说，MessageBox、Warning、winmessage函数不会终止程序；Error会终止程序。当然，根据选择的不同的消息严重性也会结果不同，例如：MessageBox采用的消息如果严重性时取消或者错误，也会终止程序。</p><p>一切内容以PeopleBook中的内容为准： </p><blockquote><footer><strong>PeopleBook</strong><cite><a href="https://docs.oracle.com/cd/E91187_01/pt855pbr2/eng/pt/tpcl/langref_PeopleCodeBuilt-inFunctionsAndLanguageConstructs_M.html?pli=ul_d65e26_tpcl#u5d2c34ab-0fc4-47e8-96fe-ff960c7e9292"><u>PeopleCode Built-in Functions and Language Constructs: M</u></a></cite></footer></blockquote>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PeopleCode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PeopleSoft-查询视图配置</title>
      <link href="2020/07/05/PeopleSoft-%E6%9F%A5%E8%AF%A2%E8%A7%86%E5%9B%BE%E9%85%8D%E7%BD%AE/"/>
      <url>2020/07/05/PeopleSoft-%E6%9F%A5%E8%AF%A2%E8%A7%86%E5%9B%BE%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h2 id="级联搜索视图"><a href="#级联搜索视图" class="headerlink" title="级联搜索视图"></a>级联搜索视图</h2><h3 id="效果示例"><a href="#效果示例" class="headerlink" title="效果示例"></a>效果示例</h3><img src=https://gitee.com/gek7777/cdn.io/raw/master/image/1591161810774.png ><a id="more"></a><h3 id="级联搜索视图-表设计"><a href="#级联搜索视图-表设计" class="headerlink" title="级联搜索视图/表设计"></a>级联搜索视图/表设计</h3><p>第一级设计：</p><img src=https://gitee.com/gek7777/cdn.io/raw/master/image/1591161810774.png ><p>搜索视图的key是当前表（页面引用表）。注意：该级视图字段名需要和页面表一致，否则点击下级搜索视图的时候对应的上级字段不会自动赋值的。</p><img src=https://gitee.com/gek7777/cdn.io/raw/master/image/1591161943346.png ><p>第二级设计：</p><img src=https://gitee.com/gek7777/cdn.io/raw/master/image/1591161988766.png ><p>比上级搜索视图多了一个key值。这样，通过选择上级搜索视图的字段后，会自动赋值给该级搜索视图。注意：该级视图字段名需要和页面表一致。</p><img src=https://gitee.com/gek7777/cdn.io/raw/master/image/1591162028872.png ><p>第三级设计：</p><img src=https://gitee.com/gek7777/cdn.io/raw/master/image/1591162065250.png ><p>比上级搜索视图多了一个key值。这样，通过选择上级搜索视图的字段后，会自动赋值给该级搜索视图。注意：该级视图字段名需要和页面表一致。</p><img src=https://gitee.com/gek7777/cdn.io/raw/master/image/1591162111295.png ><h3 id="重中之重"><a href="#重中之重" class="headerlink" title="重中之重"></a>重中之重</h3><p><strong>一定要注意，查询视图中的字段名和查询该视图的字段名一定要相同！！！还有需要注意设置searchKeys，如果不设置的话，会导致搜索弹框无任何内容！！</strong></p>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PeopleSoft </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PeopleSoft-Meta-Sql常用函数</title>
      <link href="2020/07/05/PeopleSoft-Meta-Sql%E5%B8%B8%E7%94%A8%E5%87%BD%E6%95%B0/"/>
      <url>2020/07/05/PeopleSoft-Meta-Sql%E5%B8%B8%E7%94%A8%E5%87%BD%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<p>Mate_Sql常用的函数，主要是时间的…</p><h2 id="Date"><a href="#Date" class="headerlink" title="Date"></a>Date</h2><h3 id="当前日期：-CurrentDateIn"><a href="#当前日期：-CurrentDateIn" class="headerlink" title="当前日期：%CurrentDateIn"></a>当前日期：%CurrentDateIn</h3><p>通常可以使用在SQL select 或 update 语句的where 条件语句中，表示当前系统日期时间；</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> tbl t <span class="keyword">where</span> t.effdt &lt; %CurrentDateIn;</span><br><span class="line"><span class="keyword">update</span> tbl t <span class="keyword">set</span> t.name = <span class="string">&quot;修改&quot;</span> <span class="keyword">where</span> t.effdt &lt; %CurrentDateIn;</span><br></pre></td></tr></table></figure><h2 id="Time"><a href="#Time" class="headerlink" title="Time"></a>Time</h2><h3 id="当前时间：-CurrentTimeIn"><a href="#当前时间：-CurrentTimeIn" class="headerlink" title="当前时间：%CurrentTimeIn"></a>当前时间：%CurrentTimeIn</h3><p>通常可以使用在SQL select 或 update 语句的where 条件语句中，表示当前系统时间；</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> tbl t <span class="keyword">where</span> t.effdt &lt; %CurrentDateIn;</span><br><span class="line"><span class="keyword">update</span> tbl t <span class="keyword">set</span> t.name = <span class="string">&quot;修改&quot;</span> <span class="keyword">where</span> t.effdt &lt; %CurrentDateIn;</span><br></pre></td></tr></table></figure><h2 id="取生效时间"><a href="#取生效时间" class="headerlink" title="取生效时间"></a>取生效时间</h2><p>通常可以使用在SQL where 条件语句中;</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--语句示例：</span></span><br><span class="line">%EffDtCheck(recordname , r1, as_of_date)</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">recordname --表名；</span></span><br><span class="line"><span class="comment">r1 --表别名；</span></span><br><span class="line"><span class="comment">as_of_date --的时间</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="comment">--等同以下的语句，即取小于指定日期的最大生效日期的数据；</span></span><br><span class="line"><span class="keyword">SELECT</span> . . . </span><br><span class="line">   FROM. . . </span><br><span class="line">   <span class="keyword">WHERE</span> correlation_id.EFFDT = (<span class="keyword">SELECT</span> <span class="keyword">MAX</span>(EFFDT) <span class="keyword">FROM</span> recordname </span><br><span class="line">      <span class="keyword">WHERE</span> recordname.KEYFIELD1 = correlation_id.KEYFIELD1 </span><br><span class="line">      <span class="keyword">AND</span> recordname.KEYFIELD2 = correlation_id.KEYFIELD2 </span><br><span class="line">      AND. . . </span><br><span class="line">      <span class="keyword">AND</span> recordname.EFFDT &lt;= %DATEIN(as_of_date));</span><br><span class="line"><span class="comment">--在PeopleCode中使用：</span></span><br><span class="line">SQLExec(&quot;<span class="keyword">SELECT</span> FNUM <span class="keyword">FROM</span> PS_REC A <span class="keyword">WHERE</span> %EffDtCheck(:<span class="number">1</span>, A, :<span class="number">2</span>)<span class="string">&quot;, &amp;Rec, &amp;Date);</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">-- 注意：这个和status是无关的，所以语句中还得加上status的判断！！！！</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PeopleSoft </tag>
            
            <tag> PeopleCede </tag>
            
            <tag> Meta-SQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PeopleSoft-服务器技术</title>
      <link href="2020/06/22/PeopleSoft-%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%8A%80%E6%9C%AF/"/>
      <url>2020/06/22/PeopleSoft-%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%8A%80%E6%9C%AF/</url>
      
        <content type="html"><![CDATA[<h2 id="PeopleSoft服务器技术"><a href="#PeopleSoft服务器技术" class="headerlink" title="PeopleSoft服务器技术"></a>PeopleSoft服务器技术</h2><h3 id="服务器架构"><a href="#服务器架构" class="headerlink" title="服务器架构"></a>服务器架构</h3><ol><li>DB服务</li><li>APP服务</li><li>PRCS服务</li><li>WEB服务</li></ol><a id="more"></a><img src=https://gitee.com/gek7777/cdn.io/raw/master/image/1592187109955.png ><h3 id="服务器连接工具"><a href="#服务器连接工具" class="headerlink" title="服务器连接工具"></a>服务器连接工具</h3><p>PeopleSoft服务器一般有两类，Linux和windows系统，常用的一般是Linux系统，这里最主要是讲解Linux系统里的服务器相关知识：</p><p>连接工具包一般使用：XManager</p><ul><li><p>一般使用Xshell 来启停服务器；</p><p>新建连接：</p><img src=https://gitee.com/gek7777/cdn.io/raw/master/image/1592187396359.png ></li><li><p>一般使用Xftp在服务器上传/下载文件；</p><p>可以在Xshell中点击新建文件传输，快捷启动Xftp：</p><img src=https://gitee.com/gek7777/cdn.io/raw/master/image/1592187562387.png ></li></ul><h3 id="服务器启停"><a href="#服务器启停" class="headerlink" title="服务器启停"></a>服务器启停</h3><h4 id="关闭PeopleSoft系统服务器的顺序："><a href="#关闭PeopleSoft系统服务器的顺序：" class="headerlink" title="关闭PeopleSoft系统服务器的顺序："></a>关闭PeopleSoft系统服务器的顺序：</h4><ol><li>关闭Web服务；</li><li>关闭Prcs服务；</li><li>关闭App服务；</li><li>关闭DB服务；</li></ol><p>注意：2、3的顺序可以互换，但是1和4不能调整顺序！</p><p><strong>1、关闭Web服务操作</strong></p><p>以psoft用户登录服务器，执行psadmin进入PeopleSoft系统管理界面（有些服务器用psadm或者psadm2用户），界面如下：</p><img src=https://gitee.com/gek7777/cdn.io/raw/master/image/1592188034556.png ><p>输入4，回车（选择Web服务）；</p><img src=https://gitee.com/gek7777/cdn.io/raw/master/image/1592188288370.png ><p>输入1，回车（选择管理现有Domian）；</p><img src=https://gitee.com/gek7777/cdn.io/raw/master/image/1592188332914.png ><p>选择需要关闭的Domain，回车（按实际情况选择，每个环境不一样）；</p><img src=https://gitee.com/gek7777/cdn.io/raw/master/image/1592188411780.png ><p>选择2，回车（关闭当前Web）；</p><img src=https://gitee.com/gek7777/cdn.io/raw/master/image/1592188477612.png ><p>Web已成功关闭（The domain has stopped ，说明已经关闭了）。</p><p><strong>2、关闭APP服务</strong></p><img src=https://gitee.com/gek7777/cdn.io/raw/master/image/1592188583442.png ><p>在系统管理界面，输入1，回车，进入应用服务管理；</p><img src=https://gitee.com/gek7777/cdn.io/raw/master/image/1592188699310.png ><p>输入1，选择管理现有Domain；</p><img src=https://gitee.com/gek7777/cdn.io/raw/master/image/1592188741875.png ><p>选择对应的Domain，回车关闭；</p><img src=https://gitee.com/gek7777/cdn.io/raw/master/image/1592188781203.png ><p>输入2，回车，关闭当前APP服务。</p><img src=https://gitee.com/gek7777/cdn.io/raw/master/image/1592188853979.png ><p>输入2，强制关闭当前APP服务；</p><img src=https://gitee.com/gek7777/cdn.io/raw/master/image/1592188876136.png ><p>当看到”All domain pricesses hava stopped”,说明APP服务已经关闭。</p><p><strong>3、关闭Prcs服务</strong></p><p>输入2，回车进入进程服务；</p><img src=https://gitee.com/gek7777/cdn.io/raw/master/image/1592210006889.png ><p>输入1，选择管理现有的Domain；</p><img src=https://gitee.com/gek7777/cdn.io/raw/master/image/1592210041311.png ><p>选择要关闭的的Domain，回车；</p><img src=https://gitee.com/gek7777/cdn.io/raw/master/image/1592210089407.png ><p>输入2，回车，关闭当前Prcs；</p><img src=https://gitee.com/gek7777/cdn.io/raw/master/image/1592210146629.png ><p>输入2，强制关闭当前Prcs；</p><img src=https://gitee.com/gek7777/cdn.io/raw/master/image/1592210167716.png ><p>“All domain processes hava stopped”,说明Prcs已经关闭。</p><img src=https://gitee.com/gek7777/cdn.io/raw/master/image/1592210180195.png ><p><strong>4、关闭DB服务</strong></p><p>以Oracle用户登录服务器，执行sqlplus / as sysdba进入；</p><img src=https://gitee.com/gek7777/cdn.io/raw/master/image/1592210381158.png ><p>输入“shutdown immediate;”，回车。（注意：分号要带上。）</p><img src=https://gitee.com/gek7777/cdn.io/raw/master/image/1592210504832.png ><p>DB服务器已关闭（看到Oracle instance shut down，说明数据库正常关闭）。</p><h4 id="启动PeopleSoft系统服务的顺序"><a href="#启动PeopleSoft系统服务的顺序" class="headerlink" title="启动PeopleSoft系统服务的顺序"></a>启动PeopleSoft系统服务的顺序</h4><p>PeopleSoft服务器启动顺序（注意：2、3的顺序可以调整)</p><ol><li>启动DB服务；</li><li>启动Prcs服务；</li><li>启动App服务；</li><li>启动Web服务。</li></ol><p><strong>1、启动DB服务</strong></p><p>以Oracle用户登录服务器，执行sqlplus / as sysdba 进入；</p><img src=https://gitee.com/gek7777/cdn.io/raw/master/image/1592210850566.png ><p>输入“startup;”，回车。（注意：后面符号带上。）</p><img src=https://gitee.com/gek7777/cdn.io/raw/master/image/1592211032310.png ><p>看到database opened，DB服务器已经启动了。（注意：如果是12c以上的容器数据库，这步只是启动了容器，需要再启动PDB数据。）</p><p>输入“alter session set container = HR92DEV;”，回车。（注意：HR92DEV为数据库实例名，具体情况会拥有具体名字。）</p><img src=https://gitee.com/gek7777/cdn.io/raw/master/image/1592211924669.png ><p>输入“startup;”，回车，启动数据库；</p><img src=https://gitee.com/gek7777/cdn.io/raw/master/image/1592211964196.png ><p>看到Pluggable Database opened，表示DB已经启动了。</p><p><strong>2、启动App服务</strong></p><p>以psoft用户登录服务器，执行psadmin进入PeopleSoft系统管理界面：（有些服务器用psadm或者psadm2用户）</p><img src=https://gitee.com/gek7777/cdn.io/raw/master/image/1592212023879.png ><p>输入1，回车，选择应用服务；</p><img src=https://gitee.com/gek7777/cdn.io/raw/master/image/1592212059175.png ><p>输入1，回车，选择管理现有Domain；</p><img src=https://gitee.com/gek7777/cdn.io/raw/master/image/1592212079096.png ><p>选择要启动的Domain，回车，按实际需要启动的App服务；</p><img src=https://gitee.com/gek7777/cdn.io/raw/master/image/1592212149944.png ><p>输入1，回车，启动App服务；</p><img src=https://gitee.com/gek7777/cdn.io/raw/master/image/1592212201628.png ><p>看到9 processes started，表示App已经启动成功。</p><p><strong>3、启动Prcs服务</strong></p><p>以psoft用户登录服务器，执行psadmin进入PeopleSoft系统管理界面：（有些服务器用psadm或者psadm2用户）；</p><img src=https://gitee.com/gek7777/cdn.io/raw/master/image/1592212281103.png ><p>输入2，回车，选择进程服务；</p><img src=https://gitee.com/gek7777/cdn.io/raw/master/image/1592212306560.png ><p>输入1，回车，管理现有的Domain服务；</p><img src=https://gitee.com/gek7777/cdn.io/raw/master/image/1592212328132.png ><p>输入1，回车，选择要启动的Domain，根据实际情况选择；</p><img src=https://gitee.com/gek7777/cdn.io/raw/master/image/1592212377183.png ><p>输入1，回车，启动进程服务；</p><img src=https://gitee.com/gek7777/cdn.io/raw/master/image/1592212394320.png ><p>看到 7 processes started  ，说明Prcs服务已经启动完成。</p><p><strong>4、启动Web服务</strong></p><p>以psoft用户登录服务器，执行psadmin进入PeopleSoft系统管理界面：（有些服务器用psadm或者psadm2用户）；</p><img src=https://gitee.com/gek7777/cdn.io/raw/master/image/1592212470157.png ><p>输入4，回车，选择Web服务；</p><img src=https://gitee.com/gek7777/cdn.io/raw/master/image/1592212572041.png ><p>输入1，选择现有的Domain；</p><img src=https://gitee.com/gek7777/cdn.io/raw/master/image/1592212597985.png ><p>输入1，回车，选择需要启动的Domain，根据实际情况选择；</p><img src=https://gitee.com/gek7777/cdn.io/raw/master/image/1592212626611.png ><p>输入1，回车，启动Web，等待几分钟；</p><img src=https://gitee.com/gek7777/cdn.io/raw/master/image/1592212646294.png ><p>看到 The domain has started，说明Web服务已经启动了。</p><h3 id="服务器配置修改"><a href="#服务器配置修改" class="headerlink" title="服务器配置修改"></a>服务器配置修改</h3><h4 id="应用服务器常用配置"><a href="#应用服务器常用配置" class="headerlink" title="应用服务器常用配置"></a>应用服务器常用配置</h4><p>应用服务配置一般路径：$PS_CFG_HOME/appserv/HR92DEV/psappsrv.cfg</p><img src=https://gitee.com/gek7777/cdn.io/raw/master/image/1592212964212.png ><p>注意：</p><ol><li>请修改配置前一定要切换到PS安装用户下，例如psoft，或者psadm，pasdm2（切换命令：su - psoft）；</li><li><strong>修改配置前一定要备份！！！</strong></li></ol><p>1.修改配置文件，输入：vi psappsrv.cfg</p><img src=https://gitee.com/gek7777/cdn.io/raw/master/image/1592213019501.png ><p>2.利用Xftp工具文本打开后修改。</p><h4 id="进程服务常用配置"><a href="#进程服务常用配置" class="headerlink" title="进程服务常用配置"></a>进程服务常用配置</h4><p>进程服务配置一般路径：$PS_CFG_HOME/appserv/prcs/HR92DEV/psprcs.cfg</p><img src=https://gitee.com/gek7777/cdn.io/raw/master/image/1592213206860.png ><p>注意：</p><ol><li>请修改配置前一定要切换到PS安装用户下，例如psoft，或者psadm，psamd2（切换命令：su - psoft）；</li><li>修改配置前一定要备份；</li></ol><p>1.修改配置文件：vi psprcs.cfg</p><img src=https://gitee.com/gek7777/cdn.io/raw/master/image/1592213256251.png ><p>2.利用Xftp工具文本打开后修改。</p>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 服务器 </tag>
            
            <tag> PeopleSoft </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>FavSong-公子向北走（男声版）</title>
      <link href="2020/04/28/FavSong-%E5%85%AC%E5%AD%90%E5%90%91%E5%8C%97%E8%B5%B0%EF%BC%88%E7%94%B7%E5%A3%B0%E7%89%88%EF%BC%89/"/>
      <url>2020/04/28/FavSong-%E5%85%AC%E5%AD%90%E5%90%91%E5%8C%97%E8%B5%B0%EF%BC%88%E7%94%B7%E5%A3%B0%E7%89%88%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&id=1371466883&auto=1&height=66"></iframe><a id="more"></a><ul><li><h2 id="评"><a href="#评" class="headerlink" title="评"></a><strong>评</strong></h2></li></ul><blockquote><p> <strong>我与春风皆过客 你携秋水揽星河</strong> </p><p>​                                                        ——  <a href="https://music.163.com/#/user/home?id=619375813"> 赎狱 </a></p></blockquote><blockquote><p> <strong>这一生所喜不多 , 细数朝暮风花雪 差你这篇诗中月</strong></p><p>   ​                                                        ——<a href="https://music.163.com/#/user/home?id=123704858"> 做一个明媚的女孩Y </a></p></blockquote><ul><li><h2 id="词"><a href="#词" class="headerlink" title="词"></a><strong>词</strong></h2></li></ul><blockquote><h3 id="公子向北走-男声版"><a href="#公子向北走-男声版" class="headerlink" title="公子向北走 (男声版)"></a>公子向北走 (男声版)</h3><p>作曲 : 李亮节</p><p>作词 : 佚名</p><p>改编：李亮节</p><p>小生不才</p><p>未得小姐青睐</p><p>扰小姐良久</p><p>小姐勿怪</p><p>小姐向北走</p><p>小生我向南瞧</p><p>此生就此别过了</p><p>难以忘怀</p><p>愿你三冬暖</p><p>愿你春不寒</p><p>愿你天黑有灯</p><p>下雨有伞</p><p>愿你善其身</p><p>愿你遇良人</p><p>暖色浮余生</p><p>有好人相伴</p><p>所有爱慕之意</p><p>止于唇齿间</p><p>掩于岁月</p><p>匿于将来</p><p>与你今生无缘</p><p>请无需挂念</p><p>雨打芭蕉</p><p>无可无奈</p><p>愿你三冬暖</p><p>愿你春不寒</p><p>愿你天黑有灯</p><p>下雨有伞</p><p>愿你善其身</p><p>愿你遇良人</p><p>暖色浮余生</p><p>有好人相伴</p><p>愿你三冬暖</p><p>愿你春不寒</p><p>愿你天黑有灯</p><p>下雨有伞</p><p>愿你善其身</p><p>愿你遇良人</p><p>暖色浮余生</p><p>有好人相伴</p><p>小生不才</p><p>未得小姐青睐</p><p>扰小姐良久</p><p>小姐</p><p>勿怪</p></blockquote><ul><li><h2 id="权"><a href="#权" class="headerlink" title="权"></a><strong>权</strong></h2></li></ul><blockquote><footer><strong>网易云音乐 · 崔忠华</strong><cite><a href="https://music.163.com/#/song?id=1366755865">公子向北走 (男声版)</a></cite></footer></blockquote>]]></content>
      
      
      <categories>
          
          <category> 生活 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> song </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>FavSong-世间美好与你环环相扣</title>
      <link href="2020/04/28/FavSong-%E4%B8%96%E9%97%B4%E7%BE%8E%E5%A5%BD%E4%B8%8E%E4%BD%A0%E7%8E%AF%E7%8E%AF%E7%9B%B8%E6%89%A3/"/>
      <url>2020/04/28/FavSong-%E4%B8%96%E9%97%B4%E7%BE%8E%E5%A5%BD%E4%B8%8E%E4%BD%A0%E7%8E%AF%E7%8E%AF%E7%9B%B8%E6%89%A3/</url>
      
        <content type="html"><![CDATA[<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&id=1399534395&auto=1&height=66"></iframe><a id="more"></a><ul><li><h2 id="评"><a href="#评" class="headerlink" title="评"></a><strong>评</strong></h2></li></ul><blockquote><p><strong>愿世间的美好，与你环环相扣。</strong></p><p>​                                                        —— 作者 · <a href="https://music.163.com/#/user/home?id=1323807037">  柏松M  </a></p></blockquote><blockquote><p> **温柔的晚风 傍晚的晚霞 解暑的西瓜 冒泡的可乐 人间的美好多着呢 不要为眼前的黑暗所迷惑. 你要相信自己配得上世间一切的美好. **</p><p>​                                                        —— <a href="https://music.163.com/#/user/home?id=287742806">_权全圈 </a></p></blockquote><ul><li><h2 id="词"><a href="#词" class="headerlink" title="词"></a><strong>词</strong></h2></li></ul><blockquote><h3 id="世间美好与你环环相扣（薛之谦粉丝版）"><a href="#世间美好与你环环相扣（薛之谦粉丝版）" class="headerlink" title="世间美好与你环环相扣（薛之谦粉丝版）"></a>世间美好与你环环相扣（薛之谦粉丝版）</h3><p>作曲 : 柏松</p><p>作词 : 尹初七</p><p>编曲：彭圣杰</p><p>原唱：柏松</p><p>混音：胡宸</p><p>演唱：韦小力</p><p>偏偏秉烛夜 游</p><p>午夜星辰 似奔走之友</p><p>爱你每个结痂伤口</p><p>酿成的陈年烈酒</p><p>入喉尚算可口</p><p>怎么泪水 还偶尔失守</p><p>邀你细看心中缺口</p><p>裂缝中留存 温柔</p><p>此时已莺飞草长 爱的人正在路上</p><p>我知他风雨兼程 途经日暮不赏</p><p>穿越人海 只为与你相拥</p><p>此刻已皓月当空 爱的人手捧星光</p><p>我知他乘风破浪 去了黑暗一趟</p><p>感同身受 给你救赎热 望</p><p>知道你不能 还要你感受</p><p>让星光加了一点彩虹</p><p>让樱花偷偷 吻你额头</p><p>让世间美好 与你环环相扣</p><p>此时已莺飞草长 爱的人正在路上</p><p>我知他风雨兼程 途经日暮不赏</p><p>穿越人海 只为与你相拥</p><p>此刻已皓月当空 爱的人手捧星光</p><p>我知他乘风破浪 去了黑暗一趟</p><p>感同身受 给你救赎热 望</p><p>此时已莺飞草长 爱的人正在路上</p><p>我知他风雨兼程 途经日暮不赏</p><p>穿越人海 只为与你相拥</p><p>此刻已皓月当空 爱的人手捧星光</p><p>我知他乘风破浪 去了黑暗一趟</p><p>感同身受 给你救赎热 望</p><p>知道你不能 还要你感受</p><p>让星光加了一点彩虹</p><p>当樱花开的纷纷扬扬</p><p>当世间美好 与你环环相扣</p></blockquote><ul><li><h2 id="权"><a href="#权" class="headerlink" title="权"></a><strong>权</strong></h2></li></ul><blockquote><footer><strong>网易云音乐 · 柏松</strong><cite><a href="https://music.163.com/#/song?id=1363948882">世间美好与你环环相扣</a></cite></footer></blockquote>]]></content>
      
      
      <categories>
          
          <category> 生活 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> song </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PeopleSoft-weblib库的使用</title>
      <link href="2020/04/28/PeopleSoft-weblib%E5%BA%93%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
      <url>2020/04/28/PeopleSoft-weblib%E5%BA%93%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="新建一个weblib，通过url传参的方式操作数据库。"><a href="#新建一个weblib，通过url传参的方式操作数据库。" class="headerlink" title="新建一个weblib，通过url传参的方式操作数据库。"></a>新建一个weblib，通过url传参的方式操作数据库。</h2><p>如图：新建record  ，新建field ，在record field  fieldformula 中编写peoplecode代码，如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">Function <span class="title">IScript_zl</span><span class="params">()</span></span>;</span><br><span class="line">   </span><br><span class="line">   Local string &amp;orderId;</span><br><span class="line">   </span><br><span class="line">   &amp;orderId = %Request.GetParameter(<span class="string">&quot;zl_orderId&quot;</span>);</span><br><span class="line">   </span><br><span class="line">   Local number &amp;ordId = Value(&amp;orderId);</span><br><span class="line">   Local SQL &amp;sql;</span><br><span class="line">   %Response.Write(&amp;orderId | <span class="string">&quot;&lt;BR&gt;&quot;</span>);</span><br><span class="line">   &amp;sql = CreateSQL(<span class="string">&quot;select * FROM PS_ZL_ORDER_HEL WHERE ZL_ORDERID=:1&quot;</span>, &amp;orderId);</span><br><span class="line">   While &amp;sql.Fetch(&amp;a, &amp;b, &amp;c, &amp;d);</span><br><span class="line">      %Response.Write(<span class="string">&quot;id =&quot;</span> | &amp;a | <span class="string">&quot;  text: &quot;</span> | &amp;b | <span class="string">&quot;   描述 :&quot;</span> | &amp;c | <span class="string">&quot;        总价 =&quot;</span> | &amp;d);</span><br><span class="line">   End-While;</span><br><span class="line">   </span><br><span class="line">End-Function;</span><br></pre></td></tr></table></figure><p><strong>注意：函数名必须是IScript_xxx，否则在web库中查找不到。（script代表脚本）</strong></p><a id="more"></a><p>在许可权列表中注册这个weblib，如图：<img src=https://gitee.com/gek7777/cdn.io/raw/master/image/1553611738393.png ></p><p>登录帐号，该账号拥有注册了该weblib的许可权列表。在地址框中输入：</p><p><a href="http://139.159.238.180:8080/psp/ps/EMPLOYEE/HRMS/s/WEBLIB_HELLO.ZL_HELLO.FieldFormula.IScript_ZL?zl_orderId=1">http://139.159.238.180:8080/psp/ps/EMPLOYEE/HRMS/s/WEBLIB_HELLO.ZL_HELLO.FieldFormula.IScript_ZL?zl_orderId=1</a></p><p><strong>注意：<a href="http://139.159.238.180:8080/psp/ps/EMPLOYEE/HRMS/s/%E5%90%8E%E9%9D%A2%E5%8A%A0record.field%EF%BC%88%E8%AE%B0%E5%BD%95%E5%90%8D+%E5%AD%97%E6%AE%B5%E5%90%8D%EF%BC%89.fieldFormula.IScript_xxxx%EF%BC%88%E5%87%BD%E6%95%B0%E5%90%8D%EF%BC%89?%E6%9D%A1%E4%BB%B6">http://139.159.238.180:8080/psp/ps/EMPLOYEE/HRMS/s/后面加record.field（记录名+字段名）.fieldFormula.IScript_xxxx（函数名）?条件</a></strong></p><p>查询结果：</p><img src=https://gitee.com/gek7777/cdn.io/raw/master/image/1553612036777.png >]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PeopleSoft </tag>
            
            <tag> PeopleCode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PeopleSoft-BI-Publisher-打印PDF证明</title>
      <link href="2020/04/28/PeopleSoft-BI-Publisher-%E6%89%93%E5%8D%B0PDF%E8%AF%81%E6%98%8E/"/>
      <url>2020/04/28/PeopleSoft-BI-Publisher-%E6%89%93%E5%8D%B0PDF%E8%AF%81%E6%98%8E/</url>
      
        <content type="html"><![CDATA[<p>PeopleSoft中，新增PDF打印功能，整体实现流程如下…</p><a id="more"></a><h2 id="安装Oracle的BI-Publisher工具"><a href="#安装Oracle的BI-Publisher工具" class="headerlink" title="安装Oracle的BI_Publisher工具"></a>安装Oracle的BI_Publisher工具</h2><p>根据使用系统选择对应版本下载，路径如图：</p><img src=https://gitee.com/gek7777/cdn.io/raw/master/image/1587558108752.png ><h2 id="创建XML文件"><a href="#创建XML文件" class="headerlink" title="创建XML文件"></a>创建XML文件</h2><p>根据需要动态生成的字段，创建XML文件：</p><img src=https://gitee.com/gek7777/cdn.io/raw/master/image/1587558312277.png ><h2 id="创建RTF文件"><a href="#创建RTF文件" class="headerlink" title="创建RTF文件"></a>创建RTF文件</h2><p>根据提供的word模板生成RFT文件：</p><img src=https://gitee.com/gek7777/cdn.io/raw/master/image/1587558556995.png ><p>1、点击示例XML，导入上一步创建的XML文件。</p><p>2、点击字段，在需要动态赋值的字段处插入字段。</p><p>3、点击预览PDF文件。</p><p>4、测试通过。</p><h2 id="将RTF和XML文件上传至PS系统"><a href="#将RTF和XML文件上传至PS系统" class="headerlink" title="将RTF和XML文件上传至PS系统"></a>将RTF和XML文件上传至PS系统</h2><p>新增数据源文件-XML文件，路径：</p><img src=https://gitee.com/gek7777/cdn.io/raw/master/image/1587569831915.png ><p>新增报告定义-RTF文件，路径：</p><img src=https://gitee.com/gek7777/cdn.io/raw/master/image/1587569968903.png ><img src=https://gitee.com/gek7777/cdn.io/raw/master/image/1587570015140.png ><h2 id="利用代码写入动态文件"><a href="#利用代码写入动态文件" class="headerlink" title="利用代码写入动态文件"></a>利用代码写入动态文件</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br></pre></td><td class="code"><pre><span class="line">&lt;*----------------------------------------打印离职证明----------------------------------------*&gt;</span><br><span class="line"></span><br><span class="line">Function Print2</span><br><span class="line">   Local string &amp;DESCR, &amp;year, &amp;month, &amp;day;</span><br><span class="line">   Local number &amp;i;</span><br><span class="line">   Local XmlDoc &amp;xmlDoc;</span><br><span class="line">   Local XmlNode &amp;root_node, &amp;sub_node, &amp;text_node;</span><br><span class="line">   </span><br><span class="line">   Local number &amp;check1;</span><br><span class="line">   Local PSXP_RPTDEFNMANAGER:ReportDefn &amp;oRptDefn;</span><br><span class="line">   </span><br><span class="line">   rem Local File &amp;dataFile;</span><br><span class="line">   rem Local string &amp;last_name, &amp;descr, &amp;descr2, &amp;SNDKP;</span><br><span class="line">   rem Local number &amp;index;</span><br><span class="line">   Local C_PACKAGE:HtmlToExcle &amp;htmlToExlcle = create C_PACKAGE:HtmlToExcle();</span><br><span class="line">   </span><br><span class="line">   <span class="comment">/****************************写入数据 begin**************************************/</span></span><br><span class="line">   Local Rowset &amp;RS = GetLevel0()(<span class="number">1</span>).GetRowset(Scroll.C_PRINT_DATA_VW);</span><br><span class="line">   </span><br><span class="line">   rem 由于员工ID是唯一主键，所以查询出来只能有一条数据;</span><br><span class="line">   <span class="comment">/* For &amp;i = 1 To &amp;RS.ActiveRowCount;</span></span><br><span class="line"><span class="comment">  End-For;*/</span></span><br><span class="line">   If (&amp;RS.GetRow(<span class="number">1</span>).C_PRINT_SR_WK.C_PRINT_CH.Value = <span class="number">1</span>) Then</span><br><span class="line">      rem   Local string &amp;filepath = &amp;htmlToExlcle.createFolder(<span class="string">&quot;xml&quot;</span>);</span><br><span class="line">      </span><br><span class="line">      <span class="comment">/*定义路径*/</span></span><br><span class="line">      &amp;sDirSep = <span class="string">&quot;/&quot;</span>;</span><br><span class="line">      REM 创建路径指定的目录和在路径中指定的任何不存在的目录;</span><br><span class="line">      CreateDirectory(<span class="string">&quot;XMLP&quot;</span>, %FilePath_Relative);</span><br><span class="line">      REM 字符串/files/XMLP/唯一标识符(字符串);</span><br><span class="line">      &amp;RptOutputDir = GetEnv(<span class="string">&quot;PS_SERVDIR&quot;</span>) | &amp;sDirSep | <span class="string">&quot;files&quot;</span> | &amp;sDirSep | <span class="string">&quot;XMLP&quot;</span> | &amp;sDirSep | UuidGen();</span><br><span class="line">      <span class="function">REM <span class="title">MessageBox</span><span class="params">(<span class="number">0</span>, <span class="string">&quot;&quot;</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="string">&quot;&quot;</span> | &amp;RptOutputDir)</span></span>;</span><br><span class="line">      CreateDirectory(&amp;RptOutputDir, %FilePath_Absolute);</span><br><span class="line">      </span><br><span class="line">      Local string &amp;filepath = &amp;RptOutputDir | <span class="string">&quot;/&quot;</span> | %OperatorId | %Date | <span class="string">&quot;.xml&quot;</span>;</span><br><span class="line">      </span><br><span class="line">      Local File &amp;xmlFile = GetFile(&amp;filepath, <span class="string">&quot;W&quot;</span>, <span class="string">&quot;U&quot;</span>, %FilePath_Absolute);</span><br><span class="line">      <span class="function">rem <span class="title">MessageBox</span><span class="params">(<span class="number">0</span>, <span class="string">&quot;&quot;</span>, <span class="number">0</span>, <span class="number">0</span>, &amp;filepath)</span></span>;</span><br><span class="line">      If Not &amp;xmlFile.IsOpen Then</span><br><span class="line">         Error (<span class="string">&quot;Can&#x27;t open the file &quot;</span> | &amp;xmlFile);</span><br><span class="line">      End-If;</span><br><span class="line">      &amp;xmlFile.WriteLine(<span class="string">&quot;&lt;?xml version=&#x27;1.0&#x27; encoding=&#x27;utf-8&#x27;?&gt;&quot;</span>);</span><br><span class="line">      &amp;xmlFile.WriteLine(<span class="string">&quot;&lt;ROOT&gt;&quot;</span>);</span><br><span class="line">      </span><br><span class="line">      REM 获取员工性别;</span><br><span class="line">      Local string &amp;CC;</span><br><span class="line">      SQLExec(<span class="string">&quot;SELECT CASE WHEN SEX=&#x27;M&#x27; THEN &#x27;男&#x27; ELSE &#x27;女&#x27; END FROM PS_PERSON WHERE EMPLID=:1&quot;</span>, &amp;RS.GetRow(<span class="number">1</span>).C_PRINT_DATA_VW.C_PRINT_ID.Value, &amp;CC);</span><br><span class="line">      rem &amp;xmlFile.WriteLine(<span class="string">&quot;&lt;SEX&gt;&quot;</span> | &amp;CC | <span class="string">&quot;&lt;/SEX&gt;&quot;</span>) <span class="comment">/*性别*/</span>;</span><br><span class="line">      <span class="function">REM <span class="title">MessageBox</span><span class="params">(<span class="number">0</span>, <span class="string">&quot;&quot;</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="string">&quot;性别:&quot;</span> | &amp;CC)</span></span>;</span><br><span class="line">      If &amp;CC = <span class="string">&quot;男&quot;</span> Then</span><br><span class="line">         &amp;xmlFile.WriteLine(<span class="string">&quot;&lt;NAME&gt;&quot;</span> | &amp;RS.GetRow(<span class="number">1</span>).C_PRINT_DATA_VW.C_PRINT_NAME.Value | <span class="string">&quot;先生&lt;/NAME&gt;&quot;</span>) <span class="comment">/*员工姓名-男*/</span>;</span><br><span class="line">      Else</span><br><span class="line">         &amp;xmlFile.WriteLine(<span class="string">&quot;&lt;NAME&gt;&quot;</span> | &amp;RS.GetRow(<span class="number">1</span>).C_PRINT_DATA_VW.C_PRINT_NAME.Value | <span class="string">&quot;女士&lt;/NAME&gt;&quot;</span>) <span class="comment">/*员工姓名-女*/</span>;</span><br><span class="line">      End-If;</span><br><span class="line">      rem &amp;xmlFile.WriteLine(<span class="string">&quot;&lt;EMPLID&gt;&quot;</span> | &amp;RS.GetRow(<span class="number">1</span>).C_PRINT_DATA_VW.C_PRINT_ID.Value | <span class="string">&quot;&lt;/EMPLID&gt;&quot;</span>) <span class="comment">/*员工ID*/</span>;</span><br><span class="line">      &amp;xmlFile.WriteLine(<span class="string">&quot;&lt;CARDID&gt;&quot;</span> | &amp;RS.GetRow(<span class="number">1</span>).C_PRINT_DATA_VW.NATIONAL_ID.Value | <span class="string">&quot;&lt;/CARDID&gt;&quot;</span>); <span class="comment">/*身份证ID*/</span></span><br><span class="line">      </span><br><span class="line">      rem 获取当前部门+职务（岗位）的开始时间;</span><br><span class="line">      Local string &amp;bgndate;</span><br><span class="line">      &amp;bgndate = String(&amp;RS.GetRow(<span class="number">1</span>).C_PRINT_DATA_VW.DATE_CHAR1.Value);</span><br><span class="line">      &amp;bgnyear = Substring(&amp;bgndate, <span class="number">1</span>, <span class="number">4</span>);</span><br><span class="line">      &amp;bgnmon = Substring(&amp;bgndate, <span class="number">6</span>, <span class="number">2</span>);</span><br><span class="line">      &amp;bgnday = Substring(&amp;bgndate, <span class="number">9</span>, <span class="number">2</span>);</span><br><span class="line">      &amp;xmlFile.WriteLine(<span class="string">&quot;&lt;BGNYEAR&gt;&quot;</span> | &amp;bgnyear | <span class="string">&quot;&lt;/BGNYEAR&gt;&quot;</span>); <span class="comment">/*年*/</span></span><br><span class="line">      &amp;xmlFile.WriteLine(<span class="string">&quot;&lt;BGNMON&gt;&quot;</span> | &amp;bgnmon | <span class="string">&quot;&lt;/BGNMON&gt;&quot;</span>); <span class="comment">/*月*/</span></span><br><span class="line">      &amp;xmlFile.WriteLine(<span class="string">&quot;&lt;BGNDAY&gt;&quot;</span> | &amp;bgnday | <span class="string">&quot;&lt;/BGNDAY&gt;&quot;</span>); <span class="comment">/*日*/</span></span><br><span class="line">      </span><br><span class="line">      rem 获取当前部门+职务（岗位）的结束时间;</span><br><span class="line">      Local string &amp;enddate;</span><br><span class="line">      &amp;enddate = String(&amp;RS.GetRow(<span class="number">1</span>).C_PRINT_DATA_VW.DATE_CHAR.Value);</span><br><span class="line">      &amp;endyear = Substring(&amp;enddate, <span class="number">1</span>, <span class="number">4</span>);</span><br><span class="line">      &amp;endmon = Substring(&amp;enddate, <span class="number">6</span>, <span class="number">2</span>);</span><br><span class="line">      &amp;endday = Substring(&amp;enddate, <span class="number">9</span>, <span class="number">2</span>);</span><br><span class="line">      &amp;xmlFile.WriteLine(<span class="string">&quot;&lt;ENDYEAR&gt;&quot;</span> | &amp;endyear | <span class="string">&quot;&lt;/ENDYEAR&gt;&quot;</span>); <span class="comment">/*年*/</span></span><br><span class="line">      &amp;xmlFile.WriteLine(<span class="string">&quot;&lt;ENDMON&gt;&quot;</span> | &amp;endmon | <span class="string">&quot;&lt;/ENDMON&gt;&quot;</span>); <span class="comment">/*月*/</span></span><br><span class="line">      &amp;xmlFile.WriteLine(<span class="string">&quot;&lt;ENDDAY&gt;&quot;</span> | &amp;endday | <span class="string">&quot;&lt;/ENDDAY&gt;&quot;</span>); <span class="comment">/*日*/</span></span><br><span class="line">      </span><br><span class="line">      </span><br><span class="line">      &amp;xmlFile.WriteLine(<span class="string">&quot;&lt;DEPT&gt;&quot;</span> | &amp;RS.GetRow(<span class="number">1</span>).C_PRINT_DATA_VW.C_PRINT_DT_DSCR.Value | <span class="string">&quot;&lt;/DEPT&gt;&quot;</span>); <span class="comment">/*部门*/</span></span><br><span class="line">      &amp;xmlFile.WriteLine(<span class="string">&quot;&lt;POSITION&gt;&quot;</span> | &amp;RS.GetRow(<span class="number">1</span>).C_PRINT_DATA_VW.C_PRINT_POST.Value | <span class="string">&quot;&lt;/POSITION&gt;&quot;</span>); <span class="comment">/*职务*/</span></span><br><span class="line">      rem 获取离职原因;</span><br><span class="line">      Local string &amp;reason;</span><br><span class="line">      SQLExec(<span class="string">&quot;select r.descr from ps_job j,ps_ACTN_REASON_TBL r where j.action_reason = r.ACTION_REASON and  j.effdt = (select max(pj.effdt) from ps_job pj where pj.emplid = j.emplid and pj.effdt &lt; sysdate and pj.empl_rcd = &#x27;0&#x27;) and j.effseq = (select max(pj1.effseq) from ps_job pj1 where pj1.emplid = j.emplid) and j.emplid = :1;&quot;</span>, &amp;RS.GetRow(<span class="number">1</span>).C_PRINT_DATA_VW.C_PRINT_ID.Value, &amp;reason);</span><br><span class="line">      &amp;xmlFile.WriteLine(<span class="string">&quot;&lt;REASON&gt;&quot;</span> | &amp;reason | <span class="string">&quot;&lt;/REASON&gt;&quot;</span>); <span class="comment">/*离职原因*/</span></span><br><span class="line">      </span><br><span class="line">      &amp;xmlFile.WriteLine(<span class="string">&quot;&lt;JYXY&gt;未签订竞业限制协议。&lt;/JYXY&gt;&quot;</span>); <span class="comment">/*未签订竞业协议*/</span></span><br><span class="line">      rem 获取竞业协议;</span><br><span class="line">      REM <span class="keyword">if</span> *** = ture then </span><br><span class="line">  &amp;xmlFile.WriteLine(<span class="string">&quot;&lt;JYXY&gt;&quot;</span>|<span class="string">&quot;未签订竞业限制协议&quot;</span>|<span class="string">&quot;&lt;/JYXY&gt;&quot;</span>); <span class="comment">/*未签订竞业协议*/</span></span><br><span class="line">      REM <span class="keyword">else</span> </span><br><span class="line">  &amp;xmlFile.WriteLine(<span class="string">&quot;&lt;JYXY&gt;&quot;</span>|<span class="string">&quot;签订竞业限制协议（协议期限为劳动合同解除或终止之日起满XXX个月）&quot;</span>|<span class="string">&quot;&lt;/JYXY&gt;&quot;</span>); <span class="comment">/*签订竞业协议*/</span></span><br><span class="line">      REM end-<span class="keyword">if</span>;</span><br><span class="line">      </span><br><span class="line">      &amp;xmlFile.WriteLine(<span class="string">&quot;&lt;COM&gt;&quot;</span> | &amp;RS.GetRow(<span class="number">1</span>).C_PRINT_DATA_VW.COMPANYID.Value | <span class="string">&quot;&lt;/COM&gt;&quot;</span>); <span class="comment">/*公司*/</span></span><br><span class="line">      rem 获取系统年月日;</span><br><span class="line">      Local string &amp;sysdate;</span><br><span class="line">      SQLExec(<span class="string">&quot;SELECT TO_CHAR(SYSDATE , &#x27;YYYY-MM-DD&#x27;) FROM DUAL&quot;</span>, &amp;sysdate);</span><br><span class="line">      REM &amp;sysdate = String(%DATE);</span><br><span class="line">      <span class="function">REM <span class="title">MessageBox</span><span class="params">(<span class="number">0</span>, <span class="string">&quot;&quot;</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="string">&quot;系统时间:&quot;</span> | &amp;sysdate)</span></span>;</span><br><span class="line">      &amp;sysyear = Substring(&amp;sysdate, <span class="number">1</span>, <span class="number">4</span>);</span><br><span class="line">      &amp;sysmon = Substring(&amp;sysdate, <span class="number">6</span>, <span class="number">2</span>);</span><br><span class="line">      &amp;sysday = Substring(&amp;sysdate, <span class="number">9</span>, <span class="number">2</span>);</span><br><span class="line">      &amp;xmlFile.WriteLine(<span class="string">&quot;&lt;SYSYEAR&gt;&quot;</span> | &amp;sysyear | <span class="string">&quot;&lt;/SYSYEAR&gt;&quot;</span>); <span class="comment">/*年*/</span></span><br><span class="line">      &amp;xmlFile.WriteLine(<span class="string">&quot;&lt;SYSMON&gt;&quot;</span> | &amp;sysmon | <span class="string">&quot;&lt;/SYSMON&gt;&quot;</span>); <span class="comment">/*月*/</span></span><br><span class="line">      &amp;xmlFile.WriteLine(<span class="string">&quot;&lt;SYSDAY&gt;&quot;</span> | &amp;sysday | <span class="string">&quot;&lt;/SYSDAY&gt;&quot;</span>); <span class="comment">/*日*/</span></span><br><span class="line">      &amp;xmlFile.WriteLine(<span class="string">&quot;&lt;/ROOT&gt;&quot;</span>);</span><br><span class="line">      </span><br><span class="line">      rem C_PERS_TEMP_VW;</span><br><span class="line">      <span class="comment">/****************************写入数据   end**************************************/</span></span><br><span class="line">      &amp;xmlFile.Close();</span><br><span class="line">      </span><br><span class="line">      &amp;oRptDefn = create PSXP_RPTDEFNMANAGER:ReportDefn(<span class="string">&quot;C_EMP_I_TEMP&quot;</span>);</span><br><span class="line">      &amp;oRptDefn.Get();</span><br><span class="line">      rem &amp;oRptDefn.OutDestination = %FilePath;</span><br><span class="line">      &amp;oRptDefn.SetRuntimeDataXMLFile(&amp;filepath);</span><br><span class="line">      rem &amp;oRptDefn.ProcessInstance = &amp;ProcessInstance;</span><br><span class="line">      &amp;oRptDefn.ProcessReport(<span class="string">&quot;C_EMP_I_TEMP_1&quot;</span>, <span class="string">&quot;ZHS&quot;</span>, %Date, <span class="string">&quot;&quot;</span>);</span><br><span class="line">      </span><br><span class="line">      CommitWork();</span><br><span class="line">      </span><br><span class="line">      &amp;oRptDefn.DisplayOutput();</span><br><span class="line">      REM &amp;oRptDefn.Publish(<span class="string">&quot;&quot;</span>, <span class="string">&quot;&quot;</span>, <span class="string">&quot;&quot;</span>, &amp;ProcessInstance);</span><br><span class="line">      <span class="keyword">try</span></span><br><span class="line">      <span class="keyword">catch</span> Exception &amp;Err</span><br><span class="line">         If Not &amp;oRptDefn = Null Then</span><br><span class="line">            &amp;oRptDefn.Close();</span><br><span class="line">         End-If;</span><br><span class="line">         WriteToLog(%ApplicationLogFence_Error, &amp;Err.ToString());</span><br><span class="line">         &amp;Err.Output();</span><br><span class="line">         </span><br><span class="line">      end-<span class="keyword">try</span>;</span><br><span class="line">      <span class="comment">/**************把下载成功的数据写入到log表中********************/</span></span><br><span class="line">      SQLExec(<span class="string">&quot;select 1 from ps_c_print_log where c_print_id=:1&quot;</span>, &amp;RS.GetRow(<span class="number">1</span>).C_PRINT_DATA_VW.C_PRINT_ID.Value, &amp;check1);</span><br><span class="line">      </span><br><span class="line">      If &amp;check1 = <span class="number">0</span> Then</span><br><span class="line">         Local Record &amp;REC = CreateRecord(Record.C_PRINT_LOG);</span><br><span class="line">         &amp;REC.C_PRINT_ID.Value = &amp;RS.GetRow(<span class="number">1</span>).C_PRINT_DATA_VW.C_PRINT_ID.Value;</span><br><span class="line">         &amp;REC.C_PRINT_FLAG.Value = <span class="string">&quot;1&quot;</span>;</span><br><span class="line">         &amp;REC.Insert();</span><br><span class="line">         CommitWork();</span><br><span class="line">      End-If;</span><br><span class="line">   Else</span><br><span class="line">      Error <span class="string">&quot;请勾选需要打印证明的员工&quot;</span>;</span><br><span class="line">   End-If;</span><br><span class="line">End-Function;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PeopleSoft </tag>
            
            <tag> PeopleCode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PeopleSoft-component组件调用CI（component-Interface）</title>
      <link href="2020/04/28/PeopleSoft-component%E7%BB%84%E4%BB%B6%E8%B0%83%E7%94%A8CI%EF%BC%88component-Interface%EF%BC%89/"/>
      <url>2020/04/28/PeopleSoft-component%E7%BB%84%E4%BB%B6%E8%B0%83%E7%94%A8CI%EF%BC%88component-Interface%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h3 id="设计订单录入系统–内部PeopleCode调用-CI"><a href="#设计订单录入系统–内部PeopleCode调用-CI" class="headerlink" title="设计订单录入系统–内部PeopleCode调用 CI"></a>设计<strong>订单录入系统</strong>–内部PeopleCode调用 CI</h3><p>​    设计思路：建立一个新的订单录入系统，通过提交按钮，通过调用CI 来操作订单管理component 将页面中的数据提交至订单管理系统中，并保存。</p><p>​    流程：设计CI接口 –&gt;建record表–&gt;设计page页面–&gt;生成组件，编写提交按钮触发的PeopleCode代码–&gt;注册组件</p><a id="more"></a><h3 id="一、设计一个CI接口–基于订单管理系统"><a href="#一、设计一个CI接口–基于订单管理系统" class="headerlink" title="一、设计一个CI接口–基于订单管理系统"></a>一、设计一个CI接口–基于订单管理系统</h3><p>点击file ——&gt;new 新建一个component interface ，基于订单管理组件，意思就是该接口对外的接口。</p><img src=https://gitee.com/gek7777/cdn.io/raw/master/image/1553674604689.png ><p>在component interface 的properties设置中，做好备注，在standard methods中勾选可以指定方法的访问权限。保存即可。</p><h3 id="二、新建record表插入需要的已有field，按钮表-ZL-COMMITMENT-，做好每一个record的注释。"><a href="#二、新建record表插入需要的已有field，按钮表-ZL-COMMITMENT-，做好每一个record的注释。" class="headerlink" title="二、新建record表插入需要的已有field，按钮表  ZL_COMMITMENT ，做好每一个record的注释。"></a>二、新建record表插入需要的已有field，按钮表  ZL_COMMITMENT ，做好每一个record的注释。</h3><p>​    因为是需要调用CI接口，所以，field和订单管理系统的一致就可以了。</p><ul><li><strong>订单编号：</strong>勾选<strong>key</strong>，<strong>search key</strong>（出现在搜索栏的选择项）（自动勾选<strong>List Box Item</strong>：出现在搜索结果的列表里），并且在Edits中勾选<strong>required</strong>，<strong>表示这个field是必填项</strong>（即字段前面带*的输入框，无值的话会报错）。</li><li><strong>订单子序号：</strong>勾选key ，search key，勾选required。注意：translate field，在edits中必须将它的Edit Type —&gt;Table Edit —&gt;Type :Translate Table Edit **，否则在保存page页面的时候，会报该field字段无效的错误。</li><li><strong>注意：</strong>这里有个orderid，这个id勾选key，search key ，list box item 就好了，不需要勾选required。它与subid两个field组成一个key。</li><li><strong>新建表ZL_COMMITMENT 插入一个field COMMITMENT_CNTL，作为控制按钮。在component层面的这个field change的时候写PeopleCode。</strong></li><li>保存为HRAPP类型。</li><li><strong>重中之重：必须要build这两个record！！！否则，数据库中没有表，程序会报sql错误。</strong></li></ul><h3 id="三、设计page页面。将建好的两个record加入到page中。做好注释"><a href="#三、设计page页面。将建好的两个record加入到page中。做好注释" class="headerlink" title="三、设计page页面。将建好的两个record加入到page中。做好注释"></a>三、设计page页面。将建好的两个record加入到page中。做好注释</h3><p>0层的参照订单管理系统的page设计就行。</p><p>​    相同部分设计过程略。</p><p>​    特殊的是0层的按钮设计。</p><p>​        1.添加一个push button 到页面，对其进行设置。<strong>注意：要检查层级关系。</strong></p><img src=https://gitee.com/gek7777/cdn.io/raw/master/image/1553675982064.png ><p>1层的这次不要Grid了，采用插入Scroll观察两者的区别。</p><p>​    优点：不需要单独设计drop-down list box格式，会自动识别。</p><p>​    缺点：只能展示一条record记录。</p><h4 id="注意："><a href="#注意：" class="headerlink" title="注意："></a><strong>注意：</strong></h4><img src=https://gitee.com/gek7777/cdn.io/raw/master/image/1553676281799.png ><h3 id="四、生成组件component。将page拖进去，改Item-Label-的名字。"><a href="#四、生成组件component。将page拖进去，改Item-Label-的名字。" class="headerlink" title="四、生成组件component。将page拖进去，改Item Label 的名字。"></a>四、生成组件component。将page拖进去，改Item Label 的名字。</h3><p>​    打开component层面的按钮filed PeopleCode将CI 拖进去，自动生成代码，然后改掉根据需求该代码。[*] 表示需要替换的。</p><img src=https://gitee.com/gek7777/cdn.io/raw/master/image/1553677040794.png ><p>代码具体为：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">时间：2019/03/27</span></span><br><span class="line"><span class="comment">作者：赵龙</span></span><br><span class="line"><span class="comment">事件：订单录入系统page中点击提交，通过ci操作订单管理系统，保存提交内容。</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="comment">/* ===&gt;</span></span><br><span class="line"><span class="comment">This is a dynamically generated PeopleCode template to be used only as a helper</span></span><br><span class="line"><span class="comment">to the application developer.</span></span><br><span class="line"><span class="comment">You need to replace all references to &#x27;[*]&#x27; OR default values with  references to</span></span><br><span class="line"><span class="comment">PeopleCode variables and/or a Rec.Fields. */</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Local File &amp;fileLog;</span><br><span class="line">Local ApiObject &amp;oSession, &amp;oZlOrdercomCi;</span><br><span class="line">Local ApiObject &amp;oZlOrderDetCollection, &amp;oZlOrderDet;</span><br><span class="line"></span><br><span class="line"><span class="function">Function <span class="title">errorHandler</span><span class="params">()</span></span></span><br><span class="line"><span class="function">   Local ApiObject &amp;oPSMessageCollection, &amp;oPSMessage</span>;</span><br><span class="line">   Local number &amp;i;</span><br><span class="line">   Local string &amp;sErrMsgSetNum, &amp;sErrMsgNum, &amp;sErrMsgText, &amp;sErrType;</span><br><span class="line">   </span><br><span class="line">   &amp;oPSMessageCollection = &amp;oSession.PSMessages;</span><br><span class="line">   For &amp;i = <span class="number">1</span> To &amp;oPSMessageCollection.Count</span><br><span class="line">      &amp;oPSMessage = &amp;oPSMessageCollection.Item(&amp;i);</span><br><span class="line">      &amp;sErrMsgSetNum = &amp;oPSMessage.MessageSetNumber;</span><br><span class="line">      &amp;sErrMsgNum = &amp;oPSMessage.MessageNumber;</span><br><span class="line">      &amp;sErrMsgText = &amp;oPSMessage.Text;</span><br><span class="line">      rem &amp;fileLog.WriteLine(&amp;sErrType | <span class="string">&quot; (&quot;</span> | &amp;sErrMsgSetNum | <span class="string">&quot;,&quot;</span> | &amp;sErrMsgNum | <span class="string">&quot;) - &quot;</span> | &amp;sErrMsgText);</span><br><span class="line">      MessageBox(<span class="number">0</span>, <span class="string">&quot;&quot;</span>, <span class="number">9999</span>, <span class="number">9999</span>, <span class="string">&quot;&quot;</span> | &amp;sErrType | <span class="string">&quot; (&quot;</span> | &amp;sErrMsgSetNum | <span class="string">&quot;,&quot;</span> | &amp;sErrMsgNum | <span class="string">&quot;) - &quot;</span> | &amp;sErrMsgText);</span><br><span class="line">   End-For;</span><br><span class="line">   rem ***** Delete the Messages from the collection *****;</span><br><span class="line">   &amp;oPSMessageCollection.DeleteAll();</span><br><span class="line">End-Function;</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span></span><br><span class="line">   rem ***** Set the Log File *****;</span><br><span class="line">   rem &amp;fileLog = GetFile(<span class="string">&quot;C:\Users\zhaolong\AppData\Local\Temp\ZL_ORDERCOM_CI.log&quot;</span>, <span class="string">&quot;w&quot;</span>, <span class="string">&quot;a&quot;</span>, %FilePath_Absolute);</span><br><span class="line">   rem &amp;fileLog.WriteLine(<span class="string">&quot;Begin&quot;</span>);</span><br><span class="line">   rem ***** Get current PeopleSoft Session *****;</span><br><span class="line">   &amp;oSession = %Session;</span><br><span class="line">   </span><br><span class="line">   rem ***** Set the PeopleSoft Session Error Message Mode *****;</span><br><span class="line">   rem ***** <span class="number">0</span> - None *****;</span><br><span class="line">   rem ***** <span class="number">1</span> - <span class="function">PSMessage Collection <span class="title">only</span> <span class="params">(<span class="keyword">default</span>)</span> *****</span>;</span><br><span class="line">   rem ***** <span class="number">2</span> - Message Box only *****;</span><br><span class="line">   rem ***** <span class="number">3</span> - Both collection and message box *****;</span><br><span class="line">   &amp;oSession.PSMessagesMode = <span class="number">1</span>;</span><br><span class="line">   </span><br><span class="line">   rem ***** Get the Component Interface *****;</span><br><span class="line">   &amp;oZlOrdercomCi = &amp;oSession.GetCompIntfc(CompIntfc.ZL_ORDERCOM_CI);</span><br><span class="line">   </span><br><span class="line">   If &amp;oZlOrdercomCi = Null Then</span><br><span class="line">      </span><br><span class="line">      errorHandler();</span><br><span class="line">      <span class="keyword">throw</span> CreateException(<span class="number">0</span>, <span class="number">0</span>, <span class="string">&quot; getCi faidled&quot;</span>);</span><br><span class="line">   End-If;</span><br><span class="line">   </span><br><span class="line">   rem ***** Set the Component Interface Mode *****;</span><br><span class="line">   &amp;oZlOrdercomCi.InteractiveMode = True;</span><br><span class="line">   &amp;oZlOrdercomCi.GetHistoryItems = True;</span><br><span class="line">   &amp;oZlOrdercomCi.EditHistoryItems = True;</span><br><span class="line">   </span><br><span class="line">   rem ***** Set Component Interface Get/Create Keys *****;</span><br><span class="line">   &amp;oZlOrdercomCi.ZL_ORDERID = GetLevel0()(<span class="number">1</span>).ZL_ORDER_HEL_1.ZL_ORDERID.Value;</span><br><span class="line">   </span><br><span class="line">   rem ***** Execute Get *****;</span><br><span class="line">   If Not &amp;oZlOrdercomCi.Get() Then</span><br><span class="line">      MessageBox(<span class="number">0</span>, <span class="string">&quot;&quot;</span>, <span class="number">9999</span>, <span class="number">9999</span>, <span class="string">&quot;ci没有&quot;</span>);</span><br><span class="line">      rem ***** Execute Create ******;</span><br><span class="line">      If Not &amp;oZlOrdercomCi.Create() Then;</span><br><span class="line">         rem ***** Unable to Create Component Interface <span class="keyword">for</span> the Add keys provided. *****;</span><br><span class="line">         MessageBox(<span class="number">0</span>, <span class="string">&quot;&quot;</span>, <span class="number">9999</span>, <span class="number">9999</span>, <span class="string">&quot;ci对象创建失败&quot;</span>);</span><br><span class="line">         errorHandler();</span><br><span class="line">         <span class="keyword">throw</span> CreateException(<span class="number">0</span>, <span class="number">0</span>, <span class="string">&quot;Create failed&quot;</span>);</span><br><span class="line">      End-If;</span><br><span class="line">   End-If;</span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">   rem ***** Begin: Get/Set Component Interface Properties *****;</span><br><span class="line">   rem ***** Get/Set Level <span class="number">0</span> Field Properties *****;</span><br><span class="line">   </span><br><span class="line">   &amp;oZlOrdercomCi.ZL_ORDERID = GetLevel0()(<span class="number">1</span>).ZL_ORDER_HEL_1.ZL_ORDERID.Value;</span><br><span class="line">   </span><br><span class="line">   MessageBox(<span class="number">0</span>, <span class="string">&quot;&quot;</span>, <span class="number">9999</span>, <span class="number">9999</span>, <span class="string">&quot;id赋值&quot;</span>);</span><br><span class="line">   &amp;oZlOrdercomCi.ZL_ORDERDESC = GetLevel0()(<span class="number">1</span>).ZL_ORDER_HEL_1.ZL_ORDERDESC.Value;</span><br><span class="line">   MessageBox(<span class="number">0</span>, <span class="string">&quot;&quot;</span>, <span class="number">9999</span>, <span class="number">9999</span>, <span class="string">&quot;描述赋值&quot;</span>);</span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">   &amp;oZlOrderDetCollection = &amp;oZlOrdercomCi.ZL_ORDER_DET;</span><br><span class="line">   Local integer &amp;i17;</span><br><span class="line">   For &amp;i17 = &amp;oZlOrderDetCollection.count To <span class="number">1</span> Step - <span class="number">1</span></span><br><span class="line">      &amp;oZlOrderDetCollection.deleteItem(&amp;i17);</span><br><span class="line">   End-For;</span><br><span class="line">   MessageBox(<span class="number">0</span>, <span class="string">&quot;&quot;</span>, <span class="number">9999</span>, <span class="number">9999</span>, <span class="string">&quot;清空集合&quot;</span>);</span><br><span class="line">   </span><br><span class="line">   For &amp;i17 = <span class="number">1</span> <span class="function">To <span class="title">GetLevel0</span><span class="params">()</span><span class="params">(<span class="number">1</span>)</span>.<span class="title">GetRowset</span><span class="params">(Scroll.ZL_ORDER_DET_1)</span>.ActiveRowCount</span>;</span><br><span class="line">      &amp;oZlOrderDetCollection.insertItem(&amp;oZlOrderDetCollection.count);</span><br><span class="line">      </span><br><span class="line">      </span><br><span class="line">      &amp;oZlOrderDet = &amp;oZlOrderDetCollection.Item(&amp;oZlOrderDetCollection.count);</span><br><span class="line">      </span><br><span class="line">      </span><br><span class="line">      &amp;oZlOrderDet.ZL_ORDER_SUBID = GetLevel0()(<span class="number">1</span>).GetRowset(Scroll.ZL_ORDER_DET_1).GetRow(&amp;i17).ZL_ORDER_DET_1.ZL_ORDER_SUBID.Value;</span><br><span class="line">      </span><br><span class="line">      </span><br><span class="line">      &amp;oZlOrderDet.ZL_ORDER_SUBTYPE = GetLevel0()(<span class="number">1</span>).GetRowset(Scroll.ZL_ORDER_DET_1).GetRow(&amp;i17).ZL_ORDER_DET_1.ZL_ORDER_SUBTYPE.Value;</span><br><span class="line">      </span><br><span class="line">      </span><br><span class="line">      &amp;oZlOrderDet.ZL_ORDER_SUBDESC_1 = GetLevel0()(<span class="number">1</span>).GetRowset(Scroll.ZL_ORDER_DET_1).GetRow(&amp;i17).ZL_ORDER_DET_1.ZL_ORDER_SUBDESC.Value;</span><br><span class="line">      </span><br><span class="line">      </span><br><span class="line">      &amp;oZlOrderDet.ZL_ORDERQUAN = GetLevel0()(<span class="number">1</span>).GetRowset(Scroll.ZL_ORDER_DET_1).GetRow(&amp;i17).ZL_ORDER_DET_1.ZL_ORDERQUAN.Value;</span><br><span class="line">      </span><br><span class="line">      </span><br><span class="line">      &amp;oZlOrderDet.ZL_ORDERPRI = GetLevel0()(<span class="number">1</span>).GetRowset(Scroll.ZL_ORDER_DET_1).GetRow(&amp;i17).ZL_ORDER_DET_1.ZL_ORDERPRI.Value;</span><br><span class="line">      MessageBox(<span class="number">0</span>, <span class="string">&quot;&quot;</span>, <span class="number">9999</span>, <span class="number">9999</span>, <span class="string">&quot;完成第&quot;</span> | &amp;i17 | <span class="string">&quot;个record赋值&quot;</span>);</span><br><span class="line">      </span><br><span class="line">   End-For;</span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">   rem ***** End: Get/Set Component Interface Properties *****;</span><br><span class="line">   </span><br><span class="line">   rem ***** Execute Save *****;</span><br><span class="line">   If Not &amp;oZlOrdercomCi.Save() Then;</span><br><span class="line">      MessageBox(<span class="number">0</span>, <span class="string">&quot;&quot;</span>, <span class="number">9999</span>, <span class="number">9999</span>, <span class="string">&quot;订单导入失败&quot;</span>);</span><br><span class="line">      errorHandler();</span><br><span class="line">      <span class="keyword">throw</span> CreateException(<span class="number">0</span>, <span class="number">0</span>, <span class="string">&quot;Save failed&quot;</span>);</span><br><span class="line">   Else</span><br><span class="line">      MessageBox(<span class="number">0</span>, <span class="string">&quot;&quot;</span>, <span class="number">9999</span>, <span class="number">9999</span>, <span class="string">&quot;订单导入成功&quot;</span>);</span><br><span class="line">   End-If;</span><br><span class="line">   </span><br><span class="line">   rem ***** Execute Cancel *****;</span><br><span class="line">   If Not &amp;oZlOrdercomCi.Cancel() Then;</span><br><span class="line">      errorHandler();</span><br><span class="line">      <span class="keyword">throw</span> CreateException(<span class="number">0</span>, <span class="number">0</span>, <span class="string">&quot;Cancel failed&quot;</span>);</span><br><span class="line">   End-If;</span><br><span class="line">   </span><br><span class="line"><span class="keyword">catch</span> Exception &amp;ex</span><br><span class="line">   MessageBox(<span class="number">0</span>, <span class="string">&quot;&quot;</span>, <span class="number">9999</span>, <span class="number">9999</span>, <span class="string">&quot;运行异常&quot;</span>);</span><br><span class="line">   </span><br><span class="line">end-<span class="keyword">try</span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="五、注册组件。"><a href="#五、注册组件。" class="headerlink" title="五、注册组件。"></a>五、注册组件。</h3><p>与订单管理系统相同步骤。过程略。</p>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PeopleSoft </tag>
            
            <tag> Component Interface </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Oracle中 Group组函数</title>
      <link href="2020/04/04/Oracle-Group%E7%BB%84%E5%87%BD%E6%95%B0/"/>
      <url>2020/04/04/Oracle-Group%E7%BB%84%E5%87%BD%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<h2 id="求平均函数：AVG"><a href="#求平均函数：AVG" class="headerlink" title="求平均函数：AVG()"></a>求平均函数：AVG()</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">avg</span>(<span class="keyword">column</span>) <span class="keyword">from</span> table1;</span><br></pre></td></tr></table></figure><h2 id="求数量：COUNT"><a href="#求数量：COUNT" class="headerlink" title="求数量：COUNT()"></a>求数量：COUNT()</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">count</span>(<span class="keyword">column</span>) <span class="keyword">from</span> table1;</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="求最大值：MAX"><a href="#求最大值：MAX" class="headerlink" title="求最大值：MAX()"></a>求最大值：MAX()</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">max</span>(<span class="keyword">column</span>) <span class="keyword">from</span> table1;</span><br></pre></td></tr></table></figure><h2 id="求最小值：MIN"><a href="#求最小值：MIN" class="headerlink" title="求最小值：MIN()"></a>求最小值：MIN()</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">min</span>(<span class="keyword">column</span>) <span class="keyword">from</span> table1;</span><br></pre></td></tr></table></figure><h2 id="求和：SUM"><a href="#求和：SUM" class="headerlink" title="求和：SUM()"></a>求和：SUM()</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">sum</span>(<span class="keyword">column</span>) <span class="keyword">from</span> table1;</span><br></pre></td></tr></table></figure><h2 id="标准差函数：STDDEV"><a href="#标准差函数：STDDEV" class="headerlink" title="标准差函数：STDDEV()"></a>标准差函数：STDDEV()</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">stddev</span>(<span class="keyword">column</span>) <span class="keyword">from</span> table1;</span><br></pre></td></tr></table></figure><h2 id="方差函数：VARIANCE"><a href="#方差函数：VARIANCE" class="headerlink" title="方差函数：VARIANCE()"></a>方差函数：VARIANCE()</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">variance</span>(<span class="keyword">column</span>) <span class="keyword">from</span> table1;</span><br></pre></td></tr></table></figure><h2 id="分组函数：group-by"><a href="#分组函数：group-by" class="headerlink" title="分组函数：group by"></a>分组函数：group by</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> deptno, <span class="keyword">AVG</span>(sal) <span class="keyword">FROM</span> emp <span class="keyword">GROUP</span> <span class="keyword">BY</span> deptno;</span><br><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">先按部门分组，再计算平均值。</span></span><br><span class="line"><span class="comment">结果：DEPTNO  AVG(SAL)</span></span><br><span class="line"><span class="comment">10      2889</span></span><br><span class="line"><span class="comment">20    3330</span></span><br><span class="line"><span class="comment">30      1000</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> deptno,JOB,<span class="keyword">AVG</span>(sal) <span class="keyword">FROM</span> emp <span class="keyword">GROUP</span> <span class="keyword">BY</span> deptno,JOB ;</span><br><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">先按部门和工作分组，再计算平均值。</span></span><br><span class="line"><span class="comment">结果：DEPTNO JOB     AVG(SAL)</span></span><br><span class="line"><span class="comment">10  CLIK    2889</span></span><br><span class="line"><span class="comment">20LUCY    3330</span></span><br><span class="line"><span class="comment">30  GOTOS   1000</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="HAVING-函数"><a href="#HAVING-函数" class="headerlink" title="HAVING 函数"></a>HAVING 函数</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span><span class="keyword">column</span>, group_function</span><br><span class="line"><span class="keyword">FROM</span><span class="keyword">table</span></span><br><span class="line">[<span class="keyword">WHERE</span>condition]</span><br><span class="line">[<span class="keyword">GROUP</span> <span class="keyword">BY</span> group_by_expression]</span><br><span class="line">[<span class="keyword">HAVING</span>group_condition]</span><br><span class="line">[<span class="keyword">ORDER</span> <span class="keyword">BY</span><span class="keyword">column</span>];</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span>  deptno, <span class="keyword">max</span>(sal)</span><br><span class="line">  <span class="keyword">FROM</span>     emp</span><br><span class="line">  <span class="keyword">GROUP</span> <span class="keyword">BY</span> deptno</span><br><span class="line">  <span class="keyword">HAVING</span>   <span class="keyword">max</span>(sal)&gt;<span class="number">2900</span>;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">分析：先按deptno字段分组，再取出sal大于2900的记录。</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span>deptno, <span class="keyword">MIN</span>(sal)</span><br><span class="line"> <span class="keyword">FROM</span>emp</span><br><span class="line"> <span class="keyword">GROUP</span> <span class="keyword">BY</span>deptno</span><br><span class="line"> <span class="keyword">HAVING</span><span class="keyword">MIN</span>(sal) &gt;</span><br><span class="line"> (<span class="keyword">SELECT</span><span class="keyword">MIN</span>(sal)</span><br><span class="line"> <span class="keyword">FROM</span>emp</span><br><span class="line"> <span class="keyword">WHERE</span>deptno = <span class="number">20</span>);</span><br><span class="line"> <span class="comment">/*</span></span><br><span class="line"><span class="comment"> 分析：先取emp表中部门编号为20的记录中最小额薪酬值sal1，然后将emp表按部门标号分组，并且取每组中薪酬记录最小值sal，这个值大于前面的sal1的那些记录会被取出。</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Oracle中 联表查询</title>
      <link href="2020/04/04/Oracle-%E8%81%94%E8%A1%A8%E6%9F%A5%E8%AF%A2/"/>
      <url>2020/04/04/Oracle-%E8%81%94%E8%A1%A8%E6%9F%A5%E8%AF%A2/</url>
      
        <content type="html"><![CDATA[<h2 id="内联表"><a href="#内联表" class="headerlink" title="内联表"></a>内联表</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> table1.column, table2.column</span><br><span class="line">  <span class="keyword">FROM</span> table1, table2</span><br><span class="line"> <span class="keyword">WHERE</span> table1.column = table2.column;</span><br></pre></td></tr></table></figure><h2 id="外联表"><a href="#外联表" class="headerlink" title="外联表"></a>外联表</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*table1 的数据少，table2 的数据多，需要填充左侧*/</span></span><br><span class="line"><span class="keyword">SELECT</span> table1.column, table2.column</span><br><span class="line">  <span class="keyword">FROM</span> table1, table2</span><br><span class="line"> <span class="keyword">WHERE</span> table1.column(+) = table2.column;</span><br><span class="line"> <span class="comment">/*table1 的数据多，table2 的数据少，需要填充右侧*/</span></span><br><span class="line"><span class="keyword">SELECT</span> table1.column, table2.column</span><br><span class="line">  <span class="keyword">FROM</span> table1, table2</span><br><span class="line"> <span class="keyword">WHERE</span> table1.column = table2.column(+);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mysql-安装指引</title>
      <link href="2020/04/02/Mysql-%E5%AE%89%E8%A3%85%E6%8C%87%E5%BC%95/"/>
      <url>2020/04/02/Mysql-%E5%AE%89%E8%A3%85%E6%8C%87%E5%BC%95/</url>
      
        <content type="html"><![CDATA[<h3 id="下载Mysql"><a href="#下载Mysql" class="headerlink" title="下载Mysql"></a>下载Mysql</h3><p> 国内链接：<a href="http://mirrors.sohu.com/mysql/MySQL-8.0/">http://mirrors.sohu.com/mysql/MySQL-8.0/</a> </p><img src=https://gitee.com/gek7777/cdn.io/raw/master/image/1585833007885.png ><a id="more"></a><p>下载后解压，放到想要放的位置即可。</p><h3 id="配置环境变量"><a href="#配置环境变量" class="headerlink" title="配置环境变量"></a>配置环境变量</h3><p>变量名：MYSQL_HOME</p><p>变量值：D:\Program Files\mysql-8.0.11-winx64</p><img src=https://gitee.com/gek7777/cdn.io/raw/master/image/1585833326445.png ><h3 id="生成date文件"><a href="#生成date文件" class="headerlink" title="生成date文件"></a>生成date文件</h3><p>管理员身份运行-CMD</p><img src=https://gitee.com/gek7777/cdn.io/raw/master/image/1585833438368.png ><p>进入Mysql的bin目录：D:\Program Files\mysql-8.0.11-winx64\bin</p><p>执行命令： mysqld –initialize-insecure –user=mysql  </p><p>在D:\Program Files\mysql-8.0.11-winx64\bin目录下生成data目录 </p><img src=https://gitee.com/gek7777/cdn.io/raw/master/image/1585834089716.png ><h3 id="安装Mysql"><a href="#安装Mysql" class="headerlink" title="安装Mysql"></a>安装Mysql</h3><p>继续执行命令： mysqld -install </p><img src=https://gitee.com/gek7777/cdn.io/raw/master/image/1585834147882.png ><h3 id="启动服务"><a href="#启动服务" class="headerlink" title="启动服务"></a>启动服务</h3><p>继续执行命令： net start MySQL </p><img src=https://gitee.com/gek7777/cdn.io/raw/master/image/1585834192307.png ><h3 id="登录Mysql"><a href="#登录Mysql" class="headerlink" title="登录Mysql"></a>登录Mysql</h3><p> 登录mysql:(因为之前没设置密码，所以密码为空，不用输入密码，直接回车即可）</p> <img src=https://gitee.com/gek7777/cdn.io/raw/master/image/1585834264293.png ><h3 id="查询用户密码"><a href="#查询用户密码" class="headerlink" title="查询用户密码"></a>查询用户密码</h3><p> 查询用户密码命令：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select host,user,authentication_string from mysql.user; </span><br></pre></td></tr></table></figure> <img src=https://gitee.com/gek7777/cdn.io/raw/master/image/1585834411716.png ><h3 id="修改密码"><a href="#修改密码" class="headerlink" title="修改密码"></a>修改密码</h3><p>修改用户密码命令：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; ALTER USER &#x27;root&#x27;@&#x27;localhost&#x27; IDENTIFIED WITH mysql_native_password BY &#x27;root&#x27;;;</span><br></pre></td></tr></table></figure> <img src=https://gitee.com/gek7777/cdn.io/raw/master/image/1585835142399.png ><p>刷新数据：flush privileges;</p> <img src=https://gitee.com/gek7777/cdn.io/raw/master/image/1585834659126.png ><h3 id="退出Mysql"><a href="#退出Mysql" class="headerlink" title="退出Mysql"></a>退出Mysql</h3> <img src=https://gitee.com/gek7777/cdn.io/raw/master/image/1585834724723.png ><p>重新登录Mysql验证密码。</p>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Oracle中 Date日期函数</title>
      <link href="2020/04/02/Oracle-Date%E6%97%A5%E6%9C%9F%E5%87%BD%E6%95%B0/"/>
      <url>2020/04/02/Oracle-Date%E6%97%A5%E6%9C%9F%E5%87%BD%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<h2 id="一、计算两个日期相隔月数：MONTHS-BETWEEN-date1，date2"><a href="#一、计算两个日期相隔月数：MONTHS-BETWEEN-date1，date2" class="headerlink" title="一、计算两个日期相隔月数：MONTHS_BETWEEN(date1，date2)"></a>一、计算两个日期相隔月数：MONTHS_BETWEEN(date1，date2)</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> months_between(<span class="keyword">to_date</span>(<span class="string">&#x27;2030-4-2&#x27;</span>,<span class="string">&#x27;YYYY-MM-DD&#x27;</span>), <span class="keyword">sysdate</span>) <span class="keyword">from</span> dual;</span><br><span class="line"><span class="comment">-- 结果：120</span></span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="二、某个日期加几个月：ADD-MONTHS-DATE1-A"><a href="#二、某个日期加几个月：ADD-MONTHS-DATE1-A" class="headerlink" title="二、某个日期加几个月：ADD_MONTHS(DATE1,A)"></a>二、某个日期加几个月：ADD_MONTHS(DATE1,A)</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> add_months(<span class="keyword">sysdate</span>,<span class="number">3</span>) <span class="keyword">from</span> dual;</span><br><span class="line"><span class="comment">-- 结果：2020/7/2</span></span><br></pre></td></tr></table></figure><h2 id="三、计算出某个时间下一周的第几天：NEXT-DAY-DATE1-4"><a href="#三、计算出某个时间下一周的第几天：NEXT-DAY-DATE1-4" class="headerlink" title="三、计算出某个时间下一周的第几天：NEXT_DAY(DATE1,4)"></a>三、计算出某个时间下一周的第几天：NEXT_DAY(DATE1,4)</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> next_day(<span class="keyword">sysdate</span>,<span class="number">5</span>) <span class="keyword">from</span> dual;</span><br><span class="line"><span class="comment">-- 结果：当前时间下周的周四所在日期。备注：因为默认周日为每周的第一天。</span></span><br></pre></td></tr></table></figure><h2 id="四、计算某个日期所在月份的最后一天：LAST-DAY-DATE1"><a href="#四、计算某个日期所在月份的最后一天：LAST-DAY-DATE1" class="headerlink" title="四、计算某个日期所在月份的最后一天：LAST_DAY(DATE1)"></a>四、计算某个日期所在月份的最后一天：LAST_DAY(DATE1)</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">LAST_DAY</span>(<span class="keyword">SYSDATE</span>) <span class="keyword">FROM</span> DUAL;</span><br><span class="line"><span class="comment">-- 结果：2020/4/30</span></span><br></pre></td></tr></table></figure><h2 id="五、取某个日期的下一个月、下一年的第一天：ROUND-DATE-’MONTH’-、ROUND-DATE-’YEAR’"><a href="#五、取某个日期的下一个月、下一年的第一天：ROUND-DATE-’MONTH’-、ROUND-DATE-’YEAR’" class="headerlink" title="五、取某个日期的下一个月、下一年的第一天：ROUND(DATE,’MONTH’)、ROUND(DATE,’YEAR’)"></a>五、取某个日期的下一个月、下一年的第一天：ROUND(DATE,’MONTH’)、ROUND(DATE,’YEAR’)</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">ROUND(DATE,&#x27;MONTH&#x27;)函数 </span></span><br><span class="line"><span class="comment">备注：对‘天’进行四舍五入，超过15号，即取下一个月，否则取当前月。</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">round</span>(<span class="keyword">to_date</span>(<span class="string">&#x27;2020-03-15&#x27;</span>,<span class="string">&#x27;YYYY-MM-DD&#x27;</span>),<span class="string">&#x27;month&#x27;</span>) <span class="keyword">from</span> dual;</span><br><span class="line"><span class="comment">-- 结果：2020/3/1。</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">round</span>(<span class="keyword">to_date</span>(<span class="string">&#x27;2020-03-16&#x27;</span>,<span class="string">&#x27;YYYY-MM-DD&#x27;</span>),<span class="string">&#x27;month&#x27;</span>) <span class="keyword">from</span> dual;</span><br><span class="line"><span class="comment">-- 结果：2020/4/1</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">ROUND(DATE,&#x27;YEAR&#x27;)函数 </span></span><br><span class="line"><span class="comment">备注：对‘月’进行四舍五入，超过六月，即取下一个月，否则取当前月。</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">round</span>(<span class="keyword">to_date</span>(<span class="string">&#x27;2020-06-30&#x27;</span>,<span class="string">&#x27;YYYY-MM-DD&#x27;</span>),<span class="string">&#x27;year&#x27;</span>) <span class="keyword">from</span> dual;</span><br><span class="line"><span class="comment">-- 结果：2020/1/1。</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">round</span>(<span class="keyword">to_date</span>(<span class="string">&#x27;2020-07-1&#x27;</span>,<span class="string">&#x27;YYYY-MM-DD&#x27;</span>),<span class="string">&#x27;year&#x27;</span>) <span class="keyword">from</span> dual;</span><br><span class="line"><span class="comment">-- 结果：2021/1/1。</span></span><br></pre></td></tr></table></figure><h2 id="六、取某个日期的当前月、当前年的第一天：TRUNC-DATE-’MONTH’-、TRUNC-DATE-’YEAR’"><a href="#六、取某个日期的当前月、当前年的第一天：TRUNC-DATE-’MONTH’-、TRUNC-DATE-’YEAR’" class="headerlink" title="六、取某个日期的当前月、当前年的第一天：TRUNC(DATE,’MONTH’)、TRUNC(DATE,’YEAR’)"></a>六、取某个日期的当前月、当前年的第一天：TRUNC(DATE,’MONTH’)、TRUNC(DATE,’YEAR’)</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">ROUND(DATE,&#x27;MONTH&#x27;)函数 </span></span><br><span class="line"><span class="comment">备注：不对‘天’进行四舍五入，直接进行截取。</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">select</span> TRUNC(<span class="keyword">to_date</span>(<span class="string">&#x27;2020-03-15&#x27;</span>,<span class="string">&#x27;YYYY-MM-DD&#x27;</span>),<span class="string">&#x27;month&#x27;</span>) <span class="keyword">from</span> dual;</span><br><span class="line"><span class="comment">-- 结果：2020/3/1。</span></span><br><span class="line"><span class="keyword">select</span> TRUNC(<span class="keyword">to_date</span>(<span class="string">&#x27;2020-03-16&#x27;</span>,<span class="string">&#x27;YYYY-MM-DD&#x27;</span>),<span class="string">&#x27;month&#x27;</span>) <span class="keyword">from</span> dual;</span><br><span class="line"><span class="comment">-- 结果：2020/3/1</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">ROUND(DATE,&#x27;YEAR&#x27;)函数 </span></span><br><span class="line"><span class="comment">备注：不对‘月’进行四舍五入，直接进行截取。</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">select</span> TRUNC(<span class="keyword">to_date</span>(<span class="string">&#x27;2020-06-30&#x27;</span>,<span class="string">&#x27;YYYY-MM-DD&#x27;</span>),<span class="string">&#x27;year&#x27;</span>) <span class="keyword">from</span> dual;</span><br><span class="line"><span class="comment">-- 结果：2020/1/1。</span></span><br><span class="line"><span class="keyword">select</span> TRUNC(<span class="keyword">to_date</span>(<span class="string">&#x27;2020-07-1&#x27;</span>,<span class="string">&#x27;YYYY-MM-DD&#x27;</span>),<span class="string">&#x27;year&#x27;</span>) <span class="keyword">from</span> dual;</span><br><span class="line"><span class="comment">-- 结果：2020/1/1。</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Oracle中 Datatype格式转换</title>
      <link href="2020/04/02/Oracle-Datatype%E6%A0%BC%E5%BC%8F%E8%BD%AC%E6%8D%A2/"/>
      <url>2020/04/02/Oracle-Datatype%E6%A0%BC%E5%BC%8F%E8%BD%AC%E6%8D%A2/</url>
      
        <content type="html"><![CDATA[<h2 id="一、隐式数据类型转换"><a href="#一、隐式数据类型转换" class="headerlink" title="一、隐式数据类型转换"></a>一、隐式数据类型转换</h2><table><thead><tr><th>FROM</th><th>TO</th></tr></thead><tbody><tr><td>VARCHAR2 or CHAR</td><td>NUMBER</td></tr><tr><td>VARCHAR2 or CHAR</td><td>DATE</td></tr><tr><td>NUMBER</td><td>VARCHAR2</td></tr><tr><td>DATE</td><td>VARCHAR2</td></tr></tbody></table><a id="more"></a><h2 id="二、显式数据类型转换"><a href="#二、显式数据类型转换" class="headerlink" title="二、显式数据类型转换"></a>二、显式数据类型转换</h2><table><thead><tr><th>FROM</th><th>TO</th><th>FUNCTION</th></tr></thead><tbody><tr><td>CHARACTER</td><td>NUMBER</td><td>TO_NUMBER(VARCHAR2/CHAR)</td></tr><tr><td>CHARACTER</td><td>DATE</td><td>TO_DATE(VARCHAR2/CHAR)</td></tr><tr><td>NUMBER</td><td>CHARACTER</td><td>TO_CHAR(NUMBER)</td></tr><tr><td>DATE</td><td>CHARACTER</td><td>TO_CHAR(DATE)</td></tr></tbody></table><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> to_char(<span class="keyword">sysdate</span>,<span class="string">&#x27;YYYY&quot;年&quot;MM&quot;月&quot;DD&quot;日&quot; day HH24&quot;时&quot;MI&quot;分&quot;SS&quot;秒&quot; AM &#x27;</span>) <span class="keyword">from</span> dual;</span><br><span class="line"><span class="comment">-- 结果：2020年04月02日 星期四 16时14分37秒 下午  </span></span><br><span class="line"><span class="keyword">select</span> to_char(<span class="keyword">sysdate</span>,<span class="string">&#x27;YYYY&quot;年&quot;MM&quot;月&quot;DD&quot;日&quot; HH24&quot;时&quot;MI&quot;分&quot;SS&quot;秒&quot; AM &#x27;</span>) <span class="keyword">from</span> dual;</span><br><span class="line"><span class="comment">-- 结果：2020年04月02日 16时09分43秒 下午 </span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--string 转 timestamp</span></span><br><span class="line"><span class="keyword">SELECT</span>  to_timestamp(<span class="string">&#x27;2020-12-21 13:00:01&#x27;</span>,<span class="string">&#x27;YYYY-MM-DD hh24:mi:ss.ff&#x27;</span>)    <span class="keyword">FROM</span> dual</span><br><span class="line"></span><br><span class="line"><span class="comment">--timestamp 转 string</span></span><br><span class="line"><span class="keyword">SELECT</span> to_char(<span class="keyword">SYSDATE</span> + <span class="number">0</span>,<span class="string">&#x27;YYYY-MM-DD HH24:MI:SS&#x27;</span>) <span class="keyword">FROM</span> dual</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Oracle中 character字符函数</title>
      <link href="2020/04/02/Oracle-character%E5%AD%97%E7%AC%A6%E5%87%BD%E6%95%B0/"/>
      <url>2020/04/02/Oracle-character%E5%AD%97%E7%AC%A6%E5%87%BD%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<h2 id="一、大小写转换：LOWER-、UPPER、INITCAP"><a href="#一、大小写转换：LOWER-、UPPER、INITCAP" class="headerlink" title="一、大小写转换：LOWER 、UPPER、INITCAP"></a>一、大小写转换：LOWER 、UPPER、INITCAP</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">LOWER</span>(J.NAME) <span class="keyword">FROM</span> PS_JOB J;</span><br><span class="line"><span class="comment">-- 结果：查询结果中的name全是小写。</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">UPPER</span>(J.NAME) <span class="keyword">FROM</span> PS_JOB J;</span><br><span class="line"><span class="comment">-- 结果：查询结果中的name全是大写。</span></span><br><span class="line"><span class="keyword">SELECT</span> INITCAP(J.NAME) <span class="keyword">FROM</span> PS_JOB J;</span><br><span class="line"><span class="comment">-- 结果：查询结果中的name首字母是大写。</span></span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="二、拼接和截取：CONCAT、SUBSTR"><a href="#二、拼接和截取：CONCAT、SUBSTR" class="headerlink" title="二、拼接和截取：CONCAT、SUBSTR"></a>二、拼接和截取：CONCAT、SUBSTR</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">concat</span>(<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;b&#x27;</span>) <span class="keyword">from</span> dual ;</span><br><span class="line"><span class="comment">-- 结果：ab</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">substr</span>(<span class="string">&#x27;abcdef&#x27;</span>,<span class="number">1</span>,<span class="number">3</span>) <span class="keyword">from</span> dual ;</span><br><span class="line"><span class="comment">-- 结果：abc</span></span><br></pre></td></tr></table></figure><h2 id="三、字符长度：LENGTH"><a href="#三、字符长度：LENGTH" class="headerlink" title="三、字符长度：LENGTH"></a>三、字符长度：LENGTH</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">length</span>(<span class="string">&#x27;abcdef&#x27;</span>) <span class="keyword">from</span> dual;</span><br><span class="line"><span class="comment">-- 结果：6</span></span><br></pre></td></tr></table></figure><h2 id="四、字符所在位置：INSTR"><a href="#四、字符所在位置：INSTR" class="headerlink" title="四、字符所在位置：INSTR"></a>四、字符所在位置：INSTR</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">instr</span>(<span class="string">&#x27;abcdefg&#x27;</span>,<span class="string">&#x27;a&#x27;</span>) <span class="keyword">from</span> dual;</span><br><span class="line"><span class="comment">-- 结果：1</span></span><br></pre></td></tr></table></figure><h2 id="五、填充：IPAD"><a href="#五、填充：IPAD" class="headerlink" title="五、填充：IPAD"></a>五、填充：IPAD</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">lpad</span>(<span class="string">&#x27;abcd&#x27;</span>,<span class="number">5</span>,<span class="string">&#x27;*&#x27;</span>) <span class="keyword">from</span> dual;</span><br><span class="line"><span class="comment">-- 结果：*abcd</span></span><br></pre></td></tr></table></figure><h2 id="六、删除对应的字符"><a href="#六、删除对应的字符" class="headerlink" title="六、删除对应的字符"></a>六、删除对应的字符</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">trim</span>(<span class="string">&#x27;a&#x27;</span> <span class="keyword">from</span> <span class="string">&#x27;abcdef&#x27;</span>) <span class="keyword">from</span> dual;</span><br><span class="line"><span class="comment">-- 结果：bcdef。注意：只能删除一个字符，删除多个字符会报错。 </span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Oracle中 运算符not and or顺序</title>
      <link href="2020/04/02/Oracle-%E8%BF%90%E7%AE%97%E7%AC%A6not-and-or%E9%A1%BA%E5%BA%8F/"/>
      <url>2020/04/02/Oracle-%E8%BF%90%E7%AE%97%E7%AC%A6not-and-or%E9%A1%BA%E5%BA%8F/</url>
      
        <content type="html"><![CDATA[<h2 id="比较一下两个SQL的区别"><a href="#比较一下两个SQL的区别" class="headerlink" title="比较一下两个SQL的区别"></a>比较一下两个SQL的区别</h2><p>执行顺序：not &gt; and &gt; or </p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">id</span> <span class="keyword">from</span> dual d </span><br><span class="line"><span class="keyword">where</span> d.id = <span class="string">&#x27;0001&#x27;</span></span><br><span class="line"><span class="keyword">or</span> d.id = <span class="string">&#x27;0002&#x27;</span></span><br><span class="line"><span class="keyword">and</span> d.count &gt; <span class="number">900</span>;</span><br><span class="line"><span class="comment">-- 结果：将后两个条件合并，在于条件1取或,即：如下图。</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">id</span> <span class="keyword">from</span> dual d </span><br><span class="line"><span class="keyword">where</span> d.id = <span class="string">&#x27;0001&#x27;</span></span><br><span class="line"><span class="keyword">or</span> (d.id = <span class="string">&#x27;0002&#x27;</span></span><br><span class="line"><span class="keyword">and</span> d.count &gt; <span class="number">900</span>);</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">id</span> <span class="keyword">from</span> dual d </span><br><span class="line"><span class="keyword">where</span> (d.id = <span class="string">&#x27;0001&#x27;</span></span><br><span class="line"><span class="keyword">or</span> d.id = <span class="string">&#x27;0002&#x27;</span>)</span><br><span class="line"><span class="keyword">and</span> d.count &gt; <span class="number">900</span>;</span><br><span class="line"><span class="comment">-- 结果：将前两个条件合并取或，再与条件3取并集。</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Oracle中 生效日期EFFDT 和 生效序号EFFSEQ</title>
      <link href="2020/04/02/Oracle-%E7%94%9F%E6%95%88%E6%97%A5%E6%9C%9FEFFDT-%E5%92%8C-%E7%94%9F%E6%95%88%E5%BA%8F%E5%8F%B7EFFSEQ/"/>
      <url>2020/04/02/Oracle-%E7%94%9F%E6%95%88%E6%97%A5%E6%9C%9FEFFDT-%E5%92%8C-%E7%94%9F%E6%95%88%E5%BA%8F%E5%8F%B7EFFSEQ/</url>
      
        <content type="html"><![CDATA[<h3 id="1-查询生效日期最大的所有记录"><a href="#1-查询生效日期最大的所有记录" class="headerlink" title="1. 查询生效日期最大的所有记录"></a>1. 查询生效日期最大的所有记录</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">select</span> j.EMPLID, j.effdt, j.effseq</span><br><span class="line">   <span class="keyword">from</span> ps_job j</span><br><span class="line">  <span class="keyword">where</span> j.effdt = (<span class="keyword">select</span> <span class="keyword">max</span>(pj.effdt)</span><br><span class="line">                     <span class="keyword">from</span> ps_job pj</span><br><span class="line">                    <span class="keyword">where</span> pj.emplid = j.emplid</span><br><span class="line">                      <span class="keyword">and</span> pj.effdt &lt; <span class="keyword">sysdate</span>);</span><br><span class="line"><span class="comment">-- 后半句语句，查询出当前表中所有的员工ID号所对应的记录中最大的生效日期，前半句语句，根据所有的最大的生效日期查询出所有的记录。</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="2-查询生效日期最大，生效序号最大的，即最新的所有数据"><a href="#2-查询生效日期最大，生效序号最大的，即最新的所有数据" class="headerlink" title="2.查询生效日期最大，生效序号最大的，即最新的所有数据"></a>2.查询生效日期最大，生效序号最大的，即最新的所有数据</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> j.EMPLID, j.effdt, j.effseq</span><br><span class="line">   <span class="keyword">from</span> ps_job j</span><br><span class="line">  <span class="keyword">where</span> j.effdt = (<span class="keyword">select</span> <span class="keyword">max</span>(pj.effdt)</span><br><span class="line">                     <span class="keyword">from</span> ps_job pj</span><br><span class="line">                    <span class="keyword">where</span> pj.emplid = j.emplid</span><br><span class="line">                      <span class="keyword">and</span> pj.effdt &lt; <span class="keyword">sysdate</span>)</span><br><span class="line">    <span class="keyword">and</span> j.effseq =</span><br><span class="line">        (<span class="keyword">select</span> <span class="keyword">max</span>(pj1.effseq) <span class="keyword">from</span> ps_job pj1 <span class="keyword">where</span> pj1.emplid = j.emplid);</span><br><span class="line"><span class="comment">-- 后半句语句，查询出当前表中所有的员工ID号所对应的记录中最大的生效日期并且生效记录数值最大，前半句语句，根据所有的最大的生效日期和生效记录数值查询出所有的记录。且，生效日期小于系统日期。</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Oracle中 常用函数</title>
      <link href="2020/04/02/Oracle-%E5%B8%B8%E7%94%A8%E5%87%BD%E6%95%B0/"/>
      <url>2020/04/02/Oracle-%E5%B8%B8%E7%94%A8%E5%87%BD%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<h2 id="一、-ceil-n-取大于等于数值n的最小整数"><a href="#一、-ceil-n-取大于等于数值n的最小整数" class="headerlink" title="一、 ceil(n)  取大于等于数值n的最小整数"></a>一、 ceil(n)  取大于等于数值n的最小整数</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">CEIL</span>(<span class="number">9.5</span>) <span class="keyword">FROM</span> DUAL;</span><br><span class="line"><span class="comment">-- 结果：10</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="二、floor-n-取小于等于数值n的最大整数"><a href="#二、floor-n-取小于等于数值n的最大整数" class="headerlink" title="二、floor(n) 取小于等于数值n的最大整数"></a>二、floor(n) 取小于等于数值n的最大整数</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">floor</span>(<span class="number">9.5</span>) <span class="keyword">from</span> dual;</span><br><span class="line"><span class="comment">-- 结果：9</span></span><br></pre></td></tr></table></figure><h2 id="三、mod-a-b-–a除以b的余数"><a href="#三、mod-a-b-–a除以b的余数" class="headerlink" title="三、mod(a,b)–a除以b的余数"></a>三、mod(a,b)–a除以b的余数</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">mod</span>(<span class="number">10</span>,<span class="number">3</span>) <span class="keyword">from</span> dual;</span><br><span class="line"><span class="comment">-- 结果：1</span></span><br></pre></td></tr></table></figure><h2 id="四-round-a-b-–取精确度，四舍五入。"><a href="#四-round-a-b-–取精确度，四舍五入。" class="headerlink" title="四  round (a,b)–取精确度，四舍五入。"></a>四  round (a,b)–取精确度，四舍五入。</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">round</span>(<span class="number">8.5555</span>,<span class="number">2</span>) <span class="keyword">from</span> dual;</span><br><span class="line"><span class="comment">-- 结果：8.56</span></span><br></pre></td></tr></table></figure><h2 id="五、-拼接符"><a href="#五、-拼接符" class="headerlink" title="五、||  拼接符"></a>五、||  拼接符</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">select</span> j.emplid ||<span class="string">&#x27;:&#x27;</span>|| j.effdt  <span class="keyword">from</span> ps_job j</span><br><span class="line"><span class="comment">-- 结果：0000700002:01-11月-22</span></span><br></pre></td></tr></table></figure><h2 id="六、-BETWEEN-a-AND-b"><a href="#六、-BETWEEN-a-AND-b" class="headerlink" title="六、 BETWEEN a AND b"></a>六、 BETWEEN a AND b</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">id</span> <span class="keyword">from</span> ps_job j <span class="keyword">where</span> j.deptid <span class="keyword">between</span> <span class="number">30000</span> <span class="keyword">and</span> <span class="number">40000</span>; </span><br></pre></td></tr></table></figure><h2 id="七、IN-、ANY、ALL"><a href="#七、IN-、ANY、ALL" class="headerlink" title="七、IN  、ANY、ALL"></a>七、IN  、ANY、ALL</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">id</span> <span class="keyword">from</span> ps_job jwhere <span class="keyword">id</span> <span class="keyword">in</span> (<span class="string">&#x27;00001&#x27;</span>,<span class="string">&#x27;00002&#x27;</span>,<span class="string">&#x27;00003&#x27;</span>)</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span>  empno, ename, job</span><br><span class="line">   <span class="keyword">FROM</span>    emp</span><br><span class="line">   <span class="keyword">WHERE</span>   sal &lt; <span class="keyword">ANY</span> </span><br><span class="line"> (<span class="keyword">SELECT</span>sal</span><br><span class="line">          <span class="keyword">FROM</span>emp</span><br><span class="line">        <span class="keyword">WHERE</span>job = <span class="string">&#x27;CLERK&#x27;</span>)</span><br><span class="line">   <span class="keyword">AND</span>    job &lt;&gt; <span class="string">&#x27;CLERK&#x27;</span>;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">分析：后半句sql中，取出job = &#x27;CLERK&#x27;的记录对应的薪酬值(多个)，前半句sql根据后面得到的多个值，只要小于其中一个薪酬值，就取出该条记录。</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span>  empno, ename, job</span><br><span class="line">    <span class="keyword">FROM</span>    emp</span><br><span class="line">    <span class="keyword">WHERE</span>   sal &gt; <span class="keyword">ALL</span> </span><br><span class="line">   (<span class="keyword">SELECT</span><span class="keyword">avg</span>(sal)</span><br><span class="line">   <span class="keyword">FROM</span>emp</span><br><span class="line">  <span class="keyword">GROUP</span> <span class="keyword">BY</span>deptno);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">分析：后半句sql中，按部门分组取出每个组的平均薪酬值（多个），前半句sql根据后面得到的多个值，只要大于得到的所有薪酬值，就取出该条记录。</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h2 id="八、LIKE"><a href="#八、LIKE" class="headerlink" title="八、LIKE"></a>八、LIKE</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> ps_job j <span class="keyword">where</span> j.id <span class="keyword">like</span> <span class="string">&#x27;_0%&#x27;</span></span><br><span class="line"><span class="comment">-- ‘_’站位1个字符，‘%’站位多个字符。</span></span><br></pre></td></tr></table></figure><h2 id="九、NVL-expr1-expr2"><a href="#九、NVL-expr1-expr2" class="headerlink" title="九、NVL(expr1,expr2)"></a>九、NVL(expr1,expr2)</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> NVL(expr1,expr2) <span class="keyword">FROM</span> DUAL;</span><br><span class="line"><span class="comment">-- 结果：如果expr1为空，则取到值为：expr2。</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="十、DECODE"><a href="#十、DECODE" class="headerlink" title="十、DECODE()"></a>十、DECODE()</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> J.EMPLID,<span class="keyword">decode</span>(J.DEPTID,<span class="number">0204000302</span>,<span class="string">&#x27;选中&#x27;</span>，<span class="string">&#x27;未选中&#x27;</span>) <span class="keyword">from</span> PS_JOB J</span><br><span class="line"><span class="comment">-- 结果：仅DEPTID=‘0204000302’的记录查询出的结果结果为：“选中”，其余为：“未选中”。</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Oracle中 两个日期相减得天数、月数、年数</title>
      <link href="2020/04/02/Oracle-%E4%B8%A4%E4%B8%AA%E6%97%A5%E6%9C%9F%E7%9B%B8%E5%87%8F%E5%BE%97%E5%A4%A9%E6%95%B0%E3%80%81%E6%9C%88%E6%95%B0%E3%80%81%E5%B9%B4%E6%95%B0/"/>
      <url>2020/04/02/Oracle-%E4%B8%A4%E4%B8%AA%E6%97%A5%E6%9C%9F%E7%9B%B8%E5%87%8F%E5%BE%97%E5%A4%A9%E6%95%B0%E3%80%81%E6%9C%88%E6%95%B0%E3%80%81%E5%B9%B4%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<h3 id="两个日期相减得：天数"><a href="#两个日期相减得：天数" class="headerlink" title="两个日期相减得：天数"></a>两个日期相减得：天数</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span>  <span class="keyword">to_date</span>(<span class="string">&#x27;08/06/2015&#x27;</span>,<span class="string">&#x27;mm/dd/yyyy&#x27;</span>)-<span class="keyword">to_date</span>(<span class="string">&#x27;07/01/2015&#x27;</span>,<span class="string">&#x27;mm/dd/yyyy&#x27;</span>)  <span class="keyword">from</span> dual d；</span><br><span class="line"><span class="comment">-- 结果：36</span></span><br></pre></td></tr></table></figure><h3 id="两个日期相减得：月数–需要使用函数：months-between-函数"><a href="#两个日期相减得：月数–需要使用函数：months-between-函数" class="headerlink" title="两个日期相减得：月数–需要使用函数：months_between()函数"></a>两个日期相减得：月数–需要使用函数：months_between()函数</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span>  trunc(months_between(<span class="keyword">to_date</span>(<span class="string">&#x27;08/06/2015&#x27;</span>,<span class="string">&#x27;mm/dd/yyyy&#x27;</span>),<span class="keyword">to_date</span>(<span class="string">&#x27;07/01/2015&#x27;</span>,<span class="string">&#x27;mm/dd/yyyy&#x27;</span>)))  <span class="keyword">from</span> dual d;</span><br><span class="line"><span class="comment">-- 结果：1</span></span><br><span class="line"><span class="keyword">select</span>  trunc(months_between(<span class="keyword">to_date</span>(<span class="string">&#x27;07/05/2015&#x27;</span>,<span class="string">&#x27;mm/dd/yyyy&#x27;</span>),<span class="keyword">to_date</span>(<span class="string">&#x27;07/01/2015&#x27;</span>,<span class="string">&#x27;mm/dd/yyyy&#x27;</span>)))  <span class="keyword">from</span> dual d;</span><br><span class="line"><span class="comment">-- 结果：0</span></span><br></pre></td></tr></table></figure><h3 id="两个日期相减得：年数–使用函数：months-bewwent-12"><a href="#两个日期相减得：年数–使用函数：months-bewwent-12" class="headerlink" title="两个日期相减得：年数–使用函数：months_bewwent() / 12"></a>两个日期相减得：年数–使用函数：months_bewwent() / 12</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span>  trunc(months_between(<span class="keyword">to_date</span>(<span class="string">&#x27;07/01/2014&#x27;</span>,<span class="string">&#x27;mm/dd/yyyy&#x27;</span>),<span class="keyword">to_date</span>(<span class="string">&#x27;07/01/2015&#x27;</span>,<span class="string">&#x27;mm/dd/yyyy&#x27;</span>)) / <span class="number">12</span>)  <span class="keyword">from</span> dual d;</span><br><span class="line"><span class="comment">-- 结果：-1  注意：函数months_bewwent(date1,date2)是date1-date2得小数。</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《拆掉思维里的墙》笔记</title>
      <link href="2020/03/21/%E3%80%8A%E6%8B%86%E6%8E%89%E6%80%9D%E7%BB%B4%E9%87%8C%E7%9A%84%E5%A2%99%E3%80%8B%E7%AC%94%E8%AE%B0/"/>
      <url>2020/03/21/%E3%80%8A%E6%8B%86%E6%8E%89%E6%80%9D%E7%BB%B4%E9%87%8C%E7%9A%84%E5%A2%99%E3%80%8B%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="拆掉思维里的墙"><a href="#拆掉思维里的墙" class="headerlink" title="拆掉思维里的墙"></a>拆掉思维里的墙</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>人们经常艳羡别人功成名就，抱怨自己时运不济、遇人不淑。其实换个角度去思考，换个方式去行动，换个心情去感悟，“拆掉思维里的墙”，你就会发现“墙”外的世界更加华丽，也许成功就是这样简单。        </p><p>​                                    ——当当特约评论员 粉红猪猪侠</p><p>《拆掉思维里的墙》宛如一股清泉，缓缓打开我的心扉。他举重若轻地将心灵的奥妙娓娓道来，风趣幽默地解码一个个思维的秘密。我时而被感动，时而拍案赞同，读罢已是醍醐灌顶，恍然大悟：更幸福地去生活，不正是我们想要的吗？</p><p>​                                    ——新精英学员 窦科敏</p><a id="more"></a><h2 id="第一章、你不是安全感的奴隶"><a href="#第一章、你不是安全感的奴隶" class="headerlink" title="第一章、你不是安全感的奴隶"></a>第一章、你不是安全感的奴隶</h2><p>恐惧就是这样的一个懦夫，当你触及它的底线，接受事情最坏的结果，然后开始准备和它大干一场的时候，它早就不知道躲哪里去了。</p><p>你准备好安定了吗？如果你买了房子，这一辈子基本上就定下来了。你的房子会驱使你找人结婚、生子·····因为那就是房子里面该干的事情。</p><p>购房，其实购买的是自己内心深处的“安全感”。他们不相信自己的能力，于是觉得有一套房子，会让自己内心安全一点。毕竟，在这个大城市，有一个栖身之所，会让人觉得心里踏实。但是安全感真的可以来自于一套房子吗？这正是我们要拆掉的“思维之墙”。在这个房价、股票日益动荡的社会，在这个跌跌碰碰加速进图信息时代的社会，我们的安全感真的可以安全地来自于一件物品吗？即使说房子真的可以换回来安全感，那么出卖梦想来换，真的值吗？</p><p>为了消费安全感，我们付出了这么大代价，典当自己的梦想，典当自己最快发展的时光。</p><p>“我不能没有你！”我们在很多疯狂的关于爱情的血案、情仇、报复和自残背后都能听到这样一句话。他们每一个人都坚信自己虽然手段恶劣，但是出发点高尚，因为——为了爱情。事实上，亲爱的，那不是爱情，而是恐惧。</p><p>这个世界没有了谁都能活得下去，而你不知道什么时候，陷入了这种深深的恐惧。你坚信自己需要被别人认同；你坚信离开了另一个人，你无法生活。所以如果那个人不在，你都无法活下去。这其实是一种恐惧。</p><p>​                ———2019/03/05</p><p><strong>1、把依赖当成爱</strong></p><p>我们很多时候把依赖的当成爱，觉得爱就是两个人甜甜蜜蜜，谁也不缺了谁。当看到别人没有自己也活得很好的时候，内心机会莫名其妙地生气，觉得对方不爱自己了。这种人往往也很难自己一个人很好地独处——因为他（她）要的不是爱，而是依赖对方。真正的爱，是给对方自由，也给自己自由。像诗人费马额诗歌：</p><p>打开笼门，打开笼门，让鸟儿飞走，把自由还给  鸟笼！</p><p><strong>2、把爱自己当成爱别人。</strong></p><p>有没有过这样的情况？你发了一条短信给你的女朋友，说：“小红，我好爱你！”但是发过去一点信息都没有，于是你开始着急，一分钟看三次手机···</p><p>你是在表达你的爱吗？如果是，为什么你这么焦虑呢？还是其实你是在等待她回短信说：“小明，我也爱你。”这就是把爱自己当成爱别人。</p><p><strong>3、把喜欢和爱搞混</strong></p><p>喜欢是指向行为的，而爱则是指向一个人的本身。不是所有行为都值得喜欢，但是这个世界，却是所有人都可爱。</p><p>所以你可以不喜欢你朋友抽烟，不喜欢他的一些想法。但是要记得，你可以讨厌一些行为，同时你可以爱着这个人。</p><p>我们天天在说“爱”，但是对于爱，我们真的知之甚少。每当你觉得自己在“爱”的那些时候，有多少是真的爱？</p><p><strong>安全感</strong></p><p>你的潜能就好像你的咨询顾问，如果一开始你信任它，它会越来越努力，为你做越来越多的事情。但是如果你一开始就不信任它，而去依赖其他的东西，它就会慢慢远离你，在你需要用它的时候，它也不会再来。慢慢地，信任自己潜能的人建立起来自信与安全感，而不信任自己潜能的人会进入越来越没有安全感的模式。换言之，你永远丧失了这个方面的自信，你变成了安全感的奴隶。</p><p>如果我们没有内在的安全感，但是内心又迫切被需要，我们只好慢慢地转向外界，寻找外部的寄托。这让我们的自信完全被摧毁，恐惧开始滋生，因为我们内心的潜意识深深知道：外物是无法完全被掌控的，而我们又无比依赖这些东西。</p><p>这种想法让我们活在双重的煎熬当中：既不相信自己，又随时害怕失去。我们终将被奴役，成为安全感的努力。</p><p>​                            ——-2018/03/06</p><p><strong>如何快速提升安全感？</strong></p><p><strong>1、小范围地冒一冒险</strong></p><p>特蕾莎修女说：上帝不是要你成功，他只是要你尝试。</p><p>在安全的环境下，小范围地冒一冒险吧！这是一个对你那些“思维之墙”很好的试探，看看它们是不是只是看上去坚固，其实虚弱？</p><p>试试看在一两个你永远不再去也不可惜的小群体里面做做自己一直不好意思做的事。</p><p><strong>2、远离那些太容易获得的安全感</strong></p><p>养鸟的行家说过：如果抓回来的小鸟野性太足，千万不要一下子关起来。你需要把小鸟关在一个软的网里面，让鸟无法休息，也无处撞死。等小鸟力竭掉在网底的时候，慢慢地给它一些食物，如果还是不从，就放弃驯养。但是大多数鸟儿会被食物吸引，慢慢地开始进食。等到一个多月，这种小鸟即使飞出去，也会飞回来，否则就会死在某个地方，因为它已经被植入一个信念：我是无法依靠自己生存下去的。</p><p>在这里吃住不愁，精神充实，心情愉快——如果安全感可以这样轻易获得，那为什么他们还要自己努力争取呢？即使在争取，也没有现在这样舒服！所以说，如果你想搞废一个人，那就提供一个没有经济压力、随时可以上网看书吃饭的房子吧。</p><p>孟子说：“生于忧患，死于安乐。”如果要害一个人，让一个人恐惧、没有自信，就给他提供一个无须努力就可以获得安全感，这实在是太有效了。</p><p>原理那些让你容易获得安全感的事情！包括一对对过于关心你的父母、一张可以任意刷的卡、一个不会犯错误的任务和一个养老般的工作。那会驯化你成为安全感奴隶！</p><p><strong>3、珍爱生命，远离恐惧</strong></p><p>少看一些凄惨的电影、恶俗的电视剧和惨淡的杂志吧，也少和那些没有安全感的人待在一起。他们就好像垃圾车，里面装满恐惧的信念。</p><p>接近那些简单快乐的人，看看那些干净明亮的电影和书籍，做一些无缘无故的快乐事情。</p><p>站在阳光里，你会慢慢地走出黑暗。</p><p><strong>4、做一个恐惧保险箱</strong></p><p>恐惧其实不是坏事情，我们从老祖先的潜意识那里获得这些记忆。恐惧时必需的、有益的，除非当它阻碍我们更多可能性的时候。</p><p><em>做一个恐惧保险箱</em></p><p>（1）把你最恐惧的事情仔细写在一张纸上，至少10条，而且尽可能的详细，要到挖空心思也想不出来再多为止！</p><p>（2）找一个信任的人，或者一个很安全的地方，做你的恐惧保险箱。把这个纸折叠好放到这个地方，确保没有其他人知道。</p><p>（3）告诉自己，我担心的事情有可能发生，但是我要去做我自己的事情，所以我先把我的恐惧安全地存在这里！等我做完以后，我会回来取走我的恐惧。</p><p>（4）这个时候你会觉得心里舒服很多，然后大胆地去做吧！</p><p>（5）回到你的保险箱，看看有多少担心发生了，有多少没有。</p><p><strong>5、做成功日志，你就成为牛人</strong></p><p>启动安全感模式的核心就是自信，而成功日志就是一个启动自信心的方式——每天告诉自己，我曾经有多好！</p><p>困难总是不断地出现。尽管如此，你每天不间断地去做对你未来意义重大的事情。你为此花费的时间不超过10分钟，但就是这10分钟会让一切变得不同。大多数人总是在现有的水平上停滞不前，就是他们没有拿出这10分钟。他们总是期待情况向有利于自己的方向转化，但是他们忽略了一点，那就是，他们必须首先改变自己。</p><p><u>勇敢的人也会害怕，一个人虽然害怕但仍勇于前进，这才叫勇敢。</u></p><p><strong>6、面对恐惧，触底反弹</strong></p><p>当故事一旦被讲出，过去的事情就会被烫平在生命的衣服之上，不会像空中的幽灵一样袭击着你。</p><p>消除恐惧的最后一招，也是最有效的一招，就是找到你自己的恐惧底线，然后面对它。</p><p>《面对恐惧，从容面对》（Feel The Fear And Do It Anyway) 的说法，恐惧有三个层次：</p><p><strong>第一个层次是恐惧事情本身。</strong></p><p><strong>第二个层次是害怕失去背后的价值。</strong></p><p><strong>第三个层次，也就是真正的恐惧，是你觉得自己没有能力去应对这个失去。</strong></p><p>你有没有被逼到命运的墙角？有没有试过触碰想都不敢想的事情的底线？那一瞬间你会怎么问自己？</p><p>请记住问自己格鲁夫的两个触底反弹问题：</p><p>1.如果我失败了，新来代替我的那个家伙，他会怎么办？</p><p>2.既然这样，为什么我们不这样去做呢？</p><p><strong>安全感不是从别人身上要什么，而是内心深处，一种被需要的感觉。</strong></p><p><strong>安全感不是从别人身上拿到些什么，而是为这个世界给予些什么。</strong></p><p><strong>安全感是给出来的，而不是要回来的。</strong></p><p><u>如果你真的是一个没有安全感的人，你能做的最好的事情，就是在自己最恐惧的地方，无条件地去支持一个人、一些人、一群人。支持别人是这个世界上最安全的事情，它永远不会失败。</u></p><p>美国心灵女王奥普拉在2008年斯坦福的毕业典礼上说：</p><p>i<u>f you’re hurting, you need to help somebody ease their hurt. If you’re pain ,help somebody else’s pain. And you’re in a mess, you get yourself out of the mess helping somebody out of theirs.</u></p><p><u>如果你受伤了，你要帮助他人减轻伤痛。如果你感到痛苦，你要帮助他人减轻痛苦。如果你的生活一团糟，让自己去帮助其他处在困境中的人摆脱困境。</u></p><h2 id="第二章-让有趣的生命扑面而来"><a href="#第二章-让有趣的生命扑面而来" class="headerlink" title="第二章 让有趣的生命扑面而来"></a><strong><em>第二章 让有趣的生命扑面而来</em></strong></h2><p><em>兴趣就是以你最高级（est）的形式投入到当下（ing）的事情之中（inter）去。</em></p><p><u>当你真正完全投入到当下的事情中去时，不管这个事情多么简单卑微，你都能感受到无穷的乐趣。任何一个瑜伽教练都会告诉你，即使认真地投入你的呼吸——这个每天你做过无数次的事情——都能感受到无数的乐趣。</u></p><p><u>当一个人为了工作本身而不是工作后的工资来做事情的时候，他往往能够把工作做到最好，也一定会收到最多的报酬。</u></p><p><u>生命就好像镜子一样，有趣之人对生活保持着极高的投入度，全力拥抱，生活也全力拥抱他。无趣之人用“没兴趣”把自己和生命隔绝，所以生命也躲开他。</u></p><p><u>寻找那些不能够被满足的的深层兴趣，比如爱、成长、超越自己、快乐、助人、宁静······它们会让你幸福一辈子。</u></p><p>​                            ————————2018/03/07        </p><p>对于“无兴趣一族”，担忧之墙永远把你和乐趣隔离开来。你就好像一个糟糕的读者，没看一页小说都要翻到最后去看看结局，那么你就完全失去了阅读的乐趣。</p><p>所以乐趣来源于全情投入，而不是投入后的结果，正是因为这样，乐趣可以是无条件的。</p><p><strong>现在我们对投入有了下面的理解</strong>：</p><p>1.尝试是有可能成功，有可能失败的。</p><p>2.成功的尝试能收获到成果。</p><p>3.不成功的尝试能收获到智慧。</p><p>4.不管成不成功，投入都能带来快乐。</p><p>既然如此为什么不停止你内心对后果的担忧，投入一些呢？</p><p><u>难怪有些人总是充满快乐和激情，全情投入。他们在成功的时候收获都成果，在失败的时候收获智慧，而不管什么时候，他们都收获到过程的快乐！</u></p><p>投入是热爱生命的钥匙。什么是快乐？那就是做事情既快，又乐。</p><p>“无趣之人”的模式是这样的：</p><p><em>难怪那些吊儿郎当的人永远找不到真正的乐兴趣！因为害怕努力了也没有收获，他们根本就不投入！不投入和低投入的人没有乐趣，也很难获得成果，心灵和外界都没有收获。他们不愿意面对这个事实，于是他们就对自己说：“我没有什么兴趣。”——这总比对自己说：“我的能力很糟糕”要好。</em></p><p>当一个人对自己的生命开始用“不感兴趣”来搪塞时，盛宁也开始对他不感兴趣了。这就是“有趣之人”心灵和物质都收获多多，而“无趣之人”心灵和物质都贫乏的原因。</p><p><u><strong>“无趣之人”，往往不是无能之人，而是无胆之人。他们不是缺乏能力，也不是缺乏机会，他们缺乏的只是投入——对不知道结果的事情的投入！</strong></u></p><p><strong><em>跳舞，像没有人看着那样；热爱，像从未受伤一样；唱歌，像无人听着那样；活着，就把人间当成天堂。</em></strong></p><p>带着关爱而不是期待投入生活，你会发现能力与乐趣接踵而来。</p><p>长久来说，只是那些不能够被满足的兴趣，才是不会消退的兴趣。</p><p><strong>心理学认为，快乐来源于“紧张感的释放”，一旦一个需求已经完全被满足，紧张感就会消失，快乐也就没有了，自然也就没有了持续的兴趣。</strong></p><p>如果你的兴趣更加深层，比如自由、智慧、或者帮助更多身边的人，这个兴趣就只能永远地接近，而不可能完全满足。恰恰相反，随着你的力量越来越大，你会发现需要帮助的人会越来越多，而你能够帮助别人的方式会越来越好。这就是一个永远不能被满足的兴趣。</p><p><strong><u>为你的生命找到一个长期的、深层次的、不能被满足的乐趣，让这个永恒乐趣带领你穿透生命的无常。</u></strong></p><h2 id="第三章、心智模式决定我们的命运"><a href="#第三章、心智模式决定我们的命运" class="headerlink" title="第三章、心智模式决定我们的命运"></a><strong><em>第三章、心智模式决定我们的命运</em></strong></h2><p>我们就是自己生命的巫师，我们给自己搭建一个幻想世界，然后在现实中让这个幻想慢慢实现。</p><p>在今天这个变换多端的世界，我们最大的危险不是外界的压力和竞争，而是我们内心的模式，这些模式决定了我们看到什么、感悟些什么，如何思考以及最终成为怎么样的人。</p><p>如果你是金子，你要提高你的含金量到一定程度，才会成为金矿。当你被挖掘出来，你要经过很痛苦的碾磨、冲刷、浸泡，要让你身上的杂质，不好的习惯、污点被熔掉。然后还要成型、打磨、抛光，最终才成为很有价值的发光的金子。</p><p>人们真的会变成自己觉得“应该成为”的人。心智模式对我们的改变，实在是太强大了。</p><p><strong><u>兴智模式：我们看到的是自己想看到的世界。我们看到的是我们自己构建的世界。</u></strong></p><p>《周易·系词上》说：“仁者见之谓之仁，智者见之谓之智，百姓日用而不知，故君子之道鲜矣。”简单的说，你永远只看到真实世界中你想看到的那一部分。</p><p>总之，我们按照自己过去的经验和记忆，处理我们看到的部分世界，然后在我们脑子里面构建一个自己的世界。    </p><p>比如，你一件事，你刚看到，一定会说：“哦，那一定是·····”，然后被打脸，这就是因为我们大脑构造了一个错误的世界模型。</p><p>我们用一个固定程序来处理进入大脑的信息，然后根据经验和记忆构建一个我们假设的世界模型，再对这个假设世界作出反应。简单地说，我们给自己创造了一个世界模型！然后根据这个创造出来的世界生活。这是我们大脑的工作原理。在很多时候我们用这个方式来快速处理非常复杂的问题。</p><p>即使生活在一模一样的世界中，我们对世界也会有完全不同的视角。从这个角度上来说，你正在阅读世界上唯一的一本书，因为是你和我共同创造了这本书。这本书对于你的意义是淡淡一笑还是改变你的命运，很大程度由你决定。</p><p>我们戴着有色眼镜过滤这世界的大部分信息，我们还用我们不用的经验和记忆来解释这些信息，搭建起我们内心的世界，并且以为那就是世界的真实状况。难怪佛教禅宗会有“色即是空，空即是色”（色指有形的事物）的说法，这句话翻译成心智模式的说法就是，一切真实的事物都是心智模式，而一切的兴智模式对于你来说，都是真实的世界。   这个就是我们说的，每个人都有的不同的“思维模式”或者“思维定式”。</p><p>​                                ———————2018/03/08</p><p>幸运的人总能够把握意想不到的机会，从而为自己带来好运。</p><p>我们为自己构建一个世界，然后又反复强化，最终我们相信这个世界就是我们构建的那样。从这个角度来说，我们就是自己生命的巫师，我们自己搭建了一个幻想世界，然后再现实中让这个幻想慢慢实现。</p><p>我们必须找到我们内心世界柔软可以改变的部分，然后通过自己的思考和观察重新塑造我们更加喜欢的世界。</p><p>愿上帝赐我一个平静的心，去接纳我所不能改变的事物；赐我无限勇气，去改变那有可能改变的东西；并且赐给我智慧，去辨别这两者的差异。</p><p>心智模式的智慧：找到那些我们内心世界中可以突破的地方突破，找到那些不能突破的地方去接纳。</p><p>为什么有钱人钱越来越多，但是却不快乐？</p><p>当人们收入很低的时候，对幸福的满意度确实也很低。身无分文的人对于幸福的满意度机会趋近于零。在0.25之前是正比关系，到了0.25以后，就基本没有太多相关了。就是说，从一无所有到小康这个阶段，如果你有了钱，你的幸福指数会“蹭”地一下蹿了上去。但是在0.25之后，你的金钱和幸福就基本没有太多关系。搞得不好，说不定还会下降到0.2、0.1或者更低。这一现象在数学中被称做“金钱的边际效应递减”。</p><p>每一个希望自己幸福的人，都应该重新审视自己的心智模式。因为心智模式是关于思维的思维、关于智慧的智慧。</p><p><u>在今天这个变化多端的世界，我们最大的危险不是外界的压力与竞争，二十我们内心的模式，这些模式决定告诉我们看到些什么、感受到些什么，如何思考以及最终成为怎么样的人。</u></p><p>《第五项修炼》的作者彼得·圣吉说：“心智模式是深植于我们心灵之中，关于我们自己、别人、组织以及世界每个层面的形象、假设和故事。就好像一块玻璃微妙地扭曲我们的视野一样，心智模式也决定论文我们对世界的看法。”</p><p>​                        ———————–2019/03/11</p><p>优秀的人有一整套优化得非常好的后台程序，这些程序清晰、干净，不占用内存，直指目标。正是因为这样的思想程序，他们总会有不同的思维模式，在压力下面有完全不同的心态，对事物有全新的看法，对同样的事情有完全不同的结论。</p><p><strong><u>人们总说优秀是一种习惯，其实优秀是一套心智模式。</u></strong></p><p>决定对自己幸福负责的人，在遇到外界条件糟糕的情况下，自然会更加努力，外界条件好，也是踏踏实实，心态自然好。而放弃自己幸福的人，则终日忧心忡忡，怨天尤人也是必然的事情，心态肯定糟糕至极。</p><p>数据是程序运算的结果，心态也是心智模式运算的结果。比如听讲座，我们就是直接拿到结果，而没有拿到程序（兴智模式），那么下次遇到不同的情况就还是没有办法。</p><p>如果希望保持心态，就一定要明白心态背后的心智模式。从心智模式上面来改变心态，是心态保持的秘密。</p><p><strong><u>齐白石说：“学我者升，似我者死。”同理：学心智生，学心态死。</u></strong></p><p><strong>作为一种心态，双赢不总是对的。每一个心智模式背后都有相对应的对世界的假定，也有着相对的局限性。世界上根本不存在总是对的道理和心态。</strong></p><p>刚刚进入公司，先把眼前的事情做踏实了才是关键。先学习后创新，不同阶段不同发展。</p><p>外界变化了，内心的心智模式就要改变，思维方法和心态要变化。今天这个世界，<strong>唯一不会改变的就是改变</strong>。按照外界的条件变化，升级你的心智模式。</p><p><strong>老子讲：“道可道，非常道。”</strong>世间一切规律都不是一成不变的，是随着环境的改变而改变的；世间一切道理（真理）也不是绝对的，是随着时代的变迁而与时俱进的。</p><p>一切我们奉为真理的思维模式都还有其局限性。职业发展史一个自身不断成长、外界日新月异的领域，我们每天进入新的“漩涡”，却还以过去的方式“游泳”，最后劳而无获。就好像那个溺水者一样，我们很多时候往往不是不够努力，而是努力方向错误。</p><p><strong>努力付出就一定有回报？</strong></p><p>选择不对，努力白费，错误的努力比不努力还要可怕。每个人都需要给自己未来一个大的方向。</p><p><strong>每个人都要给自己做长远的职业规划，并制定详细的计划？</strong></p><p>一般最多做3年的业务规划。未来充满了变数，发展过于迅速。</p><p>对一生进行充分规划永远是一个好想法，但是一定要记得写下来的时候要用铅笔，而且手边要有有块橡皮。   ——Adam Marchick</p><p><strong>只要是金子，总会发光的？</strong></p><p>如果你是金子，你的常态不是发光，而是不发光！千万别以为金子就要发光！！即便是金子，常态就是不发光。</p><p>如果你是金子，你要做的事情是找到让自己发光的方法。记得这已经不是一个三顾茅庐的年代，今天的诸葛亮需要博客、微博和影响力。</p><p><strong>我一旦找到自己非常热爱的工作，我就绝不会像现在这样吊儿郎当的，我会全力以赴？</strong></p><p>事实上，只有当你全力投入的时候，你才会从工作中获得快乐。的确有一些工作会让你兴趣持久一点，有一些会让你兴趣短一些，但是你的吊儿郎当才是热爱的最大障碍。</p><p>这些道理过去的生活中都曾深深影响过我们，但是在新的领域中，却把我们死死困住，这让我们的能力隔绝，让我们劳而无获，让我们离我们想要的东西渐行渐远。</p><p>在今天，你需要时时刻刻提醒自己，那些3年前帮助你成功的心智模式，现在也许正在阻碍你3年后的成功。      （类比DELL公司的情况）</p><p><strong>心智模式：</strong>由本能和过去我们对世界的观察而来，如果还是把大脑比作电脑的话，心智模式就是我们的操作系统加上你安装的软件和硬盘里面的所有东西。</p><p><strong>三种心智模式的来源：</strong></p><p>1、自然世界，我们对于外界的直接体验。</p><p>2、概念模式，我们从别人那里获得对于世界的间接体验。</p><p>3、推论和归纳，我们依靠推理形成的结论。</p><p>简单的说，我们自己的感官体验、我们从社会获得的所有信息和我们受的教育，还有我们自己思考的结果和我们过去的经历，都构成我们自己的心智模式。</p><p>学习相关：<strong>东方人更加关注事物与事物之间的联系，而美国人则更加关注事物的属性。东方的学问倾向于系统论、实用主义（比如说中医、易经），而西方人却更加专注于本质论和实证主义（哲学、科学）。</strong></p><p><strong><u>我们过去的体验、经历，受到的教育和社会环境，决定了我们的兴智模式。而我们的心智又在改变我们未来的命运，好像我们一辈子都被安排好了一样，这听起来真让人沮丧。</u></strong></p><p>然而事实不是这样，虽然我们不能改变我们的过去，我们却能改变我们的过去，我们却能改变对于我们过去的看法，这才是心智模式的伟大之处。日本经营之神松下幸之助回忆自己获得成功的理由时说：</p><p>我获得成功，很大程度上是因为受到了上天的眷顾，他赐给了我三个恩惠，让我受益无穷。</p><p><strong>第一个</strong>恩惠，我家里很穷，穷到连饭都快吃不上了。托贫困的福，我从小就尝到了擦皮鞋、卖报纸等辛苦劳动的滋味，并以此得到了宝贵的人生经验。</p><p><strong>第二个</strong>恩惠，从一出生，我的身体就非常孱弱，托孱弱的福，我得到了锻炼身体的机会，这使得我老年也能保持健康的身体。</p><p><strong>第三个</strong>恩惠，就是我文化水平低，因为我练小学都没毕业。托文化水平低的福，我向世上所有的人请教，从未怠慢过学习。</p><p>穷困、孱弱和低学历的经历，被松下的心智模式构建成生命中受益无穷的恩惠。不管你的过去怎么样，我们完全有能力调整我们的心智模式，重新认识我们的过去，改变我们的未来。</p><p><strong>如何超越我们的心智模式？</strong></p><p>你常年生活在其中，就好像鱼生活在水中，混混沌沌，不知不觉。你需要一个机会，让自己意识到这个世界不是你想象的那个样子，你需要看到两个世界之间细小或者巨大差异。有了差异体验的你，才会开始慢慢地对你想象的世界有所察觉，我们称为后知后觉。</p><p>这种经历越来越多，你会越来越快意识到这些差距，你就能够马上做出反应，这叫做当知当觉的醒觉。最后你终于可以在事情发生之前，提前替换自己的固有模式，而挑选更好的模式来应对，这个时候你先知先觉，开始自我超越。</p><p>混沌——察觉——醒觉——超越 四个步骤，是心智模式升级的必经之路。</p><h2 id="第四章-成功学不能学"><a href="#第四章-成功学不能学" class="headerlink" title="第四章 成功学不能学"></a><strong><em>第四章 成功学不能学</em></strong></h2><p>成功是一个小概率事件，混的太惨也是。大部分人，还是过着不太成功也不太失败的日子。</p><p>如果我们要修理一辆汽车，你会只坚持用扳手，不用螺丝刀吗？我们既可以用扳手，也可以用螺丝刀。关键是，目标是把车修好。</p><p>如果你有一个梦想，那就去捍卫它；如果你有一个目标，那就去争取它。走起来！当你走在人生的路上，没有必要去羡慕那些站在高处的人，也没有必要轻视那些走在你后面的人，因为成功不是生命的高度，成功是生命的速度。成功在你此刻的脚下，成功就是越走越近。</p><p><strong>坚持就一定会成功吗？付出就一定会有收获？</strong></p><p>不一定。别被洗脑。<strong>坚持不等于成功，坚持只是成功的必要工具之一。放弃也是成功的必要工具。</strong></p><p>如果我们要成功，我们既要勇于坚持，也需要勇于放弃。坚持或放弃都是达到目标背后价值的手段，看清楚你成功背后的东西才是关键的。</p><p>坚持的是结果，放弃的是方式。目标都是相同的，坚持的是想要达到的目标，放弃的只是达到目标的手段和方式。</p><p><u><strong>大部分的矛盾冲突，就是因为双方都坚持自己的形式，而不是结果。打着爱的旗号来伤害人，而且还坚持不懈。佛教中的三毒之一“痴”，就是指这种执著于形式而不是结果的行为。</strong></u></p><p>你今天这样苦苦地坚持，这坚持背后，是在坚持结果，还只是在坚持方式？</p><p>模仿成功者就能成功，这是成功学的著名逻辑。</p><p>当你真正开始实践，才发现很多东西是无法模仿的，这就是生活的逻辑。</p><p>“我有翅膀，你有吗？”</p><p>创业不仅仅需要努力打拼和一腔热血，资本与人脉的积累至关重要。</p><p>马老师：很多时候少听成功专家讲的话。所有的创业者多花点实践学习别人是怎么失败的，因为成功的原因千千万万，失败的原因就一两点。所以我的建议就是少听成功学讲座，真正的成功学是用心感受的，有一天你就是成功者，你讲任何话都是对的。</p><p>成功的真正本义应该是：越走越近。</p><p>让自己成为一个能担当责任的人！这才是成功的真正目标。钱，地位，领导力只是让我们越走越近的一个个工具。</p><p>人生的真正的目标：就是那些你不会随着外界环境改变而改变的目标。</p><p>比如：让自己成为一个对自己负责任的人，或者你希望获得认同，或者你喜欢可以掌握生命，这些才是你不会改变的目标。</p><p>I gotta keep breathing. Because tomorrow, the sun will rise. Who knows what the could bring?</p><p>我不能停止呼吸，因为明天，当太阳升起来，谁知道潮水能带来什么？</p><p>​                        ———–2019/03/12</p><p>当你把成功的定义放在界外，你会把自己陷入一种不可控的焦虑，一种得到前的恐惧、得到后空虚的生活当中。你的天花板是别人的地板，而你总在向上看，从来没有留意过窗外的风景。</p><p>只有当你把成功的定义放在内心，你才能够真正获得可以掌控的幸福，获得那种贯彻始终的幸福生活。你可以安心地靠在窗口看看风景，然后更快上楼。</p><p><strong><u>回顾你的生命，那些让你最幸福、最快乐的时刻，是不是都来自于生命深深的底部？那些最艰辛的日子你默默的坚持，那些黑暗的日子你的眼睛里面闪着理想的光。回顾过去，那是你生命中一无所有的时刻，也是你生命中走得最快的时候，而成功就是越走越近。</u></strong></p><p>当你疲惫，那就歇息。</p><p>当你苦恼，那就哭泣。</p><p>当你快乐，那就小小的忘乎所以。</p><p>只要你继续前行，你就在成功。因为成功不在前方，成功就在当下，成功就是越走越近。</p><p>对自己说：成功就是越走越近，那么我现在就很成功。</p><p>罗兰：成功的意义应该是发挥了自己的所长，尽了自己的努力之后，所感到的一种无愧于心的收获之乐，而不是为了虚荣心或金钱。</p><p>老子：人法地，地法天，天法道，道法自然。</p><p>爱因斯坦：在一个崇高的目的支持下，不停地工作。即使慢，也一定会获得成功。</p><p>李开复：成功的定义其实就是让自己快乐。</p><p><strong>现代社会的三种毒药：消费主义、性自由和成功学。消费主义以品牌为噱头，以时尚为药效，恋物成瘾。性自由以人性为噱头，以性爱为药效，纵欲成瘾。成功学以速成为噱头，以名利为药效，误导急于走捷径成为人上人的年轻人投身其中，投机成瘾。</strong></p><h2 id="第五章-如何找到热衷一生的事业"><a href="#第五章-如何找到热衷一生的事业" class="headerlink" title="第五章 如何找到热衷一生的事业"></a><strong><em>第五章 如何找到热衷一生的事业</em></strong></h2><p>最好的方式是——年轻的时候你可以一见钟情，但是到了年纪你就该两情相悦一段，然后选择一个人白头偕老。最好的方式莫过于这样——年轻的时候你遇见谁都想白头偕老，年老的时候，你还是看到谁都一见钟情。</p><p>选择职业和选择天堂一样，很多时候你的工作会显得不那么炫目，而很多听上去的“好职业”，也许恰恰是“广告”。</p><p>你的时间需要规划，但永远不要百分之百地规划它。如果那样的话，你会扼杀自己创造性的冲动。</p><p>如果生命是旅途，你的眼睛就好像探照灯。你永远只能看到你所在之处的一百米处，一百米开外的地方到底怎么样你并不清楚。你能听到很多传奇和故事，但是无法做确切的计划。</p><p><strong>在你的视野范围之内，你需要精细的计划；在你听说的范围之内，你需要大方向的规划；而在那些你连听都没有听到过的地方，你需要的是相信。</strong></p><p>尝试总是冒险的，而不尝试是最大的冒险。</p><p><strong>兴趣有三种境界：兴趣、乐趣和志趣。</strong></p><p><u>兴趣是让你好奇的东西，让你觉得可以尝试一下。兴趣被快乐强化以后，就会成为乐趣。</u></p><p><u>乐趣是让你在其中获得快乐，也让你可以快乐地进入其中。</u></p><p><u>志趣会让你在其中找到自己的价值，让你觉得你可以投入一辈子。</u></p><p>年轻的时候，你应该凭着好奇尽可能多地尝试和体验一些工作，慢慢地在其中寻找自己感到乐趣的几个，最后自己专注于投资其中一个。最糟糕的往往是年轻的时候的你看到什么都想做一辈子，等到年老的时候，你还总是这样，什么都只能做一阵子。</p><p>打破“后来”模式的最好方法，就是在进入未知领域的时候，给自己一个不做选择、观察的空间和底线，在这个之前，不要作选择的决定，一旦过了这个底线，就大胆地开始选择。这就是最好的“选择”模式。（37%的作为样本，在后面63%中选择超过样本的）</p><p>如何找到最适合自己的工作？由于适合的职业是人与职业的匹配，所以你也需要建立关于自己与职业的基准线。有一段时间的工作经验和自我观察能帮你找到自己的“基准线”，而了解不同职业也是帮助你找到好工作的“基准线”。</p><p><strong>如何拆掉“职业艺术照”这堵墙？</strong></p><p>第一，别相信有完美的东西。</p><p>如果一个东西过于完美，那么一定是有问题的。</p><p>第二，看看卸妆照。</p><p>如何给职业的艺术照卸妆—-看穿职业背后的隐藏面</p><p>一、做一个在职人士的职业访谈</p><p>这个行业成功的人，他们往往是这个行业内最有洞察力和体验的人。</p><p>二、尝试一个与目标职业相关的培训</p><p>接触到职业相关的人，结识，获取信任。</p><p>三、进入一些专业职业论坛或者博客群</p><p>四、看招聘网站和公司网站</p><p>五、找一些职业数据库</p><p>​                ——2019/03/13</p><p>亚里士多德：你的天赋与社会需求的结合点，就是你职业所在。</p><p>天赋在慢慢增长，社会需求不断变化，你的最佳职业也在不断的变化。</p><p>尼古拉斯·海耶克极成功地挽救了瑞士破产的钟表行业，让它成为了数十亿的钟表帝国，他说：“你的时间需要规划，但永远不要百分百地规划它。如果那样的话，你会扼杀自己创造性的冲动。”</p><p><strong>《周易乾凿度》云，“‘易’一字含三义：所谓易也，不易也”，即简易、变化、不变三层含义。“道”是不会改变的，而“法”会简单地改变，至于做事情的方式“术”，就会经常地的改变</strong>。</p><p>职业规划中，人的价值和人的天赋就是人的“道”。人的深层价值观和天赋，是不会改变的。</p><p>职业规划中的“法”，指的是人做事情的方法、态度等。一个人做事情的方式会随着时间的发展和外界的变化缓慢的改变。</p><p>“术”是指具体的实践操作的方法。职业就是一个人和社会合作的方式和首段。你可以在这个地方用这个职位来做，也可以在那个地方用那个方式来做。值为可以不断地变动。</p><p>一件事情的价值，不取决于现在你判断的价值，而取决于在未来情况中的价值，这就叫做未来价值。</p><p>决定你十年后成就的完全不是工作的起薪，而是工作的平台、发展机会或者眼界。</p><p>​                2019/03/14</p><p>​    平台、资源、眼界、机会、好老板、失败的经验，这都是未来会升值的潜力生命股票，年轻的时候，即使牺牲点别的什么可以立即可得的利益，也要购买这些东西，它们会在未来的时间里面，增值百倍。</p><p>​    一段好的工作经历，未来价值无限。一段坏的人生经历，未来介质也无限。从这个角度来说，早失败比晚失败好，晚成功比失败好，晚成功比早成功强。</p><p>法国诗人勒内·夏尔：</p><blockquote><p>懂得静观大地开花结果的人，决不会为失去的一切而痛心。</p></blockquote><p>​    我们每一个人的内心都有一个这样的水杯。我们害怕失去而死死地盯着这个杯子，限制了我们的眼界，僵化了我们的思维，阻碍我们开到真正有价值的事情。有人的水杯叫做“专业”，有人的叫做“感情”，还有人的杯子叫做“安逸的好工作”。</p><p>​    <strong>这显然和我们的经验不符合，我们身边满是不愿意放弃的人。我们不愿意放弃明知道不合适的工作，因为“我们毕竟做了这么久”；我们不愿意放弃专业，因为害怕“四年白读了”；我们也不愿放弃一份完全绝望的感情，因为“我们在一起太久了”。</strong></p><p>我们热衷于根据过去的投入，而不是未来价值。经济学有一个专门的术语来解释这种现象，叫做沉没成本效应。</p><p>从经济学的角度来说，如果你已经确定电影毫无价值，最明智的选择就是马上离开。因为当你进入电影院的瞬间，50元已经损失了（沉没成本）。至于你坐下来15分钟以后，如果你选择离开，还可以节省一个半小时；如果你继续坐下来，你会继续浪费接下来的一个半小时，这个叫做追加成本。</p><p>沉没成本其实是已经损失的成本，为了这个损失而追加成本，最后只会头破血流。</p><p>已经投入并损失的价值，会造成我们对未来投入的判断。这就是沉没成本模式。由于害怕损失，所以继续投入，到后面损失却更大。这是我们常犯的错误，沉没成本模式。</p><p>越是自尊心强，或者越是由于“自卑而自大”的人，他们的沉没成本模式越严重，因为他们总希望证明自己是对的，没有走弯路。</p><p>你有没有这样的购物经验？当你走过商场，看到里面“直降300元！最后一天！”的牌子，你的内心是不是有一个声音在小声说：注意！今天不买，损失300元！结果你一激动花1000元买下这件衣服，却发现自己损失更多——你其实不太喜欢这件衣服，你穿两次就不穿了，而你衣柜里面因为害怕吃亏而买回来的衣服，已经远远超过因为喜欢买回来的衣服。由于害怕损失300元，结果你损失了1000元。</p><p>为了隐瞒一间小事情，而撒了一个小谎。然后为了不让自己的小谎言被揭穿，于是继续撒了一个更大的谎来弥补，最后你终于无法收拾，一败涂地。所以，千万不要为了一个谎言，而再说一个谎言。</p><p>我们总是害怕损失，而忘记我们可以获得更多。如果勇于承受这些损失，我们便有机会把我们的生命投向无限资源的未来，找到更好额途径弥补这些损失。</p><p>印度诗人泰戈尔在他的诗中写道：</p><blockquote><p>If you shed tears when you miss the sun, you also miss the stars.</p><p>如果你为失去太阳而哭泣，你也将失去群星。</p></blockquote><p>漂泊者很多，他们有一些共同的特征：精力充沛、梦想远大、适应能力强和没有真正的目标。正是因为他们缺乏真正的目标，他会下意识地进入一切真或假的机会，却在真正需要坚持的时候落荒而逃。漂泊者注定一辈子在躲避些什么，而不是在追寻些什么。</p><p>你可以在每一个行业的顶尖人物中找到他们。航行者同样精力充沛、梦想远大、适应能力强，但是他们拥有一个真正的目标。航行者很清楚自己到底要什么，这也让他敢于放弃一些机会，同时真正勇敢面对那些需要坚持的地方。</p><h2 id="第六章、原来我还可以这样活"><a href="#第六章、原来我还可以这样活" class="headerlink" title="第六章、原来我还可以这样活"></a>第六章、原来我还可以这样活</h2><p>​    如果你愿意，你总是可以掌控些什么。你没有必要得到允许才开始学习，你也没有必要得到机会才开始努力。如果你愿意，你现在就能够为这件事情做些什么，除非你的受害者模式让你深深陷入抱怨和自怜模式中。</p><p>​    我们生活在一个处处不公平的世界，所以我们总是希望在另一个地方，幻想在那里有我们追求的真正公平。我们期待过富有、期待过结婚、期待过进城、期待过出国，但是这一切在你真正达到的时候，你才会发现，原来你依然面对一个不公平的世界。</p><p>​    不管外界怎么样，我都有能力对自己的状况负责。这种人总能找到当下更好的方法，因为他明白，不管外界怎么样，下一步的生活，都是他们自己的！</p><p><strong>一、受害者天堂的第一条法则：推卸责任、保住面子</strong></p><p>​    受害者因为奉行“便秘就怪地球没引力”的真理，受害者天堂的人们个个都很有面子他们完美无缺、神采飞扬，中华五千年的美德集中在他们身上，他们从来没有犯过任何错误。</p><p>他们活得非常轻松，他们不需要承担责任，只要编故事就好了！这些故事一开始比较真实，后来慢慢地加进来夸大的、情绪化的甚至是假的情节。受害者们每天生活在这样的故事里面，慢慢的，自己也相信自己生活在一个老师不好、老板变态、老婆不可爱的世界里。</p><p><strong>二、受害者天堂的第二条法则：安心做坏事</strong></p><p>​    人之初，性本善，所以要做点坏事，经常会和良心发生冲突。但是受害者天堂的坏人们身心合一，因为他们的受害者故事帮他们取得良心豁免权。</p><p><strong>三、受害者天堂的第三条法则：让我们一起分享“凄惨故事会”</strong></p><p>​    在受害者天堂，如果你失恋了，你的女伴会集体聚集起来，陪你喝酒，说男人没有一个好东西（难道她们都试过）；如果你上午被老板骂了一顿，你会很快被吸收进公司的受害者小队，他们在中午聚餐，主要任务是一起讨论自己的老板有多变态；如果小孩子不小心摔到地上哇哇大哭，家长不会怪小孩没有走好，她会打地板说臭地板臭地板，孩子于是笑了。</p><p>在这样一个受害者的天堂，我们每天浸泡其中，居然慢慢习惯，沉浸其中，开始分享……</p><p><strong>四、受害者天堂的第四大法则：用受害来轻松获得同情和帮助</strong></p><p>​    如果你想轻松地获得帮助，最好的办法就是哭惨哭穷，到处诉说自己的伤心事和糟糕经历，然后找几个温暖的人待着。你很快可以轻松地出卖你的悲惨，换得足够的情感和物质支持。</p><p>​    装着装着，他们自己开始变得无能、柔弱，他们一边把自己搞得更惨，一边吸取越来越多的情感支持。他们的内心半斤暗爽、八两自怜，享受身边人源源不绝的帮助。</p><p>​    业余受害者会升级为一个专业受害人士——成为一个“情感黑洞”（心理学术语叫做边缘性人格），他们会无休止地寻求关爱，表现的犹如孤独的弃儿，抑郁、酗酒、暴食，带着过去的惨痛经历寻求帮助。当他们身边所有的支持者都被他搞得身心俱疲、无力支持的时候，它就会大声抱怨一句：“原来没有人爱我，你们都抛弃了我！”然后跳到下一个好心人全体中去…..如果没有好的帮助，他们一辈子，都会以这个为生了。</p><p>​    此类人格障碍患者——主要为女性——在自我形象、心境、行为和人际交往中表现不稳定。他们相信自己由于在童年被剥夺了充分的关爱而感到空虚、愤怒，有权要求抚爱，因此他们无休止地寻求关爱。在精神科和其他各类卫生保健机构中，此类人格障碍最为多见。当边缘性人格障碍患者感到他人的关心时，他们表现得犹如孤独的弃儿，为抑郁、物质滥用、饮食障碍和过去遭受的虐待寻求帮助。但当他们害怕失去别人的关心时，其心境会发生戏剧性改变，往往表现出不适当的、强烈的愤怒。与此同时还伴有对世界、对自身以及对他人看法的彻底转变——从黑到白，从恨到爱。反之亦然。</p><p><strong>五、受害者天堂的最后一条法则：自我伤害，绑架他人</strong></p><p>​    一哭二闹三上吊，绝食自杀和今夜不回家都是经典桥段。你会发现那些上演过这些桥段的家庭，经常会一代代地继续上演下去。</p><p>​    这个天堂给了我们那么多好处：推卸责任、安心做坏事、找到团队、获得帮助和同情、保住面子……正是有那么多的好处，所以我们总是恋恋不舍。没有人想当命运的奴隶，除非做这个奴隶有不少的好处。</p><p>​    所以当生活没有压力的时候，我们真诚地希望自我掌控。但是一旦遇到问题，我们的受害者模式又习惯性地带我们回到这个受害者天堂。受害者模式变成我们的心理吗啡，我们通过它来逃避短暂的痛苦，让自己陷入无法自控的长久折磨中去。</p><p>​    我们在这个天堂获得短暂的快乐和安全，却损失了自信、自省以及对未来的期待和盼望。最可怕的是，我们失去了对自己生命的掌控。因为受害者深深坚信，自己快乐与否、成功与否掌握在他人手中。</p><p>对生命屈服有很多种，最可怕的是那种喜欢被奴役。</p><p><strong>拒绝受害，现在就掌控你的生命</strong></p><p>每个人都是自己生命之舟的掌控者，我们往往会因为外界的态度而改变自己的意愿。</p><p>如果你愿意，你总是可以掌控些什么。你没有必要得到允许才开始学习，你也没有必要得到机会才开始努力。如果你愿意，你现在就能够为这件事情做些什么，除非你的受害者模式让你深深陷入抱怨与自怜中。</p><p><strong>这个世界不公平——出国会让事情变好吗？</strong></p><p>有人说世界是不公平的。每个人生下来的起跑线就不同，有人抱怨自己没有一个好父亲，有人抱怨自己没有好的天赋，他们觉得世界太不公平啦！但是当他们看到有人天生没有脚，有人出生于连饭都吃不上的赤贫家庭，他们又觉得这个世界还是蛮公平的。</p><p>有人说这个世界也是公平的，每一个人都需要面对死亡，而每一个人面对死亡的时候，都需要直面自己生命的价值，而这个价值，是你可以去创造的，与起点无关。</p><p>如果我们生活在一个处处不公平的世界，那么我们就总希望在另一个地方，幻想在那里有我们追求的真正的公平。我们期待过富有，期待过结婚，期待过进城，期待过出国，但是这一切在你真正到达的时候，你才会发现，原来你依然面对一个不公平的世界。</p><p>所以，不管你跑到那里，世界都是不公平的，我们既然无法让这个世界永远公平，也找不到一个永远公平的地方。</p><p>比尔·盖茨：</p><blockquote><p>Life is not fair ，get used to it .</p><p>生活是不公平的，去适应它。</p></blockquote><p>这个世界是不公平的，你获得越久，站的越高，看得越清，你就约会意识到，世界的本质其实就是不公平。所以所有的宗教、法律都在追求公平，追求公平恰恰说明，世界是不公平的。这也是为什么很多科学家、法学家、企业家最终遁入宗教寻找安宁的原因：他们曾经努力创造一种公平，但是当他们努力到达一个很高的高度的时候，却发现他们依然面对那些无法改变的不公平。比如梁启超，他在戊戌变法后精神沮丧，偶尔接触佛法，拍案惊奇，在《饮冰室合集·专集》写道：</p><blockquote><p>社会既屡更丧乱，厌世思想，不期而自发生；对于此浑浊世界，生种种愤懑悲哀，欲求一安心立命之所；稍有根器者，则必逃遁而入佛。</p></blockquote><p>如果这个世界导出是不公平，那么你应该找到那个能让你改变的不公平，然后用你的方式影响他们，这会不会让这个世界更美好一些。</p><p><strong>学会如何面对不公平，远远比学会如何评价不公平重要。不公平是我们生命中的契机，是生命提供给我们，让自己和世界变得更加美好的领导机会。</strong></p><p>面对不公平，无聊的人抱怨、懦弱的人受害、聪明的人跟随、清高的人躲避，而勇敢而智慧的人尝试用自己方式来改变，掌控我们这个世界。一个人面对不公平的态度，最能反映他的品德。</p><h3 id="如何拆掉受害者这堵墙"><a href="#如何拆掉受害者这堵墙" class="headerlink" title="如何拆掉受害者这堵墙"></a>如何拆掉受害者这堵墙</h3><p>一、后知后觉</p><p>1.找到自己的受害者情景。</p><p>2.找到受害者故事背后的模式。</p><p>3.给自己一个新的掌控故事。</p><p>二、当知当觉</p><p>1.尽快意识到自己的情绪。</p><p>2.让自己与这种模式待一段。</p><p>3.尝试拆掉它！</p><p>三、先知后觉</p><p>四、不知不觉</p><p>​    这是想要达到的最佳状态，有了这个心智模式的人，会发现自己体会到了那种久违的掌控自己生命的感觉。他们会轻松跨过那些生命中很多人止步不前的地方。偶尔还会回头看看那群被隔绝在自己思维之外的人——奇怪，为什么他们不这样做呢？</p><p>恭喜你成为这个自我掌控的人。</p><p>​            ———————2019/03/15</p><h2 id="第七章-幸福是一种转换力"><a href="#第七章-幸福是一种转换力" class="headerlink" title="第七章    幸福是一种转换力"></a>第七章    幸福是一种转换力</h2><p>​    父母为孩子苦心写好了一场生命的剧本，仔细打磨，多方求证，打理好所有演出成功所需要的阴暗规则，只等孩子戴着面具，上场表演他们写好的剧本，等待他们在看台下的掌声。</p><p>​    你的生命就像你的家。因为你的不支持，却让别人进来布置。但是你不要忘了，在里面住一辈子的还是你啊。</p><p>​    你不妨把自己的梦想想象成一家上市公司的董事会，你和你父母对于“你”这个公司都有一定的发言权。他们占有一定的股份。他们有权利发言，有权利表达观点，而你也有义务认真倾听、考虑。但记得在关于你人生的董事会上，你永远是最大的股东。</p><p>​    如果你觉得你的生活出现了问题，也许并不是因为你赚的不够多，名声不够大，而恰恰是因为你缺乏一种把物质转化为幸福额能力。</p><p>​    我们的父母很同意就有这样的思维方式，把自己缺失的东西放大，强加于他们额儿女身上。尤其是独生子女的家庭，儿女占用了所有的资源，所以也应该承担他们所有的希望。当资源付出到一定程度，这样一场对儿女爱的绑架就开始布局——如果你不按照我的计划发展，我就要伤心，就要内心压抑偷偷饮泣。我这一辈子把你养大，现在过得这么累，全都是因为你！</p><p>​    活在让别人为你设计的生活中也一样：这种生活什么都好，也许就只有一个缺点，那不是你真正热爱的生活。你可能会享受几天，然后忍受几个月或者几年，然后再最后选择放弃自己或者放弃别人。这里没有好结局。</p><p>​    对于那些打着爱的旗号，视图设计你的生命来说，不管他们的武器是循循善诱、哭天喊地这样的情感攻势，还是外面世界很无奈、你年纪太小不懂事之类的恐吓，你都要坚持如下的心智模式：我爽——你们不爽。因为只有坚持你喜欢的事情，你才会真正地幸福起来。而父母会慢慢发现，他们坚持的只是让你幸福的方式，如果你真的用自己的方式找到幸福，他们也会真正地快乐。</p><p>​    在我们今天这个物欲横流、价值单一、家庭压过自我的世界，坚持自己的想法是一件需要勇气但是绝对值得的事情，尤其在刚刚开始那几年。</p><h3 id="在人生的董事会上，你永远是最大的股东"><a href="#在人生的董事会上，你永远是最大的股东" class="headerlink" title="在人生的董事会上，你永远是最大的股东"></a>在人生的董事会上，你永远是最大的股东</h3><p><strong>一、不要抱怨</strong>。不要抱怨父母，只是每个时代的教育方式不同，尽量做到自己以后不再用这种方式教育孩子。</p><p>​    每个人身上都有两套系统，社会系统（男人）负责满足外界要求，换回生活需要。而自我系统（女人）负责满足内心需求，把这些东西转换为我们心灵需要的价值，让我们快乐。社会系统总去做更有用的事情，自我系统总去做更有趣的事情。</p><p>这个系统像不像我们的身体？社会系统好像我们的手，负责从外界摄取食物进入体内。而自我系统好像我们的胃，负责把食物转化为营养，传送到身体四肢，让我们的身体健康，手脚有力量。</p><p>如果你的身体营养不良，也许是因为你吃得不够好，但大部分时候，都是你的胃出了问题，你缺乏把食物转化为营养的能力。如果你觉得你的生活出了问题，也许并不是因为你赚得不够多，名声不够大，而恰恰是因为你缺乏一种把物质转化为幸福的能力。</p><p><strong>二、处理那些“忍忍看，或者他们是对的呢”或者“万一我要是错了怎么办”的想法。</strong>父母的确会给你很有效的建议，你也的确会对自己的的生命做很不切实际的计划，事实上我们总是高估自己计划的正确性和他们建议的荒谬性，如果你安静下来好好听，你会发现其实你们讲的是同一个计划。要判断这些建议是否对你真的有好处，最好的方式时低成本地尝试和体验一下。比如去他们建议的单位实习，接触一下海龟回来的人，见见那个他们强力推荐的小伙子，然后用你自己的头脑来判断。万一错了，你还收获到很多的经验和下一次再来的勇气。在你按照自己的生活方式生活的途中，错误是一种最好的、也是必需的学习方式。</p><p><strong>三、尊重他们，尝试沟通。</strong>如果你希望你的家庭进入双赢的状态，没有任何人，只有你能停止这种自毁式的家庭自杀模式。开诚布公地跟父母畅谈一次，像成年人一样拿出彼此的理由和证据，用事实和数据而不是发脾气或者把自己锁在房间来说服对方，把自己的幸福主张告诉彼此。</p><h3 id="幸福是一种转换力。"><a href="#幸福是一种转换力。" class="headerlink" title="幸福是一种转换力。"></a>幸福是一种转换力。</h3><p>​    由于花了太多时间关注社会系统，很多“成功人士”不懂从成功与财富中吸取生命的营养，他们觉得饥饿，于是下意识地占有更多的物质——他们的生命像是一座华丽的城堡，有华丽的外墙，黄金的圆顶，人们围观而羡慕。城堡的内里却是毛坯房，竹板床。你说他是贫穷，还是富裕？你说他是可恨，还是可怜？</p><p><strong><u>不要过分的攀比。</u></strong></p><p>社会的你其实不喜欢成功，你喜欢的其实是比别人成功。而自我的你其实也不喜欢成功，你喜欢的是成功的过程和希望。对幸福来说，成功就是越来越近。</p><h3 id="谁动了我们的幸福"><a href="#谁动了我们的幸福" class="headerlink" title="谁动了我们的幸福"></a>谁动了我们的幸福</h3><p><strong>一、我要比你更好</strong></p><p>本来社会系统和自我系统一个管外、一个管内，管外的社会系统通过与外界的比较推动你更好地表现（比如让你努力表现优异），而管内的自我系统把资源转化为绵绵不绝的幸福（比如让2万元钱转化为幸福感）。</p><p>我们过分关注外界的事情，所以我们的社会系统开始越界，掌管我们自己的幸福。</p><p><strong>二、“我要更多”与一个人需要多少土地</strong></p><blockquote><p>《一个人需要多少土地》，讲的是一个叫做帕霍姆的地主向巴什基尔人的头领购买土地，当他问及土地的价格，头领告诉他：“我们的价格一直不变：一天1000卢布……我们以天为单位卖地。你一天走多远，走过的土地都是你的。而价格是一天1000卢布……但有一个条件：如果你不能在当天返回出发地点，你就将白白失去那1000卢布。”</p><p>帕霍姆从第二天早上开始圈地，他努力地往外走，一直到不得不往回走，才发现自己走得太远了。于是他用尽全力狂奔回来，在最后一瞬间回到了原点，但是却吐血而死。他的仆人捡起那把铁锨，在地上挖了一个坑，把帕霍姆埋在了里面。帕霍姆最后需要的土地只有从头到脚那么一小块。</p></blockquote><p>总有人会比你更成功！你总能得到更多！被社会系统接管幸福系统的人，像在食物中饿死的无胃的人一样，永远吃不饱。正如我前面谈到的成功正态分布，成功从来只是少数人的游戏。社会先给我们定义“成功”（一个到达才允许幸福的资格），然后狞笑着让我们参与每一场永远只有少数人笑，多数人哭的游戏。社会规定的“幸福”永远是稀缺品。</p><blockquote><p>正如故事一开始看到的那样，我们在很小的时候，社会系统和自我系统是一体的。我们为了一块食物放声哭泣，为了一个拥抱哈哈大笑。父母也希望我们是那个样子，所以那个时候我们身上的两套系统非常和睦，我们做的就是我们想的，我们想的就是我们做的。</p><p>但是慢慢地，社会我和自我开始分离，因为他们会进入这样一个社会。</p><p>小学一年级的时候，你跑过去告诉妈妈，我得了100分，妈妈很高兴地摸摸你的头，说真是妈妈的好孩子，妈妈爱你。</p><p>第二个月你跑过去，说妈妈我得了50分，妈妈说你还好意思回来？我没有你这个不争气的东西！</p><p>你的自我说：我想要妈妈的爱。</p><p>社会我马上回答：那我就需要考一个好分数。</p><p>他们俩慢慢明白了一个道理：妈妈爱好分数，跟我没有什么关系。</p><p>哥哥高考完了，他兴冲冲地回家，说我考上清华了！于是亲戚们敲锣打鼓地说真了不起，老早就看出来你是一个聪明的孩子。</p><p>高考完了，你兴冲冲地回家，说我考上哈佛了！于是亲戚们敲锣打鼓地说真了不起，但是你又继续解释这是哈尔滨佛学院。于是大家都奇怪地对你笑说，你爸你妈供你读书不容易，你要好好学习。</p><p>你的自我说：我想要亲戚喜欢我。</p><p>社会我说：谁让你不上清华上哈佛，大家都喜欢清华的。</p><p>他们俩慢慢明白了一个道理：亲戚喜欢的是清华，和我没有什么关系。</p><p>你的第一份工作，你出门遇到陌生人递过去名片：经理。对方说经理您好您好，快请进。</p><p>你的第一份工作，你出门遇到陌生人递过去名片：助理。对方说助理你好你好，你先等一下。</p><p>你的自我说：我想要受尊重。</p><p>你的社会我回答：那就需要去当经理。</p><p>他们俩慢慢明白了一个道理：是经理受人尊重，跟我没有什么关系。</p><p>遭遇爱情，你对你的女朋友说，我爱你。她问你有房吗？你说有，她说我好爱你，永远。</p><p>遭遇爱情，你对你的女朋友说，我爱你。她问你有房吗？你说有，租的。她说我很爱你，但是……</p><p>你的自我说：我想要女朋友。</p><p>你的社会我回答：那就需要一个房。</p><p>他们俩慢慢明白一个道理：女朋友爱我的房子，跟我没有什么关系。</p><p>终于有一天社会我对自我说：你他妈的怎么搞的？我们俩一起出去混世界，结果每次都和你没有什么关系！不如你不要出来了！</p><p>自我于是伤心地回到家里，发誓再也不出门。</p><p>自我于是就这样慢慢萎缩，社会我也就这样越长越大。在未来的日子里，社会我获得了妈妈的“爱”、亲友的认同、社会的尊重，获得了女朋友和经理的名片，但是却总觉得内心空空的。虽然他拥有很多很多的东西，但是他却丢掉了自己的幸福系统，不懂得兑换幸福了。因为他很少获得过来自自我的礼物：内心的激情、动力、充实与宁静。</p><p>我们很听话地长成为一群有脑无心的人，一群有逻辑没情感的人，一群讲高度不讲尊重的人。我们长成为别人要求的样子，并且以此为荣。</p><p>就这样，我们把自己弄丢了。</p></blockquote><h2 id="第八章-上天不需要你成功，它只需要你尝试"><a href="#第八章-上天不需要你成功，它只需要你尝试" class="headerlink" title="第八章  上天不需要你成功，它只需要你尝试"></a>第八章  上天不需要你成功，它只需要你尝试</h2><blockquote><p>Waiting for life is waiting for death.</p><p>等待生命就是等待死亡。</p></blockquote><p>与其在等待中枯萎，不如在行动中绽放。</p><p>如果你在一两个行业做过十年，那你就是精英；如果你在三四个行业做过十年，你是精华；如果你在不同的五六个行业做过十年，那你是精神病——企业讨厌不断开始的人，滚石不生苔，转行不聚财。</p><p>如果说一个好的开始等于成功的一半，那么坏的开始至少等于成功的三分之一。</p><p>当一个人等于与拖延的成本，远远高于他真正开始行动所需的成本，他就会慢慢陷入越等待越不行动的怪圈。——“等死模式”</p><p>一旦陷入等死模式，最好的选择就是行动起来！穿越过去。因为你等待的成本，远远高于你穿越的成本！</p><p>穿越也许会有短期痛苦，但是等死往往会带来更大的永久损失。</p><blockquote><p>我们真正的痛苦，来自于因耽误而产生的持续的焦虑，来自于因最后时刻所完成项目质量之优劣而产生的负罪感，还来自于因为失去人生中许多机会而产生的深深的悔恨。——《战胜拖拉》尼尔·菲奥里</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 读书 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 读书笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>FavSong-往后余生</title>
      <link href="2019/05/26/FavSong-%E5%BE%80%E5%90%8E%E4%BD%99%E7%94%9F/"/>
      <url>2019/05/26/FavSong-%E5%BE%80%E5%90%8E%E4%BD%99%E7%94%9F/</url>
      
        <content type="html"><![CDATA[<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&id=1342853241&auto=1&height=66"></iframe><a id="more"></a><ul><li><h2 id="评"><a href="#评" class="headerlink" title="评"></a><strong>评</strong></h2></li></ul><blockquote><p><strong>人生总是充满了惊喜和失落<br>    有恰到好处的遇见<br>     也有撕心裂肺的怀念<br>    但时间总是向前<br>    没有一丝可怜<br>    不论剧终还是待续<br>     愿你都能以梦为马，不负此生…</strong></p><p>​                                                            —— 作者 · <a href="https://music.163.com/user/home?id=574887172">马良leo</a></p></blockquote><blockquote><p>“ <strong>我以晦朔春秋为聘，不知你愿否共我度完蜉蝣小年。</strong>”</p><p>​                            —— <a href="https://music.163.com/user/home?id=125379624">Koooin</a></p></blockquote><blockquote><p>“<strong>爱你如长风，独行若青衫，习技似绣刀</strong>”</p><p>​                        ——- gek·<a href="https://music.163.com/#/user/home?id=125159683">踏马无归</a></p></blockquote><ul><li><h2 id="词"><a href="#词" class="headerlink" title="词"></a><strong>词</strong></h2></li></ul><blockquote><h3 id="往后余生-江皓北（cover-马良）"><a href="#往后余生-江皓北（cover-马良）" class="headerlink" title="往后余生 - 江皓北（cover 马良）"></a>往后余生 - 江皓北（cover 马良）</h3><p>在没风的地方找太阳</p><p>在你冷的地方做暖阳</p><p>人事纷纷</p><p>你总太天真</p><p>往后的余生</p><p>我只要你</p><p>往后余生</p><p>风雪是你</p><p>平淡是你</p><p>清贫也是你</p><p>荣华是你</p><p>心底温柔是你</p><p>目光所致</p><p>也是你</p><p>想带你去看晴空万里</p><p>想大声告诉你我为你着迷</p><p>往事匆匆</p><p>你总会被感动</p><p>往后的余生</p><p>我只要你</p><p>往后余生</p><p>冬雪是你</p><p>春华是你</p><p>夏雨也是你</p><p>秋黄是你</p><p>四季冷暖是你</p><p>目光所致</p><p>也是你</p><p>往后余生</p><p>风雪是你</p><p>平淡是你</p><p>清贫也是你</p><p>荣华是你</p><p>心底温柔是你</p><p>目光所致</p><p>也是你</p></blockquote><ul><li><h2 id="权"><a href="#权" class="headerlink" title="权"></a><strong>权</strong></h2></li></ul><blockquote><footer><strong>网易云音乐 · 马良</strong><cite><a href="https://music.163.com/#/song?id=557584888">往后余生</a></cite></footer></blockquote>]]></content>
      
      
      <categories>
          
          <category> 生活 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> song </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>FavSong-相守</title>
      <link href="2019/05/18/FavSong-%E7%9B%B8%E5%AE%88/"/>
      <url>2019/05/18/FavSong-%E7%9B%B8%E5%AE%88/</url>
      
        <content type="html"><![CDATA[<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&id=461678167&auto=1&height=66"></iframe><a id="more"></a><ul><li><h2 id="评"><a href="#评" class="headerlink" title="评"></a><strong>评</strong></h2></li></ul><blockquote><p><strong>相守无非这样，熬的起孤独的汤，敢舍弃久居的安稳，承受的了千年的苦，只为了百年平淡相伴。</strong></p><p>​                                                            —— 作者 · <a href="https://music.163.com/user/home?id=264256080">栗先达</a></p></blockquote><blockquote><p>“一个人对你的好，并不是立刻就能看到的。因为汹涌而至的爱，来得快去的也快。而真正对你好的人，往往是细水长流。你可能会怪他没有付出真心，但在一天天过日子里，却能感觉到他对你无所不在的关心。好的感情，不是一下子就把你感动晕，而是细水长流的把你宠坏。一辈子很短，有个人陪着真好。”</p><p>​                            —— <a href="https://music.163.com/user/home?id=61555005">tang小盐</a></p></blockquote><ul><li><h2 id="词"><a href="#词" class="headerlink" title="词"></a><strong>词</strong></h2></li></ul><blockquote><h3 id="相守-笑意（cover-栗先达）"><a href="#相守-笑意（cover-栗先达）" class="headerlink" title="相守 - 笑意（cover 栗先达）"></a>相守 - 笑意（cover 栗先达）</h3><p> 微风过 树微动</p><p> 叶叶只为花相守</p><p> 愿只求 胭脂留</p><p> 有你在左我在右</p><p> 说太多 没有用</p><p>有缘会 长相守</p><p>又何必 强人留</p><p>为了红颜独消瘦</p><p>天空总有云卷云舒偶有彩虹</p><p>万种愁皆是执念在心头</p><p>雨过后忆又暖感受</p><p>在夜深人静变成了温柔</p><p>暗香游 夜色稠</p><p>星月相依长相守</p><p>韶华间 弄轻袖</p><p>鸳鸯和仙都没有</p><p>尚年幼 不懂愁</p><p>恐怕要悟留白头</p><p>岁月里 万物久</p><p>唯有不懂是罢休</p><p>我们隔着月的娇羞星的河流</p><p>看不透过去现在和以后</p><p>阴晴圆缺有始有终</p><p>别皱了眉头丢掉了所有</p><p>风吹过更迭了四季</p><p>黑夜里我多想牵着你</p><p>日子老旧若能重头</p><p>再饮一碗酒 敬不安的所有</p><p>在故事的最后尽头</p><p>有我陪着你</p><p>直到永久</p></blockquote><ul><li><h2 id="权"><a href="#权" class="headerlink" title="权"></a><strong>权</strong></h2></li></ul><blockquote><footer><strong>网易云音乐 · 栗先达</strong><cite><a href="https://music.163.com/#/song?id=409650012">相守</a></cite></footer></blockquote>]]></content>
      
      
      <categories>
          
          <category> 生活 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> song </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>工厂模式-设计模式</title>
      <link href="2019/04/22/%E5%B7%A5%E5%8E%82%E6%A8%A1%E5%BC%8F-%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
      <url>2019/04/22/%E5%B7%A5%E5%8E%82%E6%A8%A1%E5%BC%8F-%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<h1 id="工厂模式"><a href="#工厂模式" class="headerlink" title="工厂模式"></a>工厂模式</h1><p>Java 中最常用的设计模式之一。这种类型的设计模式属于创建型模式，它提供了一种创建对象的最佳方式。</p><p>在工厂模式中，我们在创建对象的时候不会对客户端暴露创建逻辑，并且通过使用一个公用的接口来指向新创建的对象。</p><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p><strong>目的：</strong>定义一个创建对象的接口，让其子类自己决定实例化哪一个工厂类，工厂模式使其创建过程延迟到子类进行。</p><p><strong>主要解决：</strong>主要解决接口选择的问题。</p><p><strong>何时使用：</strong>我们明确地计划不同条件下创建不同实例时。</p><p><strong>如何解决：</strong>让其子类实现工厂类接口，返回的也是一个抽象的产品。</p><p><strong>关键代码：</strong>创建过程在其子类执行。</p><p><strong>应用实例：</strong>您需要一辆汽车，可以直接从工厂里面提货，而不用去管这辆汽车是怎么做出来的，以及这个汽车里面的具体实现。 2、Hibernate 换数据库只需换方言和驱动就可以。</p><a id="more"></a><p><strong>优点：</strong></p><ol><li>一个调用者想创建一个对象，只要知道其名称就可以了。</li><li>扩展性高，如果想增加一个产品，只要扩展一个工厂类就可以。</li><li>屏蔽产品的具体实现，调用者只关心产品的接口。</li></ol><p><strong>缺点：</strong>每次增加一个产品时，都需要增加一个具体类和对象实现工厂，使得系统中类的个数成倍增加，在一个程度上增加了系统的复杂度，同时也增加了系统具体的依赖。</p><p><strong>使用场景：</strong></p><ol><li>日志记录器：记录可能记录到本机硬盘、系统事件、远程服务器等，用户可以选择记录日志到什么地方。</li><li>数据库访问，当用户不知道最后系统采用哪一类数据库，以及数据库可能变化时。</li><li>设计一个连接服务器的框架，需要三个协议，“POP3”、“IMAP”、“HTTP”，可以把三个作为产品类，共同实现一个接口。</li></ol><p><strong>注意事项：</strong>作为一种创建类模式，在任何需要生成复杂对象的地方，都可以使用工厂方法模式。有一点需要注意的地方是复杂对象适合使用工厂模式，而简单对象，特别是只需要通过 new 就可以完成创建的对象，无需使用工厂模式。如果使用工厂模式，就需要引入一个工厂类，会增加系统的复杂度。</p><h2 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h2><p>创建一个Shape 接口和实现 Shape接口的实体类。下一步是定义工厂类ShapeFactory 。</p><p>FactoryPatternDemo，我们演示类使用ShapeFactory 来获取 Shape 对象。它将向 ShapeFactory 传递信息，以便获取它所需对象的类型。</p><img src=https://gitee.com/gek7777/cdn.io/raw/master/image/20190422-1.jpg ><h3 id="步骤-1"><a href="#步骤-1" class="headerlink" title="步骤 1"></a>步骤 1</h3><p>创建一个接口：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> inteface Shape &#123;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">draw</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="步骤-2"><a href="#步骤-2" class="headerlink" title="步骤 2"></a>步骤 2</h3><p>创建实现接口的实体类：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//三角类</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Rectangle</span> <span class="keyword">implements</span> <span class="title">Shape</span> </span>&#123;</span><br><span class="line">    <span class="meta">@override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">draw</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Inside Rectangle :: draw() method.&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//正方形</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Square</span> <span class="keyword">implements</span> <span class="title">Shape</span> </span>&#123;</span><br><span class="line">    <span class="meta">@override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">draw</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Inside Square :: draw() method.&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//圆形</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Circle</span> <span class="keyword">implements</span> <span class="title">Shape</span> </span>&#123;</span><br><span class="line">    <span class="meta">@override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">draw</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out/println(<span class="string">&quot;Inside Circle :: draw() method.&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="步骤-3"><a href="#步骤-3" class="headerlink" title="步骤 3"></a>步骤 3</h3><p>创建一个工厂，生产基于给定信息的实体类的对象。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ShapeFactory</span> </span>&#123;</span><br><span class="line">    <span class="comment">//使用 getShape 方法获取形状类型的对象</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Shape <span class="title">getShape</span><span class="params">(String shapeType)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(shapeType == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> nunll;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(shapeType.equalsIgnoreCase(<span class="string">&quot;CIRCLE&quot;</span>)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> Circle();</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span> (shapeType.equalsIgnoreCase(<span class="string">&quot;RECTANGLE&quot;</span>)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> Rectangle();</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span>(shapeType.equalsIgnoreCase(<span class="string">&quot;SQUARE&quot;</span>)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> Square();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="步骤-4"><a href="#步骤-4" class="headerlink" title="步骤 4"></a>步骤 4</h3><p>使用该工厂，通过传递类型信息来获取实体类的对象。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FactoryPatternDemo</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span> <span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        </span><br><span class="line">        ShapeFactory shapeFactory = <span class="keyword">new</span> ShapeFactory();</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//获取 Circle 对象，并调用他的draw方法</span></span><br><span class="line">        Shape shape1 = shapeFactory.getShape(<span class="string">&quot;CIRCLE&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//调用 Circle 的 draw 方法</span></span><br><span class="line">        shape1.draw():</span><br><span class="line">        </span><br><span class="line">      <span class="comment">//获取 Rectangle 的对象，并调用它的 draw 方法</span></span><br><span class="line">      Shape shape2 = shapeFactory.getShape(<span class="string">&quot;RECTANGLE&quot;</span>);</span><br><span class="line"> </span><br><span class="line">      <span class="comment">//调用 Rectangle 的 draw 方法</span></span><br><span class="line">      shape2.draw();</span><br><span class="line"> </span><br><span class="line">      <span class="comment">//获取 Square 的对象，并调用它的 draw 方法</span></span><br><span class="line">      Shape shape3 = shapeFactory.getShape(<span class="string">&quot;SQUARE&quot;</span>);</span><br><span class="line"> </span><br><span class="line">      <span class="comment">//调用 Square 的 draw 方法</span></span><br><span class="line">      shape3.draw();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="步骤-5"><a href="#步骤-5" class="headerlink" title="步骤 5"></a>步骤 5</h3><p>执行结果：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Inside Circle::draw() method.</span><br><span class="line">Inside Rectangle::draw() method.</span><br><span class="line">Inside Square::draw() method.</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Design Pattern </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java-包（package）</title>
      <link href="2019/04/15/Java-%E5%8C%85%EF%BC%88package%EF%BC%89/"/>
      <url>2019/04/15/Java-%E5%8C%85%EF%BC%88package%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="Java-包（package）"><a href="#Java-包（package）" class="headerlink" title="Java 包（package）"></a>Java 包（package）</h1><p>为了更好的组织类，Java 提供了包机制，用于区别类名的命名空间。</p><h2 id="包的作用"><a href="#包的作用" class="headerlink" title="包的作用"></a>包的作用</h2><ol><li>把功能相似或相关的类或接口组织在同一个包中，方便类的查找和使用。</li><li>如同文件夹一样，包也采用了树形目录的存储方法。同一个包中的类名是不同的，不同的包中的类的名字是可以相同的，当同时调用两个不同包中相同类名的类时，应加上包名加以区别。因此，包可以避免名字冲突。</li><li>包也限定了访问权限，拥有包访问权限的类才能访问某个包中的类。</li></ol><p>Java 使用包（package）这种机制是为了防止命名冲突，访问控制，提供搜索和定位类（class）、接口、枚举（enumerations）和注释（annotation）等。</p><p>包的语法格式为：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> pkg1.[pkg2.[pkg3...]];</span><br><span class="line"><span class="comment">//例如</span></span><br><span class="line"><span class="keyword">package</span> net.java.util;</span><br></pre></td></tr></table></figure><p>package（包）的作用是把不同的Java 程序分类保存，更方便的被其他 Java 程序调用。一个包（package）可以定义位一组相互联系的类型（类、接口、枚举和注释），为这些类型提供访问保护和命名空间管理的功能。</p><p>以下是一些Java 中的包：</p><ul><li><p>java.lang - 打包基础的类</p></li><li><p>java.io - 包含输入输出功能的函数</p></li></ul><p>​        开发者可以自己把一组类和接口等打包，并定义自己的包。而且在实际开发中这样是值的提倡的，当你自己完成类的实现之后，将相关的类分组，可以让其他的编程者更容易地确定哪些类、接口、枚举和注释是相关的。</p><p>​    由于包创建了新的命名空间（namespace），所以不会跟其他包中的任何名字产生命名冲突。使用这种机制，更容易实现访问控制，并且定位类更加简单。</p><h2 id="创建包"><a href="#创建包" class="headerlink" title="创建包"></a>创建包</h2><p>创建包的时候，你需要为这个包取一个适合的名字。之后，如果其他的一个源文件包含了这个包提供的类、接口、枚举或者注释类型的时候，都必须将这个包的声明放在这个源文件的开头。</p><p>包声明应该在源文件的第一行，每个源文件只能有一个包声明，这个文件中的每个类型都应用于它。</p><p>如果一个源文件中没有使用包声明，那么其中的类、函数、枚举、注释等将被放在一个无名的包（default package）中。</p><p>例如：</p><p>通常用小写的字母来命名避免与类、接口名字的冲突。</p><h2 id="import-关键字"><a href="#import-关键字" class="headerlink" title="import 关键字"></a>import 关键字</h2><p>为了能够使用某一个包的成员，我们需要在 Java 程序中明确导入该包。使用“import”语句完成此功能。</p><p>在 Java 源文件中 import 语句应该再 package 语句之后，所有类的定义之前，可以没有，可以有多余。其语法为：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> package1[.package2…].(classname|*);</span><br></pre></td></tr></table></figure><p>可以使用通配符 “*”号。</p><p>注意：类文件中可以包含任意数量的import 声明。import 声明必须在包声明之后，类声明之前。</p>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java-抽象类</title>
      <link href="2019/04/12/Java-%E6%8A%BD%E8%B1%A1%E7%B1%BB/"/>
      <url>2019/04/12/Java-%E6%8A%BD%E8%B1%A1%E7%B1%BB/</url>
      
        <content type="html"><![CDATA[<h1 id="Java-抽象类"><a href="#Java-抽象类" class="headerlink" title="Java 抽象类"></a>Java 抽象类</h1><p>在面向对象的概念中，所有的对象都是通过类来描绘的，但是反过来，并不是所有的类都是用来描绘对象的，如果一个类中没有包含足够的信息来描绘一个具体的对象，这样的类就是抽象类。</p><p>抽象类除了不能实例化对象之外，类的其它功能依然存在，成员变量、成员方法和构造方法的访问方式和普通类一样。</p><p>由于抽象类不能实例化对象，所以抽象类必须被继承，才能被使用。也是因为这个原因，通常在设计阶段决定要不要设计抽象类。</p><p>父类包含了子类集合的常见的方法，但是由于父类本身是抽象的，所以不能使用这些方法。</p><p>在Java中抽象类表示的是一种继承关系，一个类只能继承一个抽象类，而一个类却可以实现多个接口。</p><a id="more"></a><h2 id="抽象类"><a href="#抽象类" class="headerlink" title="抽象类"></a>抽象类</h2><p>在 Java 中 使用 abstract class 定义抽象类。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 文件名 : Employee.java */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">Employee</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">   <span class="keyword">private</span> String name;</span><br><span class="line">   <span class="keyword">private</span> String address;</span><br><span class="line">   <span class="keyword">private</span> <span class="keyword">int</span> number;</span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="title">Employee</span><span class="params">(String name, String address, <span class="keyword">int</span> number)</span></span></span><br><span class="line"><span class="function">   </span>&#123;</span><br><span class="line">      System.out.println(<span class="string">&quot;Constructing an Employee&quot;</span>);</span><br><span class="line">      <span class="keyword">this</span>.name = name;</span><br><span class="line">      <span class="keyword">this</span>.address = address;</span><br><span class="line">      <span class="keyword">this</span>.number = number;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">computePay</span><span class="params">()</span></span></span><br><span class="line"><span class="function">   </span>&#123;</span><br><span class="line">     System.out.println(<span class="string">&quot;Inside Employee computePay&quot;</span>);</span><br><span class="line">     <span class="keyword">return</span> <span class="number">0.0</span>;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">mailCheck</span><span class="params">()</span></span></span><br><span class="line"><span class="function">   </span>&#123;</span><br><span class="line">      System.out.println(<span class="string">&quot;Mailing a check to &quot;</span> + <span class="keyword">this</span>.name</span><br><span class="line">       + <span class="string">&quot; &quot;</span> + <span class="keyword">this</span>.address);</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span></span></span><br><span class="line"><span class="function">   </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> name + <span class="string">&quot; &quot;</span> + address + <span class="string">&quot; &quot;</span> + number;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span></span></span><br><span class="line"><span class="function">   </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> name;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="function"><span class="keyword">public</span> String <span class="title">getAddress</span><span class="params">()</span></span></span><br><span class="line"><span class="function">   </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> address;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAddress</span><span class="params">(String newAddress)</span></span></span><br><span class="line"><span class="function">   </span>&#123;</span><br><span class="line">      address = newAddress;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getNumber</span><span class="params">()</span></span></span><br><span class="line"><span class="function">   </span>&#123;</span><br><span class="line">     <span class="keyword">return</span> number;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意到该 Employee 类没有什么不同，尽管该类是抽象类，但是它仍然有 3 个成员变量，7 个成员方法和 1 个构造方法。 现在如果你尝试如下的例子：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 文件名 : AbstractDemo.java */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AbstractDemo</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String [] args)</span></span></span><br><span class="line"><span class="function">   </span>&#123;</span><br><span class="line">      <span class="comment">/* 以下是不允许的，会引发错误 */</span></span><br><span class="line">      Employee e = <span class="keyword">new</span> Employee(<span class="string">&quot;George W.&quot;</span>, <span class="string">&quot;Houston, TX&quot;</span>, <span class="number">43</span>);</span><br><span class="line"> </span><br><span class="line">      System.out.println(<span class="string">&quot;\n Call mailCheck using Employee reference--&quot;</span>);</span><br><span class="line">      e.mailCheck();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当你尝试编译 AbstractDemo 类时，会产生如下错误：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Employee.java:<span class="number">46</span>: Employee is <span class="keyword">abstract</span>; cannot be instantiated</span><br><span class="line">      Employee e = <span class="keyword">new</span> Employee(<span class="string">&quot;George W.&quot;</span>, <span class="string">&quot;Houston, TX&quot;</span>, <span class="number">43</span>);</span><br><span class="line">                   ^</span><br><span class="line"><span class="number">1</span> error</span><br></pre></td></tr></table></figure><p><strong>分析：</strong>抽象类不能实例化。</p><h2 id="继承抽象类"><a href="#继承抽象类" class="headerlink" title="继承抽象类"></a>继承抽象类</h2><p>我们能通过一般的方法继承Employee类：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 文件名 : Salary.java */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Salary</span> <span class="keyword">extends</span> <span class="title">Employee</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">   <span class="keyword">private</span> <span class="keyword">double</span> salary; <span class="comment">//Annual salary</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="title">Salary</span><span class="params">(String name, String address, <span class="keyword">int</span> number, <span class="keyword">double</span></span></span></span><br><span class="line"><span class="function"><span class="params">      salary)</span></span></span><br><span class="line"><span class="function">   </span>&#123;</span><br><span class="line">       <span class="keyword">super</span>(name, address, number);</span><br><span class="line">       setSalary(salary);</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">mailCheck</span><span class="params">()</span></span></span><br><span class="line"><span class="function">   </span>&#123;</span><br><span class="line">       System.out.println(<span class="string">&quot;Within mailCheck of Salary class &quot;</span>);</span><br><span class="line">       System.out.println(<span class="string">&quot;Mailing check to &quot;</span> + getName()</span><br><span class="line">       + <span class="string">&quot; with salary &quot;</span> + salary);</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">getSalary</span><span class="params">()</span></span></span><br><span class="line"><span class="function">   </span>&#123;</span><br><span class="line">       <span class="keyword">return</span> salary;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setSalary</span><span class="params">(<span class="keyword">double</span> newSalary)</span></span></span><br><span class="line"><span class="function">   </span>&#123;</span><br><span class="line">       <span class="keyword">if</span>(newSalary &gt;= <span class="number">0.0</span>)</span><br><span class="line">       &#123;</span><br><span class="line">          salary = newSalary;</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">computePay</span><span class="params">()</span></span></span><br><span class="line"><span class="function">   </span>&#123;</span><br><span class="line">      System.out.println(<span class="string">&quot;Computing salary pay for &quot;</span> + getName());</span><br><span class="line">      <span class="keyword">return</span> salary/<span class="number">52</span>;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>尽管我们不能实例化一个 Employee 类的对象，但是如果我们实例化一个 Salary 类对象，该对象将从 Employee 类继承 7 个成员方法，且通过该方法可以设置或获取三个成员变量。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 文件名 : AbstractDemo.java */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AbstractDemo</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String [] args)</span></span></span><br><span class="line"><span class="function">   </span>&#123;</span><br><span class="line">      Salary s = <span class="keyword">new</span> Salary(<span class="string">&quot;Mohd Mohtashim&quot;</span>, <span class="string">&quot;Ambehta, UP&quot;</span>, <span class="number">3</span>, <span class="number">3600.00</span>);</span><br><span class="line">      Employee e = <span class="keyword">new</span> Salary(<span class="string">&quot;John Adams&quot;</span>, <span class="string">&quot;Boston, MA&quot;</span>, <span class="number">2</span>, <span class="number">2400.00</span>);</span><br><span class="line"> </span><br><span class="line">      System.out.println(<span class="string">&quot;Call mailCheck using Salary reference --&quot;</span>);</span><br><span class="line">      s.mailCheck();</span><br><span class="line"> </span><br><span class="line">      System.out.println(<span class="string">&quot;\n Call mailCheck using Employee reference--&quot;</span>);</span><br><span class="line">      e.mailCheck();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>结果：</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Constructing an Employee</span><br><span class="line">Constructing an Employee</span><br><span class="line">Call mailCheck using  Salary reference --</span><br><span class="line">Within mailCheck of Salary <span class="class"><span class="keyword">class</span></span></span><br><span class="line"><span class="class"><span class="title">Mailing</span> <span class="title">check</span> <span class="title">to</span> <span class="title">Mohd</span> <span class="title">Mohtashim</span> <span class="title">with</span> <span class="title">salary</span> 3600.0</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class"><span class="title">Call</span> <span class="title">mailCheck</span> <span class="title">using</span> <span class="title">Employee</span> <span class="title">reference</span>--</span></span><br><span class="line"><span class="class"><span class="title">Within</span> <span class="title">mailCheck</span> <span class="title">of</span> <span class="title">Salary</span> <span class="title">class</span></span></span><br><span class="line"><span class="class"><span class="title">Mailing</span> <span class="title">check</span> <span class="title">to</span> <span class="title">John</span> <span class="title">Adams</span> <span class="title">with</span> <span class="title">salary</span> 2400.</span></span><br></pre></td></tr></table></figure><h2 id="抽象方法"><a href="#抽象方法" class="headerlink" title="抽象方法"></a>抽象方法</h2><p>如果你想设计这样一个类，该类包含一个特别的成员方法，该方法的具体实现由它的子类确定，那么你可以在父类中声明该方法为抽象方法。</p><p>Abstract 关键字同样可以用来声明抽象方法，抽象方法只包含一个方法名，而没有方法体。</p><p>抽象方法没有定义，方法名后面直接跟一个分号，而不是花括号。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">Employee</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">   <span class="keyword">private</span> String name;</span><br><span class="line">   <span class="keyword">private</span> String address;</span><br><span class="line">   <span class="keyword">private</span> <span class="keyword">int</span> number;</span><br><span class="line">   </span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">double</span> <span class="title">computePay</span><span class="params">()</span></span>;</span><br><span class="line">   </span><br><span class="line">   <span class="comment">//其余代码</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>声明抽象方法会造成以下两个结果：</p><ul><li>如果一个类包含抽象方法，那么该类必须是抽象类。</li><li>任何子类必须重写父类的抽象方法，或者声明自身为抽象类。</li></ul><p>继承抽象方法的子类必须重写该方法。否则，该子类也必须声明为抽象类。最终，必须有子类实现该抽象方法，否则从最初的父类到最终的子类都不能用来实例化对象。</p><p>如果Salary类继承了Employee类，那么它必须实现computePay()方法：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 文件名 : Salary.java */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Salary</span> <span class="keyword">extends</span> <span class="title">Employee</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">   <span class="keyword">private</span> <span class="keyword">double</span> salary; <span class="comment">// Annual salary</span></span><br><span class="line">  </span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">computePay</span><span class="params">()</span></span></span><br><span class="line"><span class="function">   </span>&#123;</span><br><span class="line">      System.out.println(<span class="string">&quot;Computing salary pay for &quot;</span> + getName());</span><br><span class="line">      <span class="keyword">return</span> salary/<span class="number">52</span>;</span><br><span class="line">   &#125;</span><br><span class="line"> </span><br><span class="line">   <span class="comment">//其余代码</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="抽象类总结规定"><a href="#抽象类总结规定" class="headerlink" title="抽象类总结规定"></a>抽象类总结规定</h2><ol><li><strong>抽象类不能被实例化，编译会报错</strong>。只有抽象类的非抽象子类才能实例化。</li><li><strong>抽象类中不一定包含抽象方法，但是有抽象方法的类必定是抽象类</strong>。</li><li><strong>抽象类中的抽象方法只是声明，不包含方法体</strong>，就是不给出方法的具体实现。</li><li><strong>构造方法，类方法（用static 修饰的方法）不能声明为抽象方法。</strong></li><li><strong>抽象类的子类必须给出抽象类中的抽象方法的具体实现，除非该子类也是抽象类</strong>。</li></ol><p><strong>思考：</strong></p><p>​    对于第五点的分析，构造方法是类实例化时的构造过程，抽象类是可以有构造方法的。不存在什么抽象构造方法，抽象就是用来给子类继承的。子类用super 就可以调用父类构造方法了。</p><p>​    对象有两种，一种是实例对象，一种是静态对象。一个类可以有多个实例对象，但只有一个静态对象，也就是类本身。类是可以被继承的，但是静态对象只有一个，不能被继承，静态方法也是不能被继承的。抽象方法是需要继承实现的，而静态方法根本不能被继承，所以这与抽象相矛盾。</p>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java-接口(Interface)</title>
      <link href="2019/04/12/Java-%E6%8E%A5%E5%8F%A3-Interface/"/>
      <url>2019/04/12/Java-%E6%8E%A5%E5%8F%A3-Interface/</url>
      
        <content type="html"><![CDATA[<h1 id="Java-接口"><a href="#Java-接口" class="headerlink" title="Java 接口"></a>Java 接口</h1><p>接口（英文：Interface），在Java 编程语言中是一个抽象类型，是抽象方法的集合，接口通常以Interface 来声明。一个类通过实现接口的方式，从而来实现（或者说继承）接口的抽象方法。</p><p>接口并不是类，编写接口的方式和类很相似，但是他们属于不同的概念。类描述对象的属性和方法。接口则包含类要实现的方法。</p><p>除非实现接口的类是抽象类，否则该类要定义接口中的所有方法。</p><p>接口无法被实例化，但是可以被实现。一个实现接口的类，必须实现接口内所描述的所有方法，否则就必须声明为抽象类。另外，在 Java 中，接口类型可用来声明一个变量，他们可以成为一个空指针，或是被绑定在一个以此接口实现的对象。</p><a id="more"></a><h2 id="接口与类相似点"><a href="#接口与类相似点" class="headerlink" title="接口与类相似点"></a>接口与类相似点</h2><ul><li>一个接口可有很多个方法。</li><li>接口文件保存在 .java 结尾的文件中，文件名使用接口名。</li><li>接口的字节码文件保存在 . class 结尾的文件中。</li><li>接口相应的字节码文件必须在与包名称相匹配的目录结构中。</li></ul><h2 id="接口与类的区别"><a href="#接口与类的区别" class="headerlink" title="接口与类的区别"></a>接口与类的区别</h2><ul><li>接口不能实例化对象。</li><li>接口没有构造方法。</li><li>接口中所有的方法必须是抽象方法。</li><li>接口不能包含成员变量，除了static 和 final 变量。</li><li>接口不能被类继承，需要被类实现。</li><li>接口支持多继承。</li></ul><h2 id="接口特性"><a href="#接口特性" class="headerlink" title="接口特性"></a>接口特性</h2><ul><li>接口中每一个方法也是隐式抽象的，接口中的方法会被隐式的指定为 public abstract (只能是 public abstract，其他修饰都会报错 )。</li><li>接口中可以含有变量，但是接口中的变量会被隐式地指定为 public static final 变量（并且只能是public ，用private 修饰会报编译错误） 。</li><li>接口中的方法是不能在接口中实现的，只能由实现接口的类来实现接口的方法。</li></ul><h2 id="抽象类和接口的区别"><a href="#抽象类和接口的区别" class="headerlink" title="抽象类和接口的区别"></a>抽象类和接口的区别</h2><ol><li>抽象类中的方法可以有方法体，就是能实现方法的具体功能，但是接口中的方法不行。</li><li>抽象类中的成员变量可以是各种类型的，而接口中的成员变量只能是public static final 类型的。</li><li>接口中不能含有静态代码块以及静态方法（用static 修饰的方法），而抽象类是可以有静态代码块和静态方法的。</li><li>一个类只能继承一个抽象类，而一个类却可以实现多个接口。 </li></ol><h1 id="接口的声明"><a href="#接口的声明" class="headerlink" title="接口的声明"></a>接口的声明</h1><p>接口的声明语法格式如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[可见度] Interface 接口名称 [extends 其他的接口名]&#123;</span><br><span class="line">    <span class="comment">//声明变量</span></span><br><span class="line">    <span class="comment">//抽象方法</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>Interface 关键字用来声明一个接口。下面是接口声明的一个简单例子。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 文件名 : NameOfInterface.java */</span></span><br><span class="line"><span class="keyword">import</span> java.lang.*;</span><br><span class="line"><span class="comment">//引入包</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">NameOfInterface</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">   <span class="comment">//任何类型 final, static 字段</span></span><br><span class="line">   <span class="comment">//抽象方法</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>接口有以下特性：</p><ul><li>接口是隐式抽象的，当声明一个接口的时候，不必使用abstract 关键字。</li><li>接口中每一个方法也是隐式抽象的，声明时同样不需要 abstract 关键字。</li><li>接口中的方法都是公有的。</li></ul><p>实例</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">Animal</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">eat</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">travel</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="接口的实现"><a href="#接口的实现" class="headerlink" title="接口的实现"></a>接口的实现</h1><p>当类实现接口时，类要实现接口中所有的方法。否则，类必须声明为抽象的类。</p><p>类要使用implements 关键字实现接口。在类声明中，implements 关键字方法 class 声明后面。</p><p>实现一个接口的语法：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">...implements 接口名称[, 其他接口名称, 其他接口名称..., ...] ...</span><br></pre></td></tr></table></figure><p>实例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 文件名 : MammalInt.java */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MammalInt</span> <span class="keyword">implements</span> <span class="title">Animal</span></span>&#123;</span><br><span class="line"> </span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">eat</span><span class="params">()</span></span>&#123;</span><br><span class="line">      System.out.println(<span class="string">&quot;Mammal eats&quot;</span>);</span><br><span class="line">   &#125;</span><br><span class="line"> </span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">travel</span><span class="params">()</span></span>&#123;</span><br><span class="line">      System.out.println(<span class="string">&quot;Mammal travels&quot;</span>);</span><br><span class="line">   &#125; </span><br><span class="line"> </span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">noOfLegs</span><span class="params">()</span></span>&#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">   &#125;</span><br><span class="line"> </span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String args[])</span></span>&#123;</span><br><span class="line">      MammalInt m = <span class="keyword">new</span> MammalInt();</span><br><span class="line">      m.eat();</span><br><span class="line">      m.travel();</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>结果：</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Mammal eats</span><br><span class="line">Mammal travels</span><br></pre></td></tr></table></figure><p>重写接口中声明的方法时，需要注意以下规则：</p><ul><li>类在实现接口方法时，不能抛出强制性异常，只能在接口中，或者继承接口的抽象类中抛出该强制性异常。</li><li>类在重写方法时要保持一致的方法名，并且应该保持相同或者相兼容的返回值类型。</li><li>如果实现接口的类是抽象类，那么就没必要实现该接口的方法。</li></ul><p>在实现接口的时候也要注意一些规则：</p><ul><li>一个类可以同时实现多个接口。</li><li>一个类只能继承一个类，但是能实现多个接口。</li><li>一个接口能继承另一个接口，这和类之间的继承比较相似。</li></ul><h1 id="接口的继承"><a href="#接口的继承" class="headerlink" title="接口的继承"></a>接口的继承</h1><p>一个接口能继承另一个接口，个类之间的继承方式比较相似。接口的继承使用 extends 关键字，子接口继承父类接口的方法。</p><p>下面是例子：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 文件名: Sports.java</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Sports</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setHomeTeam</span><span class="params">(String name)</span></span>;</span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setVisitingTeam</span><span class="params">(String name)</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">// 文件名: Football.java</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Football</span> <span class="keyword">extends</span> <span class="title">Sports</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">homeTeamScored</span><span class="params">(<span class="keyword">int</span> points)</span></span>;</span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">visitingTeamScored</span><span class="params">(<span class="keyword">int</span> points)</span></span>;</span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">endOfQuarter</span><span class="params">(<span class="keyword">int</span> quarter)</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">// 文件名: Hockey.java</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Hockey</span> <span class="keyword">extends</span> <span class="title">Sports</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">homeGoalScored</span><span class="params">()</span></span>;</span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">visitingGoalScored</span><span class="params">()</span></span>;</span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">endOfPeriod</span><span class="params">(<span class="keyword">int</span> period)</span></span>;</span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">overtimePeriod</span><span class="params">(<span class="keyword">int</span> ot)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Hockey接口自己声明了四个方法，从Sports接口继承了两个方法，这样，实现Hockey接口的类需要实现六个方法。</p><p>相似的，实现Football接口的类需要实现五个方法，其中两个来自于Sports接口。</p><h1 id="接口的多继承"><a href="#接口的多继承" class="headerlink" title="接口的多继承"></a>接口的多继承</h1><p>在 Java 中，类的多继承是不合法的，但是接口允许多继承。</p><p>在接口的多继承中 extends 关键字只需要使用一次，在其后跟着继承接口。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Hockey</span> <span class="keyword">extends</span> <span class="title">Sport</span>, <span class="title">Event</span></span></span><br></pre></td></tr></table></figure><p>以上是合法的。不同于类的单继承规则。</p><h1 id="标记接口"><a href="#标记接口" class="headerlink" title="标记接口"></a>标记接口</h1><p>最常用的继承接口是没有包含任何方法的接口。</p><p>标记接口是没有任何方法和属性的接口。它仅仅表明它的类属于一个特定的类型，供其他代码来测试允许做一些事情。</p><p>标记接口作用：简单形象的说就是给某个对象打个标（盖个戳），是对象拥有某个或某些特权。</p><p>例如：java.awt.event 包中的 MouseListener 接口继承的 java.util.EventListener 接口定义如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> java.util;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">EventListener</span></span></span><br><span class="line"><span class="class"></span>&#123;&#125;</span><br></pre></td></tr></table></figure><p>没有任何方法的接口被称为标记接口。标记接口主要用于一下两种目的：</p><ol><li><p><strong>建立一个公共的父接口：</strong></p><p> 正如 EventListener  接口，这是由几十个其他接口扩展的 Java API ,你可以使用一个标记接口来建立一组接口的父接口。例如：当一个接口继承了 EventListener  接口，Java 虚拟机（JVM） 就知道该接口将被用于一个事件的代理方案。</p></li><li><p><strong>向一个类添加数据类型：</strong></p><p> 这种情况是标记接口最初的目的，实现标记接口的类不需要定义任何接口方法（因为标记接口根本没有方法），但是该类通过多态性变成一个接口类型。</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Interface </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java-多态</title>
      <link href="2019/04/12/Java-%E5%A4%9A%E6%80%81/"/>
      <url>2019/04/12/Java-%E5%A4%9A%E6%80%81/</url>
      
        <content type="html"><![CDATA[<h1 id="多态"><a href="#多态" class="headerlink" title="多态"></a>多态</h1><p>多态是同一个行为具有多个不同表现形式或形态的能力。</p><p>多态就是同一个接口，使用不同的实例而执行不同操作，如图：</p><img src=https://gitee.com/gek7777/cdn.io/raw/master/image/20190412-6.png ><p>多态性是对象多种表现形式的体现。</p><a id="more"></a><p>例如：我们按下 F1 键这个动作：</p><ul><li>如果当前在 Flash 界面下弹出的就是 AS 3 的帮助文档；</li><li>如果当前在 Word 下弹出的就是 Word 帮助；</li><li>在 Windows 下弹出的就是 Windows 帮助和支持。</li></ul><p><em>同一个事件发生在不同的对象上会产生不同的结果。</em></p><h2 id="多态的优点"><a href="#多态的优点" class="headerlink" title="多态的优点"></a>多态的优点</h2><ol><li>消除类型之间的耦合关系</li><li>可替代性</li><li>可扩充性</li><li>接口性</li><li>灵活性</li><li>简化性</li></ol><h2 id="多态存在的三个必要条件"><a href="#多态存在的三个必要条件" class="headerlink" title="多态存在的三个必要条件"></a>多态存在的三个必要条件</h2><ul><li>继承</li><li>重写</li><li>父类引用指向子类对象</li></ul><p><strong>比如：</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Parent P = <span class="keyword">new</span> Child();</span><br></pre></td></tr></table></figure><p>当使用多态方式调用方法时，首先检查父类中是否有该方法，如果没有，则编译错误；如果有，再去调用子类的同名方法。</p><p>多态的好处：可以使程序有良好的扩展，并可以对所有类的对象进行通用处理。</p><p>例子：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">      show(<span class="keyword">new</span> Cat());  <span class="comment">// 以 Cat 对象调用 show 方法</span></span><br><span class="line">      show(<span class="keyword">new</span> Dog());  <span class="comment">// 以 Dog 对象调用 show 方法</span></span><br><span class="line">                </span><br><span class="line">      Animal a = <span class="keyword">new</span> Cat();  <span class="comment">// 向上转型  </span></span><br><span class="line">      a.eat();               <span class="comment">// 调用的是 Cat 的 eat</span></span><br><span class="line">      Cat c = (Cat)a;        <span class="comment">// 向下转型  </span></span><br><span class="line">      c.work();        <span class="comment">// 调用的是 Cat 的 work</span></span><br><span class="line">  &#125;  </span><br><span class="line">            </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">show</span><span class="params">(Animal a)</span>  </span>&#123;</span><br><span class="line">      a.eat();  </span><br><span class="line">        <span class="comment">// 类型判断</span></span><br><span class="line">        <span class="keyword">if</span> (a <span class="keyword">instanceof</span> Cat)  &#123;  <span class="comment">// 猫做的事情 </span></span><br><span class="line">            Cat c = (Cat)a;  </span><br><span class="line">            c.work();  </span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (a <span class="keyword">instanceof</span> Dog) &#123; <span class="comment">// 狗做的事情 </span></span><br><span class="line">            Dog c = (Dog)a;  </span><br><span class="line">            c.work();  </span><br><span class="line">        &#125;  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">Animal</span> </span>&#123;  </span><br><span class="line">    <span class="function"><span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">eat</span><span class="params">()</span></span>;  </span><br><span class="line">&#125;  </span><br><span class="line">  </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Cat</span> <span class="keyword">extends</span> <span class="title">Animal</span> </span>&#123;  </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">eat</span><span class="params">()</span> </span>&#123;  </span><br><span class="line">        System.out.println(<span class="string">&quot;吃鱼&quot;</span>);  </span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">work</span><span class="params">()</span> </span>&#123;  </span><br><span class="line">        System.out.println(<span class="string">&quot;抓老鼠&quot;</span>);  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;  </span><br><span class="line">  </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Dog</span> <span class="keyword">extends</span> <span class="title">Animal</span> </span>&#123;  </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">eat</span><span class="params">()</span> </span>&#123;  </span><br><span class="line">        System.out.println(<span class="string">&quot;吃骨头&quot;</span>);  </span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">work</span><span class="params">()</span> </span>&#123;  </span><br><span class="line">        System.out.println(<span class="string">&quot;看家&quot;</span>);  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>结果</strong>：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">吃鱼</span><br><span class="line">抓老鼠</span><br><span class="line">吃骨头</span><br><span class="line">看家</span><br><span class="line">吃鱼</span><br><span class="line">抓老鼠</span><br></pre></td></tr></table></figure><h1 id="虚函数"><a href="#虚函数" class="headerlink" title="虚函数"></a>虚函数</h1><p>虚函数的存在是为了多态。</p><p>Java 中其实没有虚函数的概念，它的普通函数就相当于 C++ 的虚函数，动态绑定是Java的默认行为。如果 Java 中不希望某个函数具有虚函数特性，可以加上 final 关键字变成非虚函数。</p><h2 id="重写"><a href="#重写" class="headerlink" title="重写"></a>重写</h2><p>我们将介绍在 Java 中，当设计类时，被重写的方法的行为怎样影响多态性。</p><p>我们已经讨论了方法的重写，也就是子类能够重写父类的方法。</p><p>当子类对象调用重写的方法时，调用的是子类的方法，而不是父类中被重写的方法。</p><p>要想调用父类中被重写的方法，则必须使用关键字 <strong>super</strong>。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 文件名 : Employee.java */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Employee</span> </span>&#123;</span><br><span class="line">   <span class="keyword">private</span> String name;</span><br><span class="line">   <span class="keyword">private</span> String address;</span><br><span class="line">   <span class="keyword">private</span> <span class="keyword">int</span> number;</span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="title">Employee</span><span class="params">(String name, String address, <span class="keyword">int</span> number)</span> </span>&#123;</span><br><span class="line">      System.out.println(<span class="string">&quot;Employee 构造函数&quot;</span>);</span><br><span class="line">      <span class="keyword">this</span>.name = name;</span><br><span class="line">      <span class="keyword">this</span>.address = address;</span><br><span class="line">      <span class="keyword">this</span>.number = number;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">mailCheck</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      System.out.println(<span class="string">&quot;邮寄支票给： &quot;</span> + <span class="keyword">this</span>.name</span><br><span class="line">       + <span class="string">&quot; &quot;</span> + <span class="keyword">this</span>.address);</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> name + <span class="string">&quot; &quot;</span> + address + <span class="string">&quot; &quot;</span> + number;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> name;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="function"><span class="keyword">public</span> String <span class="title">getAddress</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> address;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAddress</span><span class="params">(String newAddress)</span> </span>&#123;</span><br><span class="line">      address = newAddress;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getNumber</span><span class="params">()</span> </span>&#123;</span><br><span class="line">     <span class="keyword">return</span> number;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>假设下面的类继承Employee类：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 文件名 : Salary.java */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Salary</span> <span class="keyword">extends</span> <span class="title">Employee</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">   <span class="keyword">private</span> <span class="keyword">double</span> salary; <span class="comment">// 全年工资</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="title">Salary</span><span class="params">(String name, String address, <span class="keyword">int</span> number, <span class="keyword">double</span> salary)</span> </span>&#123;</span><br><span class="line">       <span class="keyword">super</span>(name, address, number);</span><br><span class="line">       setSalary(salary);</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">mailCheck</span><span class="params">()</span> </span>&#123;</span><br><span class="line">       System.out.println(<span class="string">&quot;Salary 类的 mailCheck 方法 &quot;</span>);</span><br><span class="line">       System.out.println(<span class="string">&quot;邮寄支票给：&quot;</span> + getName()</span><br><span class="line">       + <span class="string">&quot; ，工资为：&quot;</span> + salary);</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">getSalary</span><span class="params">()</span> </span>&#123;</span><br><span class="line">       <span class="keyword">return</span> salary;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setSalary</span><span class="params">(<span class="keyword">double</span> newSalary)</span> </span>&#123;</span><br><span class="line">       <span class="keyword">if</span>(newSalary &gt;= <span class="number">0.0</span>) &#123;</span><br><span class="line">          salary = newSalary;</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">computePay</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      System.out.println(<span class="string">&quot;计算工资，付给：&quot;</span> + getName());</span><br><span class="line">      <span class="keyword">return</span> salary/<span class="number">52</span>;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>现在我们仔细阅读下面的代码，尝试给出它的输出结果：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 文件名 : VirtualDemo.java */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">VirtualDemo</span> </span>&#123;</span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String [] args)</span> </span>&#123;</span><br><span class="line">      Salary s = <span class="keyword">new</span> Salary(<span class="string">&quot;员工 A&quot;</span>, <span class="string">&quot;北京&quot;</span>, <span class="number">3</span>, <span class="number">3600.00</span>);</span><br><span class="line">      Employee e = <span class="keyword">new</span> Salary(<span class="string">&quot;员工 B&quot;</span>, <span class="string">&quot;上海&quot;</span>, <span class="number">2</span>, <span class="number">2400.00</span>);</span><br><span class="line">      System.out.println(<span class="string">&quot;使用 Salary 的引用调用 mailCheck -- &quot;</span>);</span><br><span class="line">      s.mailCheck();</span><br><span class="line">      System.out.println(<span class="string">&quot;\n使用 Employee 的引用调用 mailCheck--&quot;</span>);</span><br><span class="line">      e.mailCheck();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以上实例编译运行结果如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Employee 构造函数</span><br><span class="line">Employee 构造函数</span><br><span class="line">使用 Salary 的引用调用 mailCheck -- </span><br><span class="line">Salary 类的 mailCheck 方法 </span><br><span class="line">邮寄支票给：员工 A ，工资为：3600.0</span><br><span class="line"></span><br><span class="line">使用 Employee 的引用调用 mailCheck--</span><br><span class="line">Salary 类的 mailCheck 方法 </span><br><span class="line">邮寄支票给：员工 B ，工资为：2400.0</span><br></pre></td></tr></table></figure><h2 id="例子解析"><a href="#例子解析" class="headerlink" title="例子解析"></a>例子解析</h2><ul><li>实例中，实例化了两个 Salary 对象：一个使用 Salary 引用 s，另一个使用 Employee 引用 e。</li><li>当调用 s.mailCheck() 时，编译器在编译时会在 Salary 类中找到 mailCheck()，执行过程 JVM 就调用 Salary 类的 mailCheck()。</li><li>因为 e 是 Employee 的引用，所以调用 e 的 mailCheck() 方法时，编译器会去 Employee 类查找 mailCheck() 方法 。</li><li>在编译的时候，编译器使用 Employee 类中的 mailCheck() 方法验证该语句， 但是在运行的时候，Java虚拟机(JVM)调用的是 Salary 类中的 mailCheck() 方法。</li></ul><p>以上整个过程被称为虚拟方法调用，该方法被称为虚拟方法。</p><p>Java中所有的方法都能以这种方式表现，<strong>因此，重写的方法能在运行时调用，不管编译的时候源代码中引用变量是什么数据类型。</strong></p><h1 id="多态的实现方式"><a href="#多态的实现方式" class="headerlink" title="多态的实现方式"></a>多态的实现方式</h1><h2 id="方式一：重写："><a href="#方式一：重写：" class="headerlink" title="方式一：重写："></a>方式一：重写：</h2><p>不再详细说了。<a href="https://gek7777.github.io/2019/04/12/Java%E9%87%8D%E5%86%99%E5%92%8C%E9%87%8D%E8%BD%BD/">Java 重写(Override)与重载(Overload)</a></p><h2 id="方式二：接口"><a href="#方式二：接口" class="headerlink" title="方式二：接口"></a>方式二：接口</h2><ol><li>生活中的接口最具代表性的就是插座，例如一个三接头的插头都能接在三孔插座中，因为这个是每个国家都有各自规定的接口规则，有可能到国外就不行，那是因为国外自己定义的接口类型。</li><li>Java 中的接口类似于生活中的接口，就是一些方法特征的集合，但没有方法的实现。具体可以看 <a href="https://gek7777.github.io/2019/04/12/Java%E6%8E%A5%E5%8F%A3-Interface/">java接口</a> 这一章节的内容。</li></ol><h2 id="方式三：抽象类和抽象方法"><a href="#方式三：抽象类和抽象方法" class="headerlink" title="方式三：抽象类和抽象方法"></a>方式三：抽象类和抽象方法</h2><p>详情查看 <a href="https://gek7777.github.io/2019/04/12/Java%E6%8A%BD%E8%B1%A1%E7%B1%BB/">Java抽象类</a> 。</p>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java-重写和重载</title>
      <link href="2019/04/12/Java-%E9%87%8D%E5%86%99%E5%92%8C%E9%87%8D%E8%BD%BD/"/>
      <url>2019/04/12/Java-%E9%87%8D%E5%86%99%E5%92%8C%E9%87%8D%E8%BD%BD/</url>
      
        <content type="html"><![CDATA[<h1 id="重写（Override）"><a href="#重写（Override）" class="headerlink" title="重写（Override）"></a>重写（Override）</h1><h2 id="概念："><a href="#概念：" class="headerlink" title="概念："></a>概念：</h2><p>​    重写是子类对父类的允许访问的方法的实现过程进行重新编写, 返回值和形参都不能改变。<strong>即外壳不变，核心重写！</strong></p><p>​    重写的好处在于子类可以根据需要，定义特定于自己的行为。 也就是说子类能够根据需要实现父类的方法。重写方法不能抛出新的检查异常或者比被重写方法申明更加宽泛的异常。例如： 父类的一个方法申明了一个检查异常 IOException，但是在重写这个方法的时候不能抛出 Exception 异常，因为 Exception 是 IOException 的父类，只能抛出 IOException 的子类异常。</p><a id="more"></a><p>在面向对象原则里，重写意味着可以重写任何现有方法。实例如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Animal</span></span>&#123;</span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">move</span><span class="params">()</span></span>&#123;</span><br><span class="line">      System.out.println(<span class="string">&quot;动物可以移动&quot;</span>);</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Dog</span> <span class="keyword">extends</span> <span class="title">Animal</span></span>&#123;</span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">move</span><span class="params">()</span></span>&#123;</span><br><span class="line">      System.out.println(<span class="string">&quot;狗可以跑和走&quot;</span>);</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestDog</span></span>&#123;</span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String args[])</span></span>&#123;</span><br><span class="line">      Animal a = <span class="keyword">new</span> Animal(); <span class="comment">// Animal 对象</span></span><br><span class="line">      Animal b = <span class="keyword">new</span> Dog(); <span class="comment">// Dog 对象</span></span><br><span class="line"> </span><br><span class="line">      a.move();<span class="comment">// 执行 Animal 类的方法</span></span><br><span class="line"> </span><br><span class="line">      b.move();<span class="comment">//执行 Dog 类的方法</span></span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>结果：</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">动物可以移动</span><br><span class="line">狗可以跑和走</span><br></pre></td></tr></table></figure><p><strong>分析：</strong></p><p>​    在上面的例子中可以看到，尽管b属于Animal类型，但是它运行的是Dog类的move方法。</p><p>这是由于在编译阶段，只是检查参数的引用类型。然而在运行时，Java虚拟机( JVM )指定对象的类型并且运行该对象的方法。因此在上面的例子中，之所以能编译成功，是因为Animal类中存在move方法，然而运行时，运行的是特定对象的方法。</p><p><strong>思考：</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Animal</span></span>&#123;</span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">move</span><span class="params">()</span></span>&#123;</span><br><span class="line">      System.out.println(<span class="string">&quot;动物可以移动&quot;</span>);</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Dog</span> <span class="keyword">extends</span> <span class="title">Animal</span></span>&#123;</span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">move</span><span class="params">()</span></span>&#123;</span><br><span class="line">      System.out.println(<span class="string">&quot;狗可以跑和走&quot;</span>);</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">bark</span><span class="params">()</span></span>&#123;</span><br><span class="line">      System.out.println(<span class="string">&quot;狗可以吠叫&quot;</span>);</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestDog</span></span>&#123;</span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String args[])</span></span>&#123;</span><br><span class="line">      Animal a = <span class="keyword">new</span> Animal(); <span class="comment">// Animal 对象</span></span><br><span class="line">      Animal b = <span class="keyword">new</span> Dog(); <span class="comment">// Dog 对象</span></span><br><span class="line"> </span><br><span class="line">      a.move();<span class="comment">// 执行 Animal 类的方法</span></span><br><span class="line">      b.move();<span class="comment">//执行 Dog 类的方法</span></span><br><span class="line">      b.bark();<span class="comment">// 这里出现了编译性错误</span></span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>编译结果：</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">TestDog.java:<span class="number">30</span>: cannot find symbol</span><br><span class="line">symbol  : <span class="function">method <span class="title">bark</span><span class="params">()</span></span></span><br><span class="line"><span class="function">location: class Animal</span></span><br><span class="line"><span class="function">                b.<span class="title">bark</span><span class="params">()</span></span>;</span><br><span class="line">                 ^</span><br></pre></td></tr></table></figure><p><strong>分析：</strong></p><p>​    该程序抛出一个编译错误，因为 b 的引用类型Animal 没有bark 方法。</p><h2 id="方法的重写规则"><a href="#方法的重写规则" class="headerlink" title="方法的重写规则"></a>方法的重写规则</h2><ul><li><strong>参数列表必须完全与被重写方法的相同</strong>；</li><li><strong>返回类型与被重写方法的返回类型可以不相同，但是必须是父类返回值的派生类</strong>（Java 5 及更早版本返回类型要一样，Java 7 及更高版本可以不同）；</li><li><strong>访问权限不能比父类中被重写的方法的访问权限更低</strong>。例如：如果父类的一个方法被声明为public，那么在子类中重写该方法就不能声明为protected。</li><li><strong>父类的成员方法只能被它的子类重写</strong>。</li><li><strong>声明为final的方法不能被重写</strong>。</li><li><strong>声明为static的方法不能被重写，但是能够被再次声明</strong>。</li><li><strong>子类和父类在同一个包中，那么子类可以重写父类所有方法，除了声明为private和final的方法</strong>。</li><li><strong>子类和父类不在同一个包中，那么子类只能够重写父类的声明为public和protected的非final方法。</strong></li><li><strong>重写的方法能够抛出任何非强制异常，无论被重写的方法是否抛出异常。但是，重写的方法不能抛出新的强制性异常，或者比被重写方法声明的更广泛的强制性异常，反之则可以。</strong></li><li><strong>构造方法不能被重写</strong>。</li><li><strong>如果不能继承一个方法，则不能重写这个方法</strong>。</li></ul><h2 id="Super-关键字的使用"><a href="#Super-关键字的使用" class="headerlink" title="Super 关键字的使用"></a>Super 关键字的使用</h2><p>​    当需要在子类调用父类的被重写的方法时，要使用 super 关键字。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Animal</span></span>&#123;</span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">move</span><span class="params">()</span></span>&#123;</span><br><span class="line">      System.out.println(<span class="string">&quot;动物可以移动&quot;</span>);</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Dog</span> <span class="keyword">extends</span> <span class="title">Animal</span></span>&#123;</span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">move</span><span class="params">()</span></span>&#123;</span><br><span class="line">      <span class="keyword">super</span>.move(); <span class="comment">// 应用super类的方法</span></span><br><span class="line">      System.out.println(<span class="string">&quot;狗可以跑和走&quot;</span>);</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestDog</span></span>&#123;</span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String args[])</span></span>&#123;</span><br><span class="line"> </span><br><span class="line">      Animal b = <span class="keyword">new</span> Dog(); <span class="comment">// Dog 对象</span></span><br><span class="line">      b.move(); <span class="comment">//执行 Dog类的方法</span></span><br><span class="line"> </span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>结果：</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">动物可以移动</span><br><span class="line">狗可以跑和走</span><br></pre></td></tr></table></figure><h1 id="重载（Overload）"><a href="#重载（Overload）" class="headerlink" title="重载（Overload）"></a>重载（Overload）</h1><p>重载(overloading) 是在一个类里面，<strong>方法名字相同，而参数不同</strong>。<strong>返回类型可以相同也可以不同</strong>。</p><p>每个重载的方法（或者构造函数）都必须有一个<strong>独一无二的参数类型列表</strong>。</p><p>最常用的地方就是<strong>构造器的重载</strong>。</p><h2 id="重载规则"><a href="#重载规则" class="headerlink" title="重载规则:"></a><strong>重载规则:</strong></h2><ul><li>被重载的方法<strong>必须改变参数列表</strong>(参数个数或类型不一样)；</li><li>被重载的方法<strong>可以改变返回类型</strong>；</li><li>被重载的方法<strong>可以改变访问修饰符</strong>；</li><li>被重载的方法<strong>可以声明新的或更广的检查异常</strong>；</li><li>方法能够在<strong>同一个类中或者在一个子类中被重载</strong>。</li><li><strong>无法以返回值类型作为重载函数的区分标准</strong>。即，有无返回值的区别不能作为是重载的判断。</li></ul><p><strong>实例</strong>：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Overloading</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">test</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;test1&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test</span><span class="params">(<span class="keyword">int</span> a)</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;test2&quot;</span>);</span><br><span class="line">    &#125;   </span><br><span class="line"> </span><br><span class="line">    <span class="comment">//以下两个参数类型顺序不同</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">test</span><span class="params">(<span class="keyword">int</span> a,String s)</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;test3&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;returntest3&quot;</span>;</span><br><span class="line">    &#125;   </span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">test</span><span class="params">(String s,<span class="keyword">int</span> a)</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;test4&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;returntest4&quot;</span>;</span><br><span class="line">    &#125;   </span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        Overloading o = <span class="keyword">new</span> Overloading();</span><br><span class="line">        System.out.println(o.test());</span><br><span class="line">        o.test(<span class="number">1</span>);</span><br><span class="line">        System.out.println(o.test(<span class="number">1</span>,<span class="string">&quot;test3&quot;</span>));</span><br><span class="line">        System.out.println(o.test(<span class="string">&quot;test4&quot;</span>,<span class="number">1</span>));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="重写和重载的区别"><a href="#重写和重载的区别" class="headerlink" title="重写和重载的区别"></a>重写和重载的区别</h1><table><thead><tr><th align="left">区别点</th><th align="left">重载方法</th><th align="left">重写方法</th></tr></thead><tbody><tr><td align="left">参数列表</td><td align="left">必须修改</td><td align="left">一定不能修改</td></tr><tr><td align="left">返回类型</td><td align="left">可以修改</td><td align="left">一定不能修改</td></tr><tr><td align="left">异常</td><td align="left">可以修改</td><td align="left">可以减少或删除，一定不能抛出新的或者更广的异常</td></tr><tr><td align="left">访问</td><td align="left">可以修改</td><td align="left">一定不能做更严格的限制（可以降低限制）</td></tr></tbody></table><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>方法的重写（Override）和重载（Overlord）使 Java 多态性的不同表现，重写是父类与子类之间多态的一种表现，重载可以理解为多态的具体表现形式。</p><ol><li>方法重载使一个类中定义了多个方法名相同，而它们的参数的数量不同或数量相同而类型和次序不同，则称之为方法的重载（Overlord）。</li><li>方法重写是在子类存在方法与父类的方法的名字相同，而且参数的个数与类型一样，返回值也一样的方法，就称之为重写（Override）。</li><li>方法重载是一个类的多态性表现，而方法重写是子类与父类的一种多态性表现。</li></ol><img src=https://raw.githubusercontent.com/1041930407/cdn.io/master/20190412/3.png ><p><strong>理解图：</strong></p><img src=https://raw.githubusercontent.com/1041930407/cdn.io/master/20190412/4.png ><p><strong>思考：</strong></p><p>​    一个类的多态性：虽然调用的方法名相同，但是由于参数不同，所以调用方法不同。例如：学生们的写作业的方法，传入参数是语文的话，就是写作文；而传入参数是数学的话，就是计算题目。多种状态。或者说这样理解，一个人，可以穿上工作服当医生，也可以穿上围裙做菜；当他使用cut （切）的方法的时候，做的不是一样的事情。一个在做手术的切，一个是做菜的切。</p><p>​    子类和父类的多态表现：当父类的引用变量指向子类的对象时，调用父类中存在，而子类中重写的方法时，会调用的是子类的方法。这是由于在编译阶段，只是检查参数的引用类型，会去检查父类中是否存在这个方法，存在，所以可以编译成功。然而在实际运行时，Java虚拟机( JVM )指定<strong>对象的类型</strong>并且运行<strong>该对象的方法</strong>，所以会调用子类中<strong>重写的方法</strong>。</p>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java-继承</title>
      <link href="2019/04/12/Java-%E7%BB%A7%E6%89%BF/"/>
      <url>2019/04/12/Java-%E7%BB%A7%E6%89%BF/</url>
      
        <content type="html"><![CDATA[<h1 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h1><p>继承是Java 面向对象编程的一块基石，因为它允许创建分等级层级的类。</p><p>继承就是子类继承父类的特征和行为，使得子类对象（实例）具有父类的实例域和方法，或子类从父类继承方法，使得子类具有父类相同的行为。</p><p><strong>实现接口也是继承的一种方式！！！！！！！！！</strong></p><img src=https://gitee.com/gek7777/cdn.io/raw/master/image/20190412-1.jpg ><p>分析：</p><ul><li>兔子和羊属于食草动物类，狮子和豹属于食肉动物类。</li><li>食草动物和食肉动物又是属于动物类。</li><li>继承需要符合的关系是：<strong>is-a，父类更通用，子类更具体</strong>。</li><li>虽然食草动物和食肉动物都是属于动物，但是两者的属性和行为上有差别，所以子类会具有父类一般特性也会具有自身的特性。</li></ul><a id="more"></a><h2 id="类的继承格式"><a href="#类的继承格式" class="headerlink" title="类的继承格式"></a>类的继承格式</h2><p>​    在 Java 中通过extends 关键字可以申明一个类是从另一个类继承而来的，一般形式如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> 父类 </span>&#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> 子类 <span class="keyword">extends</span> 父类 </span>&#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="为什么需要继承"><a href="#为什么需要继承" class="headerlink" title="为什么需要继承"></a>为什么需要继承</h2><p>下面举个例子来说：</p><p>​    我们开发一个动物类，其中动物分别为企鹅以及老鼠，要求如下：</p><ul><li>企鹅：属性（姓名，id），方法（吃，睡，自我介绍）</li><li>老鼠：属性（姓名，id），方法（吃，睡，自我介绍）</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//企鹅类</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Penguin</span> </span>&#123;</span><br><span class="line">    <span class="comment">//属性,实例域</span></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> id;</span><br><span class="line">    <span class="comment">//构造方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Penguin</span><span class="params">(String myName, <span class="keyword">int</span> myId)</span></span>&#123;</span><br><span class="line">        name = myName;</span><br><span class="line">        id = myId;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//方法--吃</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">eat</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(name + <span class="string">&quot;正在吃&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//方法--睡</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sleep</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(name + <span class="string">&quot;正在睡&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//方法--自我介绍</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">introducetion</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;大家好！我是 &quot;</span> + id + <span class="string">&quot;号&quot;</span> + name + “。”);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//老鼠类</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Mouse</span> </span>&#123;</span><br><span class="line">    <span class="comment">//属性,实例域</span></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> id;</span><br><span class="line">    <span class="comment">//构造方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Penguin</span><span class="params">(String myName, <span class="keyword">int</span> myId)</span></span>&#123;</span><br><span class="line">        name = myName;</span><br><span class="line">        id = myId;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//方法--吃</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">eat</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(name + <span class="string">&quot;正在吃&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//方法--睡</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sleep</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(name + <span class="string">&quot;正在睡&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//方法--自我介绍</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">introducetion</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;大家好！我是 &quot;</span> + id + <span class="string">&quot;号&quot;</span> + name + “。”);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br></pre></td></tr></table></figure><p><strong>分析：</strong></p><p>​    从这两段代码可以看出来，代码很多重复的，导致代码量大且臃肿，而且维护性不高（维护性主要是后期需要修改的时候，就需要修改很多的代码，容易出错），所以从根本上解决这两段代码的问题，就需要用到继承，将这两段代码中相同的部分提取出来组成一个父类。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//公共父类--动物类</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Animal</span></span>&#123;</span><br><span class="line">    <span class="comment">//属性，实例域</span></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> id;</span><br><span class="line">    <span class="comment">//构造方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Animal</span><span class="params">(String myName, <span class="keyword">int</span> myId)</span></span>&#123;</span><br><span class="line">        name = myName;</span><br><span class="line">        id = myId;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//方法--吃</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">eat</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.ptintlm(name + <span class="string">&quot;正在吃&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//方法--睡</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sleep</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(name + <span class="string">&quot;正在睡&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">//方法--自我介绍</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">introduction</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;大家好！我是 &quot;</span> + id + <span class="string">&quot;号&quot;</span> + name + <span class="string">&quot;。&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>​    这个Animal 类就可以作为一个父类，然后企鹅类和老鼠类继承这个类，就具有父类当中的属性和方法，子类就不用存在重复的代码，维护性也提高，代码也更加简洁，提高代码的复用性（复用性主要是可以使用多次，不用再多次写同样的代码）继承之后的代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//企鹅类</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Penguin</span> <span class="keyword">extends</span> <span class="title">Animal</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Penguin</span><span class="params">(String myName, <span class="keyword">int</span> myId)</span></span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(myName, myId);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//老鼠类</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Mouse</span> <span class="keyword">extends</span> <span class="title">Animal</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Mouse</span><span class="params">(String myName, <span class="keyword">int</span> myId)</span></span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(myName,myId);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="继承类型"><a href="#继承类型" class="headerlink" title="继承类型"></a>继承类型</h2><p>需要注意的是 Java 不支持多继承，但支持多重继承</p><img src=https://raw.githubusercontent.com/1041930407/cdn.io/master/20190412/2.png ><h1 id="继承的特性"><a href="#继承的特性" class="headerlink" title="继承的特性"></a>继承的特性</h1><ul><li>子类拥有父类非 private 的属性、方法。—-private 私有的，没办法继承。</li><li>子类可以拥有自己的属性和方法，即子类可以对父类进行扩展。</li><li>子类可以用自己的方式实现父类的方法。</li><li>Java 的继承是单继承，但是可以多重继承，单继承就是一个子类只能继承一个父类，多重继承就是 A 可以继承 B ，B 可以继承 C，C 可以继承 D。这是和 C ++不同的。</li><li>提高了类之间的耦合性（继承的缺点，耦合度高就会造成代码之间的联系越紧密，代码的独立性越差）。</li></ul><h1 id="继承的关键字"><a href="#继承的关键字" class="headerlink" title="继承的关键字"></a>继承的关键字</h1><p>​    继承可以使用 extends 和 implements 两个关键字来实现继承，而且所有的类都是继承于 Java .lang.Object ,当一个类没有继承的关键字时，则默认继承object ，祖先类。</p><h2 id="extends-关键字"><a href="#extends-关键字" class="headerlink" title="extends 关键字"></a>extends 关键字</h2><p>​    在 Java 中，类的继承是单一继承，也就是说，一个子类只能拥有一个父类，所以extends 只能继承一个类。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//extends 关键字</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Animal</span> </span>&#123; </span><br><span class="line">    <span class="keyword">private</span> String name;   </span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> id; </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Animal</span><span class="params">(String myName, String myid)</span> </span>&#123; </span><br><span class="line">        <span class="comment">//初始化属性值</span></span><br><span class="line">    &#125; </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">eat</span><span class="params">()</span> </span>&#123;  <span class="comment">//吃东西方法的具体实现  &#125; </span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sleep</span><span class="params">()</span> </span>&#123; <span class="comment">//睡觉方法的具体实现  &#125; </span></span><br><span class="line">&#125; </span><br><span class="line"> </span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Penguin</span>  <span class="keyword">extends</span>  <span class="title">Animal</span></span>&#123; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="implements-关键字"><a href="#implements-关键字" class="headerlink" title="implements 关键字"></a>implements 关键字</h2><p>​    使用implements 关键字可以变相额使 Java 具有多继承的特性，使用范围为类继承接口的情况，可以同时继承多个接口。（接口之间用逗号间隔）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//implements 关键字</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">A</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">eat</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sleep</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">B</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">show</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">C</span> <span class="keyword">implements</span> <span class="title">A</span>,<span class="title">B</span> </span>&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="super-和-this-关键字"><a href="#super-和-this-关键字" class="headerlink" title="super 和 this 关键字"></a>super 和 this 关键字</h2><p>super 关键字：我们可以通过 super 关键字来实现对父类成员的访问，用来引用当前对象的父类。</p><p>this 关键字：指向自己的引用。</p><p>例子：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Animal</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">eat</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;animal:eat&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Dog</span> <span class="keyword">extends</span> <span class="title">Animal</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">eat</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;dog:eat&quot;</span>);   </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">eatTest</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.eat();<span class="comment">//this 调用自己的方法</span></span><br><span class="line">        <span class="keyword">super</span>.eat();<span class="comment">//super 调用父类的方法</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        Animal a = <span class="keyword">new</span> Animal();</span><br><span class="line">        a.eat();</span><br><span class="line">        Dog d = <span class="keyword">new</span> Dog();</span><br><span class="line">        d.eatTest();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="final-关键字"><a href="#final-关键字" class="headerlink" title="final 关键字"></a>final 关键字</h2><p>final 关键字声明类可以把类定义为不能继承的，即最终类；或者用于修饰方法，该方法不能被子类重写：</p><ul><li><p>声明类：</p>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">final</span> <span class="class"><span class="keyword">class</span> 类名</span>&#123;</span><br><span class="line">    <span class="comment">//实体</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>声明方法：</p>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">修饰符（ <span class="keyword">public</span>/<span class="keyword">private</span>/<span class="keyword">default</span>/<span class="keyword">protected</span> ）<span class="keyword">final</span> 返回值类型 方法名() &#123;</span><br><span class="line">    <span class="comment">//方法体</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><p><strong>注意</strong>：实例变量也可以被定义为 final ，被定义为 final 的变量不能修改。被声明为 final 的类中的方法自动声明为 final ，但是实例变量并不是 final 。</p><p>​    </p><h1 id="构造器"><a href="#构造器" class="headerlink" title="构造器"></a>构造器</h1><p>​    子类是不继承父类的构造器（构造方法或者构造函数）的，它只是调用（隐式或显示）。如果父类的构造器带有参数，则必须在子类的构造器中显示地通过<strong>super</strong> 关键字调用父类的构造器并配以适当的参数列表。如果父类构造器没有参数，则在子类的构造器中不需要使用super 关键字调用父类构造器，系统会自动调用父类的无参构造器。</p><p>实例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> SuperClass&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> n;</span><br><span class="line">    SuperClass()&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;SuperClass&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    SuperClass(<span class="keyword">int</span> n)&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;SuperClass(int n)&quot;</span>);</span><br><span class="line">        <span class="keyword">this</span>.n = n;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//SubClass 继承类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SubClass</span> <span class="keyword">extends</span> <span class="title">SuperClass</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> n;</span><br><span class="line">    </span><br><span class="line">    SubClass()&#123;<span class="comment">//自动调用父类的无参构造器</span></span><br><span class="line">        System.out.println(<span class="string">&quot;SubClass&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">SubClass</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(<span class="number">300</span>);   <span class="comment">//调用父类中带参数的构造器</span></span><br><span class="line">        System.out.println(<span class="string">&quot;SubClass(int n) :&quot;</span> + n);</span><br><span class="line">        <span class="keyword">this</span>.n = n;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//SubClass2 继承类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SubClass2</span> <span class="keyword">extends</span> <span class="title">SuperClass</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> n;</span><br><span class="line">    </span><br><span class="line">    SubClass2() &#123;</span><br><span class="line">        <span class="keyword">super</span>(<span class="number">300</span>);  <span class="comment">//调用父类中带有参数的构造器</span></span><br><span class="line">        System.out.println(<span class="string">&quot;SubClass2&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    SubClass2(<span class="keyword">int</span> n) &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;SubClass(int n):&quot;</span> + n);</span><br><span class="line">        <span class="keyword">this</span>.n = n;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestSuperSub</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;------SubClass 类继承------&quot;</span>);</span><br><span class="line">        SubClass sc1 = <span class="keyword">new</span> SubClass();</span><br><span class="line">        SubClass sc2 = <span class="keyword">new</span> SubClass(<span class="number">100</span>);</span><br><span class="line">    </span><br><span class="line">        System.out.println(<span class="string">&quot;------SubClass2 类继承-------&quot;</span>);</span><br><span class="line">    SubClass2 sc3 = <span class="keyword">new</span> SubClass2();</span><br><span class="line">        SubClass2 sc4 = <span class="keyword">new</span> SubClass2(<span class="number">200</span>);  </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>输出结果：</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">------SubClass 类继承------</span><br><span class="line">SuperClass()</span><br><span class="line">SubClass</span><br><span class="line">SuperClass(<span class="keyword">int</span> n)</span><br><span class="line">SubClass(<span class="keyword">int</span> n) :<span class="number">100</span></span><br><span class="line">------SubClass2 类继承------</span><br><span class="line">SuperClass(<span class="keyword">int</span> n)</span><br><span class="line">SubClass2</span><br><span class="line">SuperClass()</span><br><span class="line">SubClass2(<span class="keyword">int</span> n) :<span class="number">200</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java-throw、throws和try-catch的区别</title>
      <link href="2019/04/11/Java-Throw%E3%80%81throws%E5%92%8Ctry-catch%E7%9A%84%E5%8C%BA%E5%88%AB/"/>
      <url>2019/04/11/Java-Throw%E3%80%81throws%E5%92%8Ctry-catch%E7%9A%84%E5%8C%BA%E5%88%AB/</url>
      
        <content type="html"><![CDATA[<h1 id="throw"><a href="#throw" class="headerlink" title="throw"></a>throw</h1><p>throw 就是抛出一个异常，并且捕获这个异常的引用，这个异常会被抛出到外部的环境，由外部环境进行处理。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">func</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> Exception</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><a id="more"></a><p><strong>分析：</strong></p><p>​    这里抛出一个 Exception ，Exception 是 Throwable 的子类，是所有异常的基类。与此同时，Throwable还有另一个子类，Error。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span>  <span class="title">ZeroTest</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span>  <span class="keyword">void</span>  <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">     <span class="keyword">try</span>&#123;</span><br><span class="line">       <span class="keyword">int</span> i = <span class="number">100</span>/ <span class="number">0</span>;</span><br><span class="line">       System.out.print(i);</span><br><span class="line">  &#125;<span class="keyword">catch</span>(Exception e)&#123;</span><br><span class="line">       System.out.print(<span class="number">1</span>);</span><br><span class="line">       <span class="keyword">throw</span> <span class="keyword">new</span>  RuntimeException();</span><br><span class="line">  &#125;<span class="keyword">finally</span>&#123;</span><br><span class="line">       System.out.print(<span class="number">2</span>);</span><br><span class="line">  &#125;</span><br><span class="line">      System.out.print(<span class="number">3</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>分析：</strong></p><p>​    try- catch 是直接处理，处理完成之后程序会继续往下执行，throw 则是将异常抛给它的上一级处理，程序便不往下执行了。<strong>程序中执行流程：出现异常，进入catch，打印1后抛出一个 RunTimeException ，缓存异常，执行finally ，打印2 ，最后程序中止。</strong></p><h1 id="throws"><a href="#throws" class="headerlink" title="throws"></a>throws</h1><p>throws 并不是抛出一个异常，只是异常声明，表示这里<strong>可能出现异常</strong>，只是<strong>可能</strong>，所以可以没有，也可以有。这样的话，提高了程序的健壮性。但是，一个方法必然会出现异常的话，那么就会强制要求声明异常。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">fun</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line"> <span class="keyword">throw</span> <span class="keyword">new</span> Exception();       </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">g</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="try…catch"><a href="#try…catch" class="headerlink" title="try…catch"></a>try…catch</h1><p>当我们在环境中调用fun() 和 g () 时，编译器会通知我们需要用一个try catch 程序块来处理这个异常。</p><p>这个程序块分两块，第一块是try{} 第二块是 catch(exception){}</p><p>try 中是可能出现异常的代码，而 catch 则是处理try 中抛出的异常，其中 catch 的参数列表接受的是一个异常的引用，是 throw 抛出来的异常对象的引用，我们以此获取异常对象，并对它进行操作。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        A a = <span class="keyword">new</span> A();</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            a.fun();</span><br><span class="line">            a.g();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;捕获了一个异常&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我们捕获了fun 的异常，因为我们明确的指明fun 会抛出一个异常 throw new Exception ()；所以我们这里也会捕获到它，并去处理它。尽管g() 没有抛出任何的异常，编译器还是要求我们要用 try catch 把它括起来，是因为它拥有一个 throws 异常说明。</p><p><strong>下面是常见的几种异常，供大家参考：</strong></p><p>输入输出异常：IOException<br>算术异常类：ArithmeticExecption<br>空指针异常类：NullPointerException<br>类型强制转换异常：ClassCastException</p><p>操作数据库异常：SQLException</p><p>文件未找到异常：FileNotFoundException<br>数组负下标异常：NegativeArrayException<br>数组下标越界异常：ArrayIndexOutOfBoundsException<br>违背安全原则异常：SecturityException<br>文件已结束异常：EOFException<br>字符串转换为数字异常：NumberFormatException<br>方法未找到异常：NoSuchMethodException</p>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>单例模式-设计模式</title>
      <link href="2019/04/10/%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F-%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
      <url>2019/04/10/%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F-%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<h2 id="设计流程"><a href="#设计流程" class="headerlink" title="设计流程"></a>设计流程</h2><p>需求：</p><p>​    这个类在程序中有且只有一个类对象。</p><p>方案：</p><p>​    程序中只调用一构造函数。</p><p>问题：</p><p>​    构造函数不能去约束用户使用，只调用一次的构造函数，很不安全，无法限制别人调用次数。</p><p>方案：</p><p>​    构造函数私有化，用 private 修饰</p><a id="more"></a><p>问题：</p><p>​    构造函数是私有化了，安全了，但是类外却无法调用了。</p><p>方案1：</p><p>​    给函数加上 static 修饰</p><p>问题：</p><p>​    这里的  static 不能用来修饰构造函数，违背了构造函数的原理【没有对象】</p><p>方案2：</p><p>​    只需新建一个方法，用 static 修饰，方法中调用构造方法，返回值就是需要的对象。</p><p>问题：</p><p>​    发现封装了，创建的对象还是不一样。</p><p>方案：</p><ul><li>使用一个静态的成员变量来保存  <strong>创建过的对象的首地址</strong></li><li>是不在类外使用的，所以直接 private 修饰</li><li>需要保存类对象的地址，持久化数据，用 static 修饰</li><li>数据类型就是对象，初始值设置为 null</li></ul><p>问题：</p><p>​    成员变量私有化了，静态也用了，数据类型没错，但是每次还是两个对象</p><p>方案：</p><p>​    对于保存的地址进行判断，如果为 null ，创建对象，返回保存的地址，如果不是 null ，返回保存的地址。</p><h2 id="实例："><a href="#实例：" class="headerlink" title="实例："></a>实例：</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Single</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> id;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> Single s = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="title">Single</span><span class="params">(<span class="keyword">int</span> id)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.id = id;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Single <span class="title">getInstance</span><span class="params">(<span class="keyword">int</span> id)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span>(s == <span class="keyword">null</span>) &#123;</span><br><span class="line">s = <span class="keyword">new</span> Single(id);</span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">return</span> s;</span><br><span class="line">&#125; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo6</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">Single single = Single.getInstance(<span class="number">5</span>);</span><br><span class="line">System.out.println(single);</span><br><span class="line"></span><br><span class="line">Single single2 = Single.getInstance(<span class="number">59</span>);</span><br><span class="line">System.out.println(single2);</span><br><span class="line"></span><br><span class="line">Single single3 = Single.getInstance(<span class="number">5</span>);</span><br><span class="line">System.out.println(single3);</span><br><span class="line"></span><br><span class="line">Single single4 = Single.getInstance(<span class="number">59</span>);</span><br><span class="line">System.out.println(single4);</span><br><span class="line"></span><br><span class="line">System.out.print(single4.id);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Design Pattern </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java-数组</title>
      <link href="2019/04/09/Java-%E6%95%B0%E7%BB%84/"/>
      <url>2019/04/09/Java-%E6%95%B0%E7%BB%84/</url>
      
        <content type="html"><![CDATA[<h1 id="数组定义"><a href="#数组定义" class="headerlink" title="数组定义"></a>数组定义</h1><p>数据类型[]  数组名 = new 数据类型[元素个数]；<br>例如：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span>[] array = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">10</span>];</span><br></pre></td></tr></table></figure><p>分析：在内存中新建一个连续的内存空间，里面能够保存的是10个 int 类型的数据。这个内存空间名字是 array 。<br><strong>左边：</strong></p><ul><li><p>int ：数据类型，告诉我们这个数据空间里面保存的数据是什么类型，这里是 int 类型</p></li><li><p>[] : 这里定义的数据是一个数组类型。array 是一个【引用】数据类型 </p></li><li><p>array：数组名，就是一个标识符，按照标识符的规则来</p></li></ul><p><strong>右边：</strong></p><ul><li>new ：创建【对象】的关键字</li><li>int ：表示这个空间里面只能保存 int 类型的数据</li><li>[10]: 表示这个数组的【元素个数】位 10，能够保存 10 个 int 类型数据    </li></ul><a id="more"></a><h1 id="数组两种初始化方式"><a href="#数组两种初始化方式" class="headerlink" title="数组两种初始化方式"></a>数组两种初始化方式</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//第一种:动态初始化</span></span><br><span class="line">  <span class="keyword">int</span>[] arr = <span class="keyword">new</span> <span class="keyword">int</span>[元素个数];     </span><br><span class="line"> <span class="comment">//[注]元素个数可以是一个变量，通过代码的执行获取 </span></span><br><span class="line"></span><br><span class="line"><span class="comment">//第二种：静态初始化：</span></span><br><span class="line">  <span class="keyword">int</span>[] arr = &#123;<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">7</span>&#125;;</span><br></pre></td></tr></table></figure><h1 id="数组中常见的错误"><a href="#数组中常见的错误" class="headerlink" title="数组中常见的错误"></a>数组中常见的错误</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">NullPointerException;</span><br><span class="line"><span class="comment">//内存访问 null 地址空间异常</span></span><br><span class="line"><span class="comment">//在内存中任何对于null的操作都是系统不允许的</span></span><br><span class="line">ArrayIndexOutOfBoundsException  <span class="comment">//bounds 有效</span></span><br><span class="line"><span class="comment">//数组所操作的下标超出了有效范围</span></span><br><span class="line"><span class="comment">//数组不能【越界操作】</span></span><br></pre></td></tr></table></figure><h2 id="NULL-地址"><a href="#NULL-地址" class="headerlink" title="NULL 地址"></a>NULL 地址</h2><p>规定：内存从第一个字节，到内存的最大值，每一个字节看作一个单元，同一编号编号从0开始到内存的最大值。<br><strong>【注意】</strong></p><ol><li>地址通常是用十六进制来表示</li><li>地址中比较特殊的是null内存编号为0的字节，这个字节收到系统保护，任何的程序都不能对这个地址进行访问和操作，只能【指向】</li><li>通常一个地址是保存在【引用数据类型】变量中</li></ol><h1 id="二维数组"><a href="#二维数组" class="headerlink" title="二维数组"></a>二维数组</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span>[] arr = <span class="keyword">new</span> <span class="keyword">int</span>[n];</span><br><span class="line"><span class="keyword">int</span>[] arr = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//二维数组的定义格式：</span></span><br><span class="line"><span class="comment">//数据类型[][] 数组名 = new 数据类型[n][m];</span></span><br><span class="line"><span class="comment">//使用格式：</span></span><br><span class="line"><span class="comment">//数组名[一维下标][二维下标]；</span></span><br></pre></td></tr></table></figure><h1 id="冒泡和选择排序"><a href="#冒泡和选择排序" class="headerlink" title="冒泡和选择排序"></a>冒泡和选择排序</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//冒泡排序</span></span><br><span class="line"><span class="comment">//外层控制轮次</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; arr.length - <span class="number">1</span>; i++) &#123;</span><br><span class="line">    <span class="comment">//内层控制每轮两两比较几次</span></span><br><span class="line">    <span class="keyword">for</span> （<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; arr.length - i - <span class="number">1</span>; j++） &#123;</span><br><span class="line">        <span class="keyword">if</span> (arr[j] &lt; arr[j + <span class="number">1</span>]) &#123;</span><br><span class="line">            <span class="keyword">int</span> temp = arr[j];</span><br><span class="line">            arr[j] = arr[j + <span class="number">1</span>];</span><br><span class="line">            arr[j + <span class="number">1</span>] = temp;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">   </span><br><span class="line"><span class="comment">//选择排序</span></span><br><span class="line"><span class="comment">//代码外层需要循环 arr.length - 1 次 </span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; arr.length - <span class="number">1</span>; i++) &#123;</span><br><span class="line">    <span class="keyword">int</span> index = i;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j = i; j &lt; arr.length; j++) &#123;</span><br><span class="line">        <span class="keyword">if</span> ( arr[index] &lt; arr[j]) &#123;</span><br><span class="line">            index = j;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (index != i) &#123;</span><br><span class="line">        <span class="keyword">int</span> temp = arr[index];</span><br><span class="line">        arr[index] = arr[i];</span><br><span class="line">        arr[i] = temp;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java-String、StringBuffer和Stringbuilder</title>
      <link href="2019/04/09/Java-String%E3%80%81StringBuffer%E5%92%8CStringbuilder/"/>
      <url>2019/04/09/Java-String%E3%80%81StringBuffer%E5%92%8CStringbuilder/</url>
      
        <content type="html"><![CDATA[<h1 id="String-类"><a href="#String-类" class="headerlink" title="String 类"></a>String 类</h1><p>字符串广泛应用在 Java 编程中，在 Java 中字符串属于对象，Java 提供了 String 类来创建和操作字符串。</p><h2 id="创建字符串的方式："><a href="#创建字符串的方式：" class="headerlink" title="创建字符串的方式："></a>创建字符串的方式：</h2><p>String 类有11种构造方法。下面举例三个：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//最简单的方式：</span></span><br><span class="line">String str1 = <span class="string">&quot;hello&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//第二种</span></span><br><span class="line">String str2 = <span class="keyword">new</span> String(<span class="string">&quot;hello&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//第三种</span></span><br><span class="line"><span class="keyword">char</span>[] helloArray = &#123;<span class="string">&#x27;h&#x27;</span>,<span class="string">&#x27;e&#x27;</span>,<span class="string">&#x27;l&#x27;</span>,<span class="string">&#x27;l&#x27;</span>,<span class="string">&#x27;o&#x27;</span>&#125;;</span><br><span class="line">String str3 = <span class="keyword">new</span> String(helloArray); </span><br></pre></td></tr></table></figure><p><strong>注意：</strong>String 类是不可改变的，所以一旦创建了 String 对象，那么它的值就无法改变了。</p><a id="more"></a><h2 id="字符串长度"><a href="#字符串长度" class="headerlink" title="字符串长度"></a>字符串长度</h2><p>用于获取有关对象的信息的方法称为访问器方法。</p><p>String 类的一个访问器方法是 length() 方法，它返回字符串对象包含的字符数。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> len = str.length();</span><br></pre></td></tr></table></figure><h2 id="连接字符串"><a href="#连接字符串" class="headerlink" title="连接字符串"></a>连接字符串</h2><p>String 类提供了连接两个字符串的方法：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">String str = str1.concat(str2);<span class="comment">//返回连接好的新字符串</span></span><br></pre></td></tr></table></figure><h2 id="创建格式化字符串"><a href="#创建格式化字符串" class="headerlink" title="创建格式化字符串"></a>创建格式化字符串</h2><p>我们知道输出格式化数字可以使用 printf() 和 format() 方法。</p><p>String 类使用静态方法 format() 返回一个 String 对象，而不是 PrintStream  对象。</p><p>String 类的静态方法 format() 能用来创建可复用的格式化字符串，而不仅仅是用于一次打印输出。</p><p>例子：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">System.out.printf(<span class="string">&quot;浮点型变量的值为 &quot;</span> +</span><br><span class="line">                  <span class="string">&quot;%f, 整型变量的值为 &quot;</span> +</span><br><span class="line">                  <span class="string">&quot; %d, 字符串变量的值为 &quot;</span> +</span><br><span class="line">                  <span class="string">&quot;is %s&quot;</span>, floatVar, intVar, stringVar);</span><br></pre></td></tr></table></figure><p>或</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">String fs;</span><br><span class="line">fs = String.format(<span class="string">&quot;浮点型变量的值为 &quot;</span> +</span><br><span class="line">                   <span class="string">&quot;%f, 整型变量的值为 &quot;</span> +</span><br><span class="line">                   <span class="string">&quot; %d, 字符串变量的值为 &quot;</span> +</span><br><span class="line">                   <span class="string">&quot; %s&quot;</span>, floatVar, intVar, stringVar);</span><br></pre></td></tr></table></figure><h2 id="String-方法"><a href="#String-方法" class="headerlink" title="String 方法"></a>String 方法</h2><p>下面是 String 类支持的方法，更多详细，参看 <a href="http://www.runoob.com/manual/jdk1.6/java/lang/String.html">Java String API</a> 文档:</p><table><thead><tr><th align="left">SN(序号)</th><th align="left">方法描述</th></tr></thead><tbody><tr><td align="left">1</td><td align="left"><a href="http://www.runoob.com/java/java-string-charat.html">char charAt(int index)</a> 返回指定索引处的 char 值。</td></tr><tr><td align="left">2</td><td align="left"><a href="http://www.runoob.com/java/java-string-compareto.html">int compareTo(Object o)</a> 把这个字符串和另一个对象比较。</td></tr><tr><td align="left">3</td><td align="left"><a href="http://www.runoob.com/java/java-string-compareto.html">int compareTo(String anotherString)</a> 按字典顺序比较两个字符串。</td></tr><tr><td align="left">4</td><td align="left"><a href="http://www.runoob.com/java/java-string-comparetoignorecase.html">int compareToIgnoreCase(String str)</a> 按字典顺序比较两个字符串，不考虑大小写。</td></tr><tr><td align="left">5</td><td align="left"><a href="http://www.runoob.com/java/java-string-concat.html">String concat(String str)</a> 将指定字符串连接到此字符串的结尾。</td></tr><tr><td align="left">6</td><td align="left"><a href="http://www.runoob.com/java/java-string-contentequals.html">boolean contentEquals(StringBuffer sb)</a> 当且仅当字符串与指定的StringBuffer有相同顺序的字符时候返回真。</td></tr><tr><td align="left">7</td><td align="left">[static String copyValueOf(char<a href="http://www.runoob.com/java/java-string-copyvalueof.html">] data)</a> 返回指定数组中表示该字符序列的 String。</td></tr><tr><td align="left">8</td><td align="left">[static String copyValueOf(char<a href="http://www.runoob.com/java/java-string-copyvalueof.html">] data, int offset, int count)</a> 返回指定数组中表示该字符序列的 String。</td></tr><tr><td align="left">9</td><td align="left"><a href="http://www.runoob.com/java/java-string-endswith.html">boolean endsWith(String suffix)</a> 测试此字符串是否以指定的后缀结束。</td></tr><tr><td align="left">10</td><td align="left"><a href="http://www.runoob.com/java/java-string-equals.html">boolean equals(Object anObject)</a> 将此字符串与指定的对象比较。</td></tr><tr><td align="left">11</td><td align="left"><a href="http://www.runoob.com/java/java-string-equalsignorecase.html">boolean equalsIgnoreCase(String anotherString)</a> 将此 String 与另一个 String 比较，不考虑大小写。</td></tr><tr><td align="left">12</td><td align="left">[byte<a href="http://www.runoob.com/java/java-string-getbytes.html">] getBytes()</a>  使用平台的默认字符集将此 String 编码为 byte 序列，并将结果存储到一个新的 byte 数组中。</td></tr><tr><td align="left">13</td><td align="left">[byte<a href="http://www.runoob.com/java/java-string-getbytes.html">] getBytes(String charsetName)</a> 使用指定的字符集将此 String 编码为 byte 序列，并将结果存储到一个新的 byte 数组中。</td></tr><tr><td align="left">14</td><td align="left">[void getChars(int srcBegin, int srcEnd, char<a href="http://www.runoob.com/java/java-string-getchars.html">] dst, int dstBegin)</a> 将字符从此字符串复制到目标字符数组。</td></tr><tr><td align="left">15</td><td align="left"><a href="http://www.runoob.com/java/java-string-hashcode.html">int hashCode()</a> 返回此字符串的哈希码。</td></tr><tr><td align="left">16</td><td align="left"><a href="http://www.runoob.com/java/java-string-indexof.html">int indexOf(int ch)</a> 返回指定字符在此字符串中第一次出现处的索引。</td></tr><tr><td align="left">17</td><td align="left"><a href="http://www.runoob.com/java/java-string-indexof.html">int indexOf(int ch, int fromIndex)</a> 返回在此字符串中第一次出现指定字符处的索引，从指定的索引开始搜索。</td></tr><tr><td align="left">18</td><td align="left"><a href="http://www.runoob.com/java/java-string-indexof.html">int indexOf(String str)</a>  返回指定子字符串在此字符串中第一次出现处的索引。</td></tr><tr><td align="left">19</td><td align="left"><a href="http://www.runoob.com/java/java-string-indexof.html">int indexOf(String str, int fromIndex)</a> 返回指定子字符串在此字符串中第一次出现处的索引，从指定的索引开始。</td></tr><tr><td align="left">20</td><td align="left"><a href="http://www.runoob.com/java/java-string-intern.html">String intern()</a>  返回字符串对象的规范化表示形式。</td></tr><tr><td align="left">21</td><td align="left"><a href="http://www.runoob.com/java/java-string-lastindexof.html">int lastIndexOf(int ch)</a>  返回指定字符在此字符串中最后一次出现处的索引。</td></tr><tr><td align="left">22</td><td align="left"><a href="http://www.runoob.com/java/java-string-lastindexof.html">int lastIndexOf(int ch, int fromIndex)</a> 返回指定字符在此字符串中最后一次出现处的索引，从指定的索引处开始进行反向搜索。</td></tr><tr><td align="left">23</td><td align="left"><a href="http://www.runoob.com/java/java-string-lastindexof.html">int lastIndexOf(String str)</a> 返回指定子字符串在此字符串中最右边出现处的索引。</td></tr><tr><td align="left">24</td><td align="left"><a href="http://www.runoob.com/java/java-string-lastindexof.html">int lastIndexOf(String str, int fromIndex)</a>  返回指定子字符串在此字符串中最后一次出现处的索引，从指定的索引开始反向搜索。</td></tr><tr><td align="left">25</td><td align="left"><a href="http://www.runoob.com/java/java-string-length.html">int length()</a> 返回此字符串的长度。</td></tr><tr><td align="left">26</td><td align="left"><a href="http://www.runoob.com/java/java-string-matches.html">boolean matches(String regex)</a> 告知此字符串是否匹配给定的正则表达式。</td></tr><tr><td align="left">27</td><td align="left"><a href="http://www.runoob.com/java/java-string-regionmatches.html">boolean regionMatches(boolean ignoreCase, int toffset, String other, int ooffset, int len)</a> 测试两个字符串区域是否相等。</td></tr><tr><td align="left">28</td><td align="left"><a href="http://www.runoob.com/java/java-string-regionmatches.html">boolean regionMatches(int toffset, String other, int ooffset, int len)</a> 测试两个字符串区域是否相等。</td></tr><tr><td align="left">29</td><td align="left"><a href="http://www.runoob.com/java/java-string-replace.html">String replace(char oldChar, char newChar)</a> 返回一个新的字符串，它是通过用 newChar 替换此字符串中出现的所有 oldChar 得到的。</td></tr><tr><td align="left">30</td><td align="left"><a href="http://www.runoob.com/java/java-string-replaceall.html">String replaceAll(String regex, String replacement)</a> 使用给定的 replacement 替换此字符串所有匹配给定的正则表达式的子字符串。</td></tr><tr><td align="left">31</td><td align="left"><a href="http://www.runoob.com/java/java-string-replacefirst.html">String replaceFirst(String regex, String replacement)</a>  使用给定的 replacement 替换此字符串匹配给定的正则表达式的第一个子字符串。</td></tr><tr><td align="left">32</td><td align="left">[String<a href="http://www.runoob.com/java/java-string-split.html">] split(String regex)</a> 根据给定正则表达式的匹配拆分此字符串。</td></tr><tr><td align="left">33</td><td align="left">[String<a href="http://www.runoob.com/java/java-string-split.html">] split(String regex, int limit)</a> 根据匹配给定的正则表达式来拆分此字符串。</td></tr><tr><td align="left">34</td><td align="left"><a href="http://www.runoob.com/java/java-string-startswith.html">boolean startsWith(String prefix)</a> 测试此字符串是否以指定的前缀开始。</td></tr><tr><td align="left">35</td><td align="left"><a href="http://www.runoob.com/java/java-string-startswith.html">boolean startsWith(String prefix, int toffset)</a> 测试此字符串从指定索引开始的子字符串是否以指定前缀开始。</td></tr><tr><td align="left">36</td><td align="left"><a href="http://www.runoob.com/java/java-string-subsequence.html">CharSequence subSequence(int beginIndex, int endIndex)</a>  返回一个新的字符序列，它是此序列的一个子序列。</td></tr><tr><td align="left">37</td><td align="left"><a href="http://www.runoob.com/java/java-string-substring.html">String substring(int beginIndex)</a> 返回一个新的字符串，它是此字符串的一个子字符串。</td></tr><tr><td align="left">38</td><td align="left"><a href="http://www.runoob.com/java/java-string-substring.html">String substring(int beginIndex, int endIndex)</a> 返回一个新字符串，它是此字符串的一个子字符串。</td></tr><tr><td align="left">39</td><td align="left">[char<a href="http://www.runoob.com/java/java-string-tochararray.html">] toCharArray()</a> 将此字符串转换为一个新的字符数组。</td></tr><tr><td align="left">40</td><td align="left"><a href="http://www.runoob.com/java/java-string-tolowercase.html">String toLowerCase()</a> 使用默认语言环境的规则将此 String 中的所有字符都转换为小写。</td></tr><tr><td align="left">41</td><td align="left"><a href="http://www.runoob.com/java/java-string-tolowercase.html">String toLowerCase(Locale locale)</a>  使用给定 Locale 的规则将此 String 中的所有字符都转换为小写。</td></tr><tr><td align="left">42</td><td align="left"><a href="http://www.runoob.com/java/java-string-tostring.html">String toString()</a>  返回此对象本身（它已经是一个字符串！）。</td></tr><tr><td align="left">43</td><td align="left"><a href="http://www.runoob.com/java/java-string-touppercase.html">String toUpperCase()</a> 使用默认语言环境的规则将此 String 中的所有字符都转换为大写。</td></tr><tr><td align="left">44</td><td align="left"><a href="http://www.runoob.com/java/java-string-touppercase.html">String toUpperCase(Locale locale)</a> 使用给定 Locale 的规则将此 String 中的所有字符都转换为大写。</td></tr><tr><td align="left">45</td><td align="left"><a href="http://www.runoob.com/java/java-string-trim.html">String trim()</a> 返回字符串的副本，忽略前导空白和尾部空白。</td></tr><tr><td align="left">46</td><td align="left"><a href="http://www.runoob.com/java/java-string-valueof.html">static String valueOf(primitive data type x)</a> 返回给定data type类型x参数的字符串表示形式。</td></tr></tbody></table><h1 id="StringBuffer-类"><a href="#StringBuffer-类" class="headerlink" title="StringBuffer 类"></a>StringBuffer 类</h1><p>当对字符进行修改的时候，需要使用 StringBuffer 和 StringBuilder 类。</p><p>和 String 类不同的是，StringBuffer 和 StringBuilder 类的对象能够被多次修改，并且不产生新的未使用对象。</p><p>StringBuilder 类在 Java 5 中被提出，它和 StringBuffer 之间最大的不同在于 StringBuilder 的方法不是线程安全的（不能同步访问）。</p><p>由于 StringBuilder 相较于 StringBuffer 有速度优势，多数情况使用 StringBuilder 类。然而，在线程安全的情况下，只能用 StringBuffer 类。</p><h2 id="StringBuffer-方法"><a href="#StringBuffer-方法" class="headerlink" title="StringBuffer 方法"></a>StringBuffer 方法</h2><p>以下是 StringBuffer 类中的主要方法：</p><table><thead><tr><th align="left">序号</th><th align="left">方法描述</th></tr></thead><tbody><tr><td align="left">1</td><td align="left">public StringBuffer append(String s) 将指定的字符串追加到此字符序列。</td></tr><tr><td align="left">2</td><td align="left">public StringBuffer reverse()  将此字符序列用其反转形式取代。</td></tr><tr><td align="left">3</td><td align="left">public delete(int start, int end) 移除此序列的子字符串中的字符。</td></tr><tr><td align="left">4</td><td align="left">public insert(int offset, int i) 将 int 参数的字符串表示形式插入此序列中。</td></tr><tr><td align="left">5</td><td align="left">replace(int start, int end, String str) 使用给定 String 中的字符替换此序列的子字符串中的字符。</td></tr></tbody></table><p>下面的列表中的方法和 String 类的方法类似：</p><table><thead><tr><th align="left">序号</th><th align="left">方法描述</th></tr></thead><tbody><tr><td align="left">1</td><td align="left">int capacity() 返回当前容量。</td></tr><tr><td align="left">2</td><td align="left">char charAt(int index) 返回此序列中指定索引处的 char 值。</td></tr><tr><td align="left">3</td><td align="left">void ensureCapacity(int minimumCapacity) 确保容量至少等于指定的最小值。</td></tr><tr><td align="left">4</td><td align="left">void getChars(int srcBegin, int srcEnd, char[] dst, int dstBegin) 将字符从此序列复制到目标字符数组 dst。</td></tr><tr><td align="left">5</td><td align="left">int indexOf(String str) 返回第一次出现的指定子字符串在该字符串中的索引。</td></tr><tr><td align="left">6</td><td align="left">int indexOf(String str, int fromIndex) 从指定的索引处开始，返回第一次出现的指定子字符串在该字符串中的索引。</td></tr><tr><td align="left">7</td><td align="left">int lastIndexOf(String str) 返回最右边出现的指定子字符串在此字符串中的索引。</td></tr><tr><td align="left">8</td><td align="left">int lastIndexOf(String str, int fromIndex) 返回 String 对象中子字符串最后出现的位置。</td></tr><tr><td align="left">9</td><td align="left">int length()  返回长度（字符数）。</td></tr><tr><td align="left">10</td><td align="left">void setCharAt(int index, char ch) 将给定索引处的字符设置为 ch。</td></tr><tr><td align="left">11</td><td align="left">void setLength(int newLength) 设置字符序列的长度。</td></tr><tr><td align="left">12</td><td align="left">CharSequence subSequence(int start, int end) 返回一个新的字符序列，该字符序列是此序列的子序列。</td></tr><tr><td align="left">13</td><td align="left">String substring(int start) 返回一个新的 String，它包含此字符序列当前所包含的字符子序列。</td></tr><tr><td align="left">14</td><td align="left">String substring(int start, int end) 返回一个新的 String，它包含此序列当前所包含的字符子序列。</td></tr><tr><td align="left">15</td><td align="left">String toString() 返回此序列中数据的字符串表示形式。</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java Number &amp; Math 类</title>
      <link href="2019/04/09/Java-Number-Math-%E7%B1%BB/"/>
      <url>2019/04/09/Java-Number-Math-%E7%B1%BB/</url>
      
        <content type="html"><![CDATA[<h1 id="Number-amp-Math-类"><a href="#Number-amp-Math-类" class="headerlink" title="Number &amp; Math 类"></a>Number &amp; Math 类</h1><h2 id="Number-类"><a href="#Number-类" class="headerlink" title="Number 类"></a>Number 类</h2><p>一般而言，当需要使用数字的时候，我们通常使用内置数据类型，如：byte、int、long、double 等。</p><p>但是，在实际开发中，我们经常遇到需要使用对象，而不是内置数据类型的情形。为了解决这个问题，Java 提供了每一个内置数据类型的对应的包装类。</p><p>所有的包装类（Integer 、 Long 、 Byte 、 Double 、 Float 、 Short）都是抽象类 Number 的子类。</p><img src=https://gitee.com/gek7777/cdn.io/raw/master/image/20190409-1.png ><p>这种由编译器特别支持的包装称为装箱，所以当内置数据类型被当做对象使用的时候，编译器会把内置类型装箱为包装类。相似的，编译器也可以把一个对象拆箱为内置类型。Number 类属于 java.lang 包</p><a id="more"></a><p>下面是一个实例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        Integer x = <span class="number">5</span>;</span><br><span class="line">        x = x + <span class="number">10</span>;</span><br><span class="line">    System.out.pritln(x);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//结果是：15</span></span><br></pre></td></tr></table></figure><p>当 x 被赋值为整形值时，由于 x 是一个对象，所以编译器要对 x 进行装箱。然后，为了使 x 能进行加运算，所以要对 x 进行拆箱。</p><h2 id="Math-类"><a href="#Math-类" class="headerlink" title="Math 类"></a>Math 类</h2><p>Java 的 Math 包含了用于执行基本数学运算的属性和方法，如初等指数，对数，平方根和三角函数。</p><p>Math 的方法都被定义为 static 形式，通过 math 类可以在主函数中直接调用。</p><p>例子：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;  </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span> <span class="params">(String []args)</span>  </span></span><br><span class="line"><span class="function">    </span>&#123;  </span><br><span class="line">        System.out.println(<span class="string">&quot;90 度的正弦值：&quot;</span> + Math.sin(Math.PI/<span class="number">2</span>));  </span><br><span class="line">        System.out.println(<span class="string">&quot;0度的余弦值：&quot;</span> + Math.cos(<span class="number">0</span>));  </span><br><span class="line">        System.out.println(<span class="string">&quot;60度的正切值：&quot;</span> + Math.tan(Math.PI/<span class="number">3</span>));  </span><br><span class="line">        System.out.println(<span class="string">&quot;1的反正切值： &quot;</span> + Math.atan(<span class="number">1</span>));  </span><br><span class="line">        System.out.println(<span class="string">&quot;π/2的角度值：&quot;</span> + Math.toDegrees(Math.PI/<span class="number">2</span>));  </span><br><span class="line">        System.out.println(Math.PI);  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*结果：</span></span><br><span class="line"><span class="comment">90 度的正弦值：1.0</span></span><br><span class="line"><span class="comment">    0度的余弦值：1.0</span></span><br><span class="line"><span class="comment">    60度的正切值：1.7320508075688767</span></span><br><span class="line"><span class="comment">    1的反正切值： 0.7853981633974483</span></span><br><span class="line"><span class="comment">    π/2的角度值：90.0</span></span><br><span class="line"><span class="comment">    3.141592653589793</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h2 id="Number-amp-Math-类方法"><a href="#Number-amp-Math-类方法" class="headerlink" title="Number &amp; Math 类方法"></a>Number &amp; Math 类方法</h2><p>下面是一些Number &amp; Math 常用的一些方法：</p><table><thead><tr><th>序号</th><th>方法与描述</th></tr></thead><tbody><tr><td>1</td><td><a href="http://www.runoob.com/java/number-xxxvalue.html">xxxValue()</a> 将 Number 对象转换为xxx数据类型的值并返回。</td></tr><tr><td>2</td><td><a href="http://www.runoob.com/java/number-compareto.html">compareTo()</a> 将number对象与参数比较。</td></tr><tr><td>3</td><td><a href="http://www.runoob.com/java/number-equals.html">equals()</a> 判断number对象是否与参数相等。</td></tr><tr><td>4</td><td><a href="http://www.runoob.com/java/number-valueof.html">valueOf()</a> 返回一个 Number 对象指定的内置数据类型</td></tr><tr><td>5</td><td><a href="http://www.runoob.com/java/number-tostring.html">toString()</a> 以字符串形式返回值。</td></tr><tr><td>6</td><td><a href="http://www.runoob.com/java/number-parseInt.html">parseInt()</a> 将字符串解析为int类型。</td></tr><tr><td>7</td><td><a href="http://www.runoob.com/java/number-abs.html">abs()</a> 返回参数的绝对值。</td></tr><tr><td>8</td><td><a href="http://www.runoob.com/java/number-ceil.html">ceil()</a> 返回大于等于( &gt;= )给定参数的的最小整数，类型为双精度浮点型。</td></tr><tr><td>9</td><td><a href="http://www.runoob.com/java/number-floor.html">floor()</a> 返回小于等于（&lt;=）给定参数的最大整数 。</td></tr><tr><td>10</td><td><a href="http://www.runoob.com/java/number-rint.html">rint()</a> 返回与参数最接近的整数。返回类型为double。</td></tr><tr><td>11</td><td><a href="http://www.runoob.com/java/number-round.html">round()</a> 它表示<strong>四舍五入</strong>，算法为 **Math.floor(x+0.5)**，即将原来的数字加上 0.5 后再向下取整，所以，Math.round(11.5) 的结果为12，Math.round(-11.5) 的结果为-11。</td></tr><tr><td>12</td><td><a href="http://www.runoob.com/java/number-min.html">min()</a> 返回两个参数中的最小值。</td></tr><tr><td>13</td><td><a href="http://www.runoob.com/java/number-max.html">max()</a> 返回两个参数中的最大值。</td></tr><tr><td>14</td><td><a href="http://www.runoob.com/java/number-exp.html">exp()</a> 返回自然数底数e的参数次方。</td></tr><tr><td>15</td><td><a href="http://www.runoob.com/java/number-log.html">log()</a> 返回参数的自然数底数的对数值。</td></tr><tr><td>16</td><td><a href="http://www.runoob.com/java/number-pow.html">pow()</a> 返回第一个参数的第二个参数次方。</td></tr><tr><td>17</td><td><a href="http://www.runoob.com/java/number-sqrt.html">sqrt()</a> 求参数的算术平方根。</td></tr><tr><td>18</td><td><a href="http://www.runoob.com/java/number-sin.html">sin()</a> 求指定double类型参数的正弦值。</td></tr><tr><td>19</td><td><a href="http://www.runoob.com/java/number-cos.html">cos()</a> 求指定double类型参数的余弦值。</td></tr><tr><td>20</td><td><a href="http://www.runoob.com/java/number-tan.html">tan()</a> 求指定double类型参数的正切值。</td></tr><tr><td>21</td><td><a href="http://www.runoob.com/java/number-asin.html">asin()</a> 求指定double类型参数的反正弦值。</td></tr><tr><td>22</td><td><a href="http://www.runoob.com/java/number-acos.html">acos()</a> 求指定double类型参数的反余弦值。</td></tr><tr><td>23</td><td><a href="http://www.runoob.com/java/number-atan.html">atan()</a> 求指定double类型参数的反正切值。</td></tr><tr><td>24</td><td><a href="http://www.runoob.com/java/number-atan2.html">atan2()</a> 将笛卡尔坐标转换为极坐标，并返回极坐标的角度值。</td></tr><tr><td>25</td><td><a href="http://www.runoob.com/java/number-todegrees.html">toDegrees()</a> 将参数转化为角度。</td></tr><tr><td>26</td><td><a href="http://www.runoob.com/java/number-toradians.html">toRadians()</a> 将角度转换为弧度。</td></tr><tr><td>27</td><td><a href="http://www.runoob.com/java/number-random.html">random()</a> 返回一个随机数。</td></tr></tbody></table><h3 id="Math-的-floor-，-round-和-ceil-方法实例比较"><a href="#Math-的-floor-，-round-和-ceil-方法实例比较" class="headerlink" title="Math 的 floor ， round 和 ceil 方法实例比较"></a>Math 的 floor ， round 和 ceil 方法实例比较</h3><table><thead><tr><th align="left">参数</th><th align="left">Math.floor</th><th align="left">Math.round</th><th align="left">Math.ceil</th></tr></thead><tbody><tr><td align="left">1.4</td><td align="left">1</td><td align="left">1</td><td align="left">2</td></tr><tr><td align="left">1.5</td><td align="left">1</td><td align="left">2</td><td align="left">2</td></tr><tr><td align="left">1.6</td><td align="left">1</td><td align="left">2</td><td align="left">2</td></tr><tr><td align="left">-1.4</td><td align="left">-2</td><td align="left">-1</td><td align="left">-1</td></tr><tr><td align="left">-1.5</td><td align="left">-2</td><td align="left">-1</td><td align="left">-1</td></tr><tr><td align="left">-1.6</td><td align="left">-2</td><td align="left">-2</td><td align="left">-1</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java-循环结构、条件判断和选择</title>
      <link href="2019/04/09/Java-%E5%BE%AA%E7%8E%AF%E7%BB%93%E6%9E%84%E3%80%81%E6%9D%A1%E4%BB%B6%E5%88%A4%E6%96%AD%E5%92%8C%E9%80%89%E6%8B%A9/"/>
      <url>2019/04/09/Java-%E5%BE%AA%E7%8E%AF%E7%BB%93%E6%9E%84%E3%80%81%E6%9D%A1%E4%BB%B6%E5%88%A4%E6%96%AD%E5%92%8C%E9%80%89%E6%8B%A9/</url>
      
        <content type="html"><![CDATA[<h1 id="Java-循环结构"><a href="#Java-循环结构" class="headerlink" title="Java 循环结构"></a>Java 循环结构</h1><p>顺序结构的程序语句只能被执行一次。如果你想要同样的操作执行多次，就需要使用循环结构。</p><p>Java 中有三种主要的循环结构：</p><ul><li>while 循环</li><li>do…while 循环</li><li>for 循环</li></ul><a id="more"></a><p>在Java 5 中，引入了用于数组的增强型 for 循环。</p><h2 id="while-循环"><a href="#while-循环" class="headerlink" title="while 循环"></a>while 循环</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> (布尔表达式)&#123;</span><br><span class="line">    <span class="comment">//循环体</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="do…while-循环"><a href="#do…while-循环" class="headerlink" title="do…while 循环"></a>do…while 循环</h2><p>对于 while 语句来说，如果不满足条件，则不能进入循环。不过即使不满足条件，也至少执行一次。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">do</span>&#123;</span><br><span class="line">    <span class="comment">//语句块</span></span><br><span class="line">&#125; <span class="keyword">while</span>(布尔表达式);</span><br></pre></td></tr></table></figure><p><strong>注意：</strong>布尔表达式在循环体的后面，所以语句块在检测布尔表达式之前已经执行了。如果布尔表达式的值为 true，则语句块一直执行，知道布尔表达式的值为 false。</p><h2 id="for-循环"><a href="#for-循环" class="headerlink" title="for 循环"></a>for 循环</h2><p>虽然所有循环结构都可以用while 和 do while 表示，但是 Java 提供了另一种语句——for 循环，使一些循环结构变得更加简单。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(初始化; 布尔表达式; 更新) &#123;</span><br><span class="line">    <span class="comment">//代码语句</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>关于 for 循环有以下几点说明：</p><ul><li>最先执行初始化步骤。可以声明一种类型，但可初始化一个或多个循环控制变量，也可以使空语句。</li><li>然后，检测布尔表达式的值。如果为 true ，循环体被执行。如果为 false ，循环终止，并开始执行循环体后面的语句。</li><li>执行以下循环后，更新循环控制变量。</li><li>再次检测布尔表达式。循环执行上面的过程。        </li></ul><h3 id="增强-for-循环"><a href="#增强-for-循环" class="headerlink" title="增强 for 循环"></a>增强 for 循环</h3><p>Java 5 中新引入的，语法格式如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(声明语句 : 表达式) &#123;</span><br><span class="line">    <span class="comment">//代码句子</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>声明语句</strong>：声明新的局部变量，该变量的类型必须和数组元素的类型匹配。其作用域限定在循环语句块，其值与此时数组元素的值相等。</p><p><strong>表达式</strong>：表达式是要访问的数组名，或者是返回值为数组的方法。</p><h2 id="break-关键字"><a href="#break-关键字" class="headerlink" title="break 关键字"></a>break 关键字</h2><p>break 主要用在循环语句或者switch 语句中，用来跳出整个语句块。</p><p>break 跳出最里层的循环，并且继续执行该循环下面的语句。</p><h2 id="continue-关键字"><a href="#continue-关键字" class="headerlink" title="continue 关键字"></a>continue 关键字</h2><p>continue 适用于任何循环控制结构中。作用是让程序立刻跳转到下一次循环的迭代。</p><p>在 for 循环中，continue 语句使程序立刻跳转到更新语句。</p><p>在 while 或 do…while 循环中，程序立即跳转到布尔表达式的判断语句。</p><h1 id="条件判断"><a href="#条件判断" class="headerlink" title="条件判断"></a>条件判断</h1><h2 id="if-…-else语句"><a href="#if-…-else语句" class="headerlink" title="if … else语句"></a>if … else语句</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (布尔表达式) &#123;</span><br><span class="line">    <span class="comment">//语句体</span></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="if-…-else-if语句"><a href="#if-…-else-if语句" class="headerlink" title="if … else if语句"></a>if … else if语句</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (布尔表达式<span class="number">1</span>) &#123;</span><br><span class="line">    <span class="comment">//语句体</span></span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (布尔表达式<span class="number">2</span>) &#123;</span><br><span class="line">    <span class="comment">//语句体</span></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="comment">//语句体</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="嵌套的-if-else-语句"><a href="#嵌套的-if-else-语句" class="headerlink" title="嵌套的 if else 语句"></a>嵌套的 if else 语句</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (布尔表达式<span class="number">1</span>) &#123;</span><br><span class="line">    <span class="comment">//如果表达式1为true</span></span><br><span class="line">    <span class="keyword">if</span> (布尔表达式<span class="number">2</span>) &#123;</span><br><span class="line">        <span class="comment">//如果表达式2为true</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="switch-case-语句"><a href="#switch-case-语句" class="headerlink" title="switch case 语句"></a>switch case 语句</h1><p>switch case 语句判断一个变量与一系列值中的某个值相等，每个值称为一个分支。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">switch</span>(expression)&#123;</span><br><span class="line">    <span class="keyword">case</span> value :</span><br><span class="line">       <span class="comment">//语句</span></span><br><span class="line">       <span class="keyword">break</span>; <span class="comment">//可选</span></span><br><span class="line">    <span class="keyword">case</span> value :</span><br><span class="line">       <span class="comment">//语句</span></span><br><span class="line">       <span class="keyword">break</span>; <span class="comment">//可选</span></span><br><span class="line">    <span class="comment">//你可以有任意数量的case语句</span></span><br><span class="line">    <span class="keyword">default</span> : <span class="comment">//可选</span></span><br><span class="line">       <span class="comment">//语句</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>switch case 的规则：</p><ul><li>switch 语句中的变量类型可以是：byte 、short、int 或者 char。Java 7开始支持字符串String类型了，同时case 标签必须为字符创常量或字面量。</li><li>switch 语句可以拥有多个case 语句。每个case 语句后面跟一个要比较的值和冒号。</li><li>case 语句中的值的数据类型必须与变量的数据类型相同，而且只能是常量或者字面常量。</li><li>当变量的值与 case 语句的值相等时，那么 case 语句之后的语句开始执行，直到break 语句出现才会跳出 switch 语句。</li><li>遇到 break 语句时， switch 语句终止。程序跳转到switch 语句后面的语句执行。case 中不包含break 的话，程序会继续执行下一条 case 语句，直到break 语句。</li><li>switch 语句可以包含一个 default 分支，该分支一般是 switch 语句的最后一个分支。default 可以在任何位置，不过建议在最后。只有在case 语句的值和变量值都不相等时，才会执行default 语句。default 语句不需要break 语句。</li></ul><p><strong>switch case 执行时，一定会先进行匹配，匹配成功返回当前 case 的值，再根据是否有 break，判断是否继续输出，或是跳出判断。</strong></p>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java-运算符</title>
      <link href="2019/04/09/Java-%E8%BF%90%E7%AE%97%E7%AC%A6/"/>
      <url>2019/04/09/Java-%E8%BF%90%E7%AE%97%E7%AC%A6/</url>
      
        <content type="html"><![CDATA[<h1 id="Java-运算符"><a href="#Java-运算符" class="headerlink" title="Java 运算符"></a>Java 运算符</h1><p>计算机的最基本用途之一就是执行数学运算，Java提供了一套丰富的运算符来操作变量。</p><ul><li>算术运算符</li><li>关系运算符</li><li>位运算符</li><li>逻辑运算符</li><li>赋值运算符</li><li>其他运算符</li></ul><a id="more"></a><h2 id="算术运算符"><a href="#算术运算符" class="headerlink" title="算术运算符"></a>算术运算符</h2><table><thead><tr><th align="left">操作符</th><th align="left">描述</th><th align="left">例子</th></tr></thead><tbody><tr><td align="left">+</td><td align="left">加法 - 相加运算符两侧的值</td><td align="left">A + B 等于 30</td></tr><tr><td align="left">-</td><td align="left">减法 - 左操作数减去右操作数</td><td align="left">A – B 等于 -10</td></tr><tr><td align="left">*</td><td align="left">乘法 - 相乘操作符两侧的值</td><td align="left">A * B等于200</td></tr><tr><td align="left">/</td><td align="left">除法 - 左操作数除以右操作数</td><td align="left">B / A等于2</td></tr><tr><td align="left">％</td><td align="left">取余 - 左操作数除以右操作数的余数</td><td align="left">B%A等于0</td></tr><tr><td align="left">++</td><td align="left">自增: 操作数的值增加1</td><td align="left">B++ 或 ++B 等于 21（区别详见下文）</td></tr><tr><td align="left">–</td><td align="left">自减: 操作数的值减少1</td><td align="left">B– 或 –B 等于 19（区别详见下文）</td></tr></tbody></table><p><strong>注意：</strong>自增和自减在前与在后不同，在前表示先运算再用，在后表示先用再运算。</p><h2 id="关系运算符"><a href="#关系运算符" class="headerlink" title="关系运算符"></a>关系运算符</h2><table><thead><tr><th align="left">运算符</th><th align="left">描述</th><th align="left">例子 A=10,B=20</th></tr></thead><tbody><tr><td align="left">==</td><td align="left">检查如果两个操作数的值是否相等，如果相等则条件为真。</td><td align="left">（A == B）为假。</td></tr><tr><td align="left">!=</td><td align="left">检查如果两个操作数的值是否相等，如果值不相等则条件为真。</td><td align="left">(A != B) 为真。</td></tr><tr><td align="left">&gt;</td><td align="left">检查左操作数的值是否大于右操作数的值，如果是那么条件为真。</td><td align="left">（A&gt; B）为假。</td></tr><tr><td align="left">&lt;</td><td align="left">检查左操作数的值是否小于右操作数的值，如果是那么条件为真。</td><td align="left">（A &lt;B）为真。</td></tr><tr><td align="left">&gt;=</td><td align="left">检查左操作数的值是否大于或等于右操作数的值，如果是那么条件为真。</td><td align="left">（A&gt; = B）为假。</td></tr><tr><td align="left">&lt;=</td><td align="left">检查左操作数的值是否小于或等于右操作数的值，如果是那么条件为真。</td><td align="left">（A &lt;= B）为真。</td></tr></tbody></table><h2 id="位运算符"><a href="#位运算符" class="headerlink" title="位运算符"></a>位运算符</h2><p>一般用于整数类型（int），长整型（long），短整型（short），字符型（char）和字节型（byte）等类型。</p><table><thead><tr><th align="left">操作符</th><th align="left">描述</th><th align="left">例子 A = 60,B=13</th></tr></thead><tbody><tr><td align="left">＆</td><td align="left">如果相对应位都是1，则结果为1，否则为0</td><td align="left">（A＆B），得到12，即0000 1100</td></tr><tr><td align="left">&#124;</td><td align="left">如果相对应位都是0，则结果为0，否则为1</td><td align="left">（A &#124;B）得到61，即 0011 1101</td></tr><tr><td align="left">^异或</td><td align="left">如果相对应位值相同，则结果为0，否则为1</td><td align="left">（A ^ B）得到49，即 0011 0001</td></tr><tr><td align="left">〜</td><td align="left">按位取反运算符翻转操作数的每一位，即0变成1，1变成0。</td><td align="left">（〜A）得到-61，即1100 0011</td></tr><tr><td align="left">&lt;&lt;</td><td align="left">按位左移运算符。左操作数按位左移右操作数指定的位数。</td><td align="left">A &lt;&lt; 2得到240，即 1111 0000</td></tr><tr><td align="left">&gt;&gt;</td><td align="left">按位右移运算符。左操作数按位右移右操作数指定的位数。</td><td align="left">A &gt;&gt; 2得到15即 1111</td></tr><tr><td align="left">&gt;&gt;&gt;</td><td align="left">按位右移补零操作符。左操作数的值按右操作数指定的位数右移，移动得到的空位以零填充。</td><td align="left">A&gt;&gt;&gt;2得到15即0000 1111</td></tr></tbody></table><h2 id="逻辑运算符"><a href="#逻辑运算符" class="headerlink" title="逻辑运算符"></a>逻辑运算符</h2><table><thead><tr><th align="left">操作符</th><th align="left">描述</th><th align="left">例子A为真，B为假</th></tr></thead><tbody><tr><td align="left">&amp;&amp;</td><td align="left">称为逻辑与运算符。当且仅当两个操作数都为真，条件才为真。</td><td align="left">（A &amp;&amp; B）为假。</td></tr><tr><td align="left">&#124;&#124;</td><td align="left">称为逻辑或操作符。如果任何两个操作数任何一个为真，条件为真。</td><td align="left">（A &#124;&#124;B）为真。</td></tr><tr><td align="left">！</td><td align="left">称为逻辑非运算符。用来反转操作数的逻辑状态。如果条件为true，则逻辑非运算符将得到false。</td><td align="left">！（A &amp;&amp; B）为真。</td></tr></tbody></table><h3 id="短路逻辑运算符"><a href="#短路逻辑运算符" class="headerlink" title="短路逻辑运算符"></a>短路逻辑运算符</h3><p>当使用与逻辑运算符时，在&amp;&amp;两端都为 true 时，为 true，当左边为 false 时，不需要判断右边，即短路。</p><p>当使用或逻辑运算符时，在 | | 两端有一个为true时，为 true，当左边为 true 时，不需要判断右边。</p><h2 id="赋值运算符"><a href="#赋值运算符" class="headerlink" title="赋值运算符"></a>赋值运算符</h2><table><thead><tr><th align="left">操作符</th><th align="left">描述</th><th align="left">例子</th></tr></thead><tbody><tr><td align="left">=</td><td align="left">简单的赋值运算符，将右操作数的值赋给左侧操作数</td><td align="left">C = A + B将把A + B得到的值赋给C</td></tr><tr><td align="left">+ =</td><td align="left">加和赋值操作符，它把左操作数和右操作数相加赋值给左操作数</td><td align="left">C + = A等价于C = C + A</td></tr><tr><td align="left">- =</td><td align="left">减和赋值操作符，它把左操作数和右操作数相减赋值给左操作数</td><td align="left">C - = A等价于C = C -  A</td></tr><tr><td align="left">* =</td><td align="left">乘和赋值操作符，它把左操作数和右操作数相乘赋值给左操作数</td><td align="left">C * = A等价于C = C * A</td></tr><tr><td align="left">/ =</td><td align="left">除和赋值操作符，它把左操作数和右操作数相除赋值给左操作数</td><td align="left">C / = A等价于C = C / A</td></tr><tr><td align="left">（％）=</td><td align="left">取模和赋值操作符，它把左操作数和右操作数取模后赋值给左操作数</td><td align="left">C％= A等价于C = C％A</td></tr><tr><td align="left">&lt;&lt; =</td><td align="left">左移位赋值运算符</td><td align="left">C &lt;&lt; = 2等价于C = C &lt;&lt; 2</td></tr><tr><td align="left">&gt;&gt; =</td><td align="left">右移位赋值运算符</td><td align="left">C &gt;&gt; = 2等价于C = C &gt;&gt; 2</td></tr><tr><td align="left">＆=</td><td align="left">按位与赋值运算符</td><td align="left">C＆= 2等价于C = C＆2</td></tr><tr><td align="left">^ =</td><td align="left">按位异或赋值操作符</td><td align="left">C ^ = 2等价于C = C ^ 2</td></tr><tr><td align="left">&#124; =</td><td align="left">按位或赋值操作符</td><td align="left">C &#124; = 2等价于C = C &#124;2</td></tr></tbody></table><h2 id="条件运算符（-）"><a href="#条件运算符（-）" class="headerlink" title="条件运算符（?:）"></a>条件运算符（?:）</h2><p>条件运算符也称为三元运算符。该运算符有3个操作数，并且需要判断布尔表达式的值。该运算符主要是决定赋哪个值给变量</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">variable x = (expression) ? value <span class="keyword">if</span> <span class="keyword">true</span> : value <span class="keyword">if</span> <span class="keyword">false</span></span><br></pre></td></tr></table></figure><h2 id="instanceof-运算符"><a href="#instanceof-运算符" class="headerlink" title="instanceof  运算符"></a>instanceof  运算符</h2><p>该运算用于操作对象实例，检查该对象是否是一个特定类型（类类型或接口类型）。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">( Object reference variable ) <span class="keyword">instanceof</span>  (<span class="class"><span class="keyword">class</span>/<span class="title">interface</span> <span class="title">type</span>)</span></span><br></pre></td></tr></table></figure><h1 id="Java-运算符优先级"><a href="#Java-运算符优先级" class="headerlink" title="Java 运算符优先级"></a>Java 运算符优先级</h1><p>当多个运算符出现在一个表达式中，谁先谁后就设计到了运算符的优先级别的问题。</p><table><thead><tr><th align="left">类别</th><th align="left">操作符</th><th align="left">关联性</th></tr></thead><tbody><tr><td align="left">后缀</td><td align="left">() [] . (点操作符)</td><td align="left">左到右</td></tr><tr><td align="left">一元</td><td align="left">+ + - ！〜</td><td align="left">从右到左</td></tr><tr><td align="left">乘性</td><td align="left">* /％</td><td align="left">左到右</td></tr><tr><td align="left">加性</td><td align="left">+ -</td><td align="left">左到右</td></tr><tr><td align="left">移位</td><td align="left">&gt;&gt; &gt;&gt;&gt;  &lt;&lt;</td><td align="left">左到右</td></tr><tr><td align="left">关系</td><td align="left">&gt;&gt; = &lt;&lt; =</td><td align="left">左到右</td></tr><tr><td align="left">相等</td><td align="left">==  !=</td><td align="left">左到右</td></tr><tr><td align="left">按位与</td><td align="left">＆</td><td align="left">左到右</td></tr><tr><td align="left">按位异或</td><td align="left">^</td><td align="left">左到右</td></tr><tr><td align="left">按位或</td><td align="left">&#124;</td><td align="left">左到右</td></tr><tr><td align="left">逻辑与</td><td align="left">&amp;&amp;</td><td align="left">左到右</td></tr><tr><td align="left">逻辑或</td><td align="left">&#124;&#124;</td><td align="left">左到右</td></tr><tr><td align="left">条件</td><td align="left">？：</td><td align="left">从右到左</td></tr><tr><td align="left">赋值</td><td align="left">= + = - = * = / =％= &gt;&gt; = &lt;&lt; =＆= ^ = &#124;=</td><td align="left">从右到左</td></tr><tr><td align="left">逗号</td><td align="left">，</td><td align="left">左到右</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java protected 关键字详解</title>
      <link href="2019/04/08/Java-protected-%E5%85%B3%E9%94%AE%E5%AD%97%E8%AF%A6%E8%A7%A3/"/>
      <url>2019/04/08/Java-protected-%E5%85%B3%E9%94%AE%E5%AD%97%E8%AF%A6%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<p> 大部分书中都会说到<strong>被 protected 修饰的成员对于本包和其子类可见</strong>。protected 的可见性在于以下两点：</p><ul><li>基类的 protected 成员是包内可见的，并且对子类可见；</li><li>若子类与基类不在同一个包中，那么在子类中，子类实例可以访问其从基类继承而来的 protected 方法，而不可访问基类实例的 protected 方法。</li></ul><a id="more"></a><p>在碰到涉及 protected 成员的调用时，首先要确定出该 protected 成员来自何方，其可见性范围是什么，然后就可以判断出当前用法是否可行了，看下面七个例子：</p><h2 id="实例-1"><a href="#实例-1" class="headerlink" title="实例 1"></a>实例 1</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> p1;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Father1</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">f</span><span class="params">()</span> </span>&#123;&#125;    <span class="comment">// 父类Father1中的protected方法</span></span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">package</span> p1;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Son1</span> <span class="keyword">extends</span> <span class="title">Father1</span> </span>&#123;&#125;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">package</span> p11;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Son11</span> <span class="keyword">extends</span> <span class="title">Father1</span></span>&#123;&#125;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">package</span> p1;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test1</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Son1 son1 = <span class="keyword">new</span> Son1();</span><br><span class="line">        son1.f(); <span class="comment">// Compile OK     ----（1）</span></span><br><span class="line">        son1.clone(); <span class="comment">// Compile Error     ----（2）</span></span><br><span class="line"> </span><br><span class="line">        Son11 son = <span class="keyword">new</span> Son11();    </span><br><span class="line">        son11.f(); <span class="comment">// Compile OK     ----（3）</span></span><br><span class="line">        son11.clone(); <span class="comment">// Compile Error     ----（4）</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结果分析：</p><p>​    对于上面的示例，首先看(1)(3)，其中的f()方法从类Father1继承而来，其可见性是包p1及其子类Son1和Son11，而由于调用f()方法的类Test1所在的包也是p1，因此（1）(3)处编译通过。其次看(2)(4)，其中的clone()方法的可见性是java.lang包及其所有子类，对于语句”son1.clone();”和”son11.clone();”，二者的clone()在类Son1、Son11中是可见的，但对Test1是不可见的，因此（2）(4)处编译不通过。</p><h2 id="实例-2"><a href="#实例-2" class="headerlink" title="实例 2"></a>实例 2</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> p2;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyObject2</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">protected</span> Object <span class="title">clone</span><span class="params">()</span> <span class="keyword">throws</span> CloneNotSupportedException</span>&#123;</span><br><span class="line">       <span class="keyword">return</span> <span class="keyword">super</span>.clone();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">package</span> p22;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test2</span> <span class="keyword">extends</span> <span class="title">MyObject2</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String args[])</span> </span>&#123;</span><br><span class="line">       MyObject2 obj = <span class="keyword">new</span> MyObject2();</span><br><span class="line">       obj.clone(); <span class="comment">// Compile Error         ----（1）</span></span><br><span class="line"> </span><br><span class="line">       Test2 tobj = <span class="keyword">new</span> Test2();</span><br><span class="line">       tobj.clone(); <span class="comment">// Complie OK         ----（2）</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结果分析：</p><p>​    对于(1)而言，clone()方法来自于类MyObject2本身，因此其可见性为包p2及MyObject2的子类，虽然Test2是MyObject2的子类，但在Test2中不能访问基类MyObject2的protected方法clone()，因此编译不通过;对于(2)而言，由于在Test2中访问的是其本身实例的从基类MyObject2继承来的的clone()，因此编译通过。</p><h2 id="实例-3"><a href="#实例-3" class="headerlink" title="实例 3"></a>实例 3</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> p3;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyObject3</span> <span class="keyword">extends</span> <span class="title">Test3</span> </span>&#123;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">package</span> p33;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test3</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String args[])</span> </span>&#123;</span><br><span class="line">    MyObject3 obj = <span class="keyword">new</span> MyObject3();</span><br><span class="line">    obj.clone();   <span class="comment">// Compile OK     ------（1）</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结果分析：</p><p>​    对于(1)而言，clone()方法来自于类Test3，因此其可见性为包p33及其子类MyObject3，而（1）正是在p33的类Test3中调用，属于同一包，编译通过。</p><h2 id="实例-4"><a href="#实例-4" class="headerlink" title="实例 4"></a>实例 4</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> p4;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyObject4</span> <span class="keyword">extends</span> <span class="title">Test4</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">protected</span> Object <span class="title">clone</span><span class="params">()</span> <span class="keyword">throws</span> CloneNotSupportedException </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">super</span>.clone();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">package</span> p44;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test4</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String args[])</span> </span>&#123;</span><br><span class="line">    MyObject4 obj = <span class="keyword">new</span> MyObject4();</span><br><span class="line">    obj.clone(); <span class="comment">// Compile Error      -----（1）</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结果分析：</p><p>​    对于(1)而言，clone()方法来自于类MyObject4，因此其可见性为包p4及其子类(此处没有子类)，而类Test4却在包p44中，因此不满足可见性，编译不通过。</p><h2 id="实例-5"><a href="#实例-5" class="headerlink" title="实例 5"></a>实例 5</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> p5;</span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyObject5</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">protected</span> Object <span class="title">clone</span><span class="params">()</span> <span class="keyword">throws</span> CloneNotSupportedException</span>&#123;</span><br><span class="line">       <span class="keyword">return</span> <span class="keyword">super</span>.clone();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test5</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> CloneNotSupportedException </span>&#123;</span><br><span class="line">       MyObject5 obj = <span class="keyword">new</span> MyObject5();</span><br><span class="line">       obj.clone(); <span class="comment">// Compile OK        ----(1)</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结果分析：</p><p>​    对于(1)而言，clone()方法来自于类MyObject5，因此其可见性为包p5及其子类(此处没有子类)，而类Test5也在包p5中，因此满足可见性，编译通过。</p><h2 id="实例-6"><a href="#实例-6" class="headerlink" title="实例 6"></a>实例 6</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> p6;</span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyObject6</span> <span class="keyword">extends</span> <span class="title">Test6</span></span>&#123;&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test6</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    MyObject6 obj = <span class="keyword">new</span> MyObject6();</span><br><span class="line">    obj.clone();        <span class="comment">// Compile OK   -------（1）</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结果分析：</p><p>对于(1)而言，clone()方法来自于类Test6，因此其可见性为包p6及其子类MyObject6，而类Test6也在包p6中，因此满足可见性，编译通过。</p><h2 id="实例-7"><a href="#实例-7" class="headerlink" title="实例 7"></a>实例 7</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> p7;</span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyObject7</span> <span class="keyword">extends</span> <span class="title">Test7</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Test7 test = <span class="keyword">new</span> Test7();</span><br><span class="line">        test.clone(); <span class="comment">// Compile Error   ----- (1)</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test7</span> </span>&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结果分析：</p><p>​    对于(1)而言，clone()方法来自于类Object，因此该clone()方法可见性为包java.lang及其子类Test7，由于类MyObject7不在此范围内，因此不满足可见性，编译不通过。</p>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java-修饰符</title>
      <link href="2019/04/08/Java-%E4%BF%AE%E9%A5%B0%E7%AC%A6/"/>
      <url>2019/04/08/Java-%E4%BF%AE%E9%A5%B0%E7%AC%A6/</url>
      
        <content type="html"><![CDATA[<h1 id="Java-修饰符"><a href="#Java-修饰符" class="headerlink" title="Java 修饰符"></a>Java 修饰符</h1><p>Java 语言提供了很多修饰符，主要分为以下两类：</p><ul><li>访问修饰符</li><li>非访问修饰符</li></ul><p>修饰符用来定义类、方法或者变量，通常放在语句的最前端。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//实例</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">className</span> </span>&#123;</span><br><span class="line">    <span class="comment">//...</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">boolean</span> myFlag;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">double</span> weeks = <span class="number">9.5</span>;</span><br><span class="line"><span class="keyword">protected</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> BOXWIDTH = <span class="number">42</span>;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    <span class="comment">//方法体</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="访问控制修饰符"><a href="#访问控制修饰符" class="headerlink" title="访问控制修饰符"></a>访问控制修饰符</h2><p>Java 中， 可以使用访问控制符来保护对类、变量、方法和构造方法的访问。Java 支持四种不同的访问权限。</p><ul><li>default （缺省值，什么都不写）：在同一包内可见，不使用任何修饰符。适用对象：类、接口、变量、方法。</li><li>private：在同一类内可见。适用对象：变量、方法。注意：不能修饰类（外部类）。</li><li>public ：对所有类可见。适用对象：类、接口、变量、方法。</li><li>protected：对同一包内的类和所有子类可见。适用对象：变量、方法。注意：不能修饰类（外部类）。</li></ul><table><thead><tr><th align="left">修饰符</th><th align="left">当前类</th><th align="left">同一包内</th><th align="left">子孙类(同一包)</th><th align="left">子孙类(不同包)</th><th align="left">其他包</th></tr></thead><tbody><tr><td align="left"><code>public</code></td><td align="left">Y</td><td align="left">Y</td><td align="left">Y</td><td align="left">Y</td><td align="left">Y</td></tr><tr><td align="left"><code>protected</code></td><td align="left">Y</td><td align="left">Y</td><td align="left">Y</td><td align="left">Y/N（下面有解释）</td><td align="left">N</td></tr><tr><td align="left"><code>default</code></td><td align="left">Y</td><td align="left">Y</td><td align="left">Y</td><td align="left">N</td><td align="left">N</td></tr><tr><td align="left"><code>private</code></td><td align="left">Y</td><td align="left">N</td><td align="left">N</td><td align="left">N</td><td align="left">N</td></tr></tbody></table><h3 id="默认访问修饰符-不是用任何关键字"><a href="#默认访问修饰符-不是用任何关键字" class="headerlink" title="默认访问修饰符-不是用任何关键字"></a>默认访问修饰符-不是用任何关键字</h3><p>使用默认访问修饰符声明的变量和方法，对同一个包内的类是可见的。接口里的变量都隐式声明为：public static final ，而接口里的方法默认情况下访问权限为：public 。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//实例,变量和方法的声明可以不是用任何修饰符。</span></span><br><span class="line">String version = “<span class="number">1.4</span>.<span class="number">1</span>”;</span><br><span class="line"><span class="function"><span class="keyword">boolean</span> <span class="title">processOrder</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="私有访问修饰符-private"><a href="#私有访问修饰符-private" class="headerlink" title="私有访问修饰符-private"></a>私有访问修饰符-private</h3><p>私有访问修饰符是最严格的访问级别，所以被声明为 private 的方法，变量和构造方法只能被所属类访问，并且类和接口不能声明为 private 。</p><p>声明为私有访问类型的变量只能通过类中公共的getter 方法被被外部类访问。</p><p>private 访问修饰符的使用主要用来隐藏类的实现细节和保护类的数据。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//实例</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Logger</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String format;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getFormat</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.format;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">getFormat</span><span class="params">(String format)</span></span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.format = format;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//format为logger 的私有变量，所有其他的类不能直接得到或者设置该变量的值，需要调用该变量的方法操作。</span></span><br></pre></td></tr></table></figure><h3 id="公有访问修饰符-public"><a href="#公有访问修饰符-public" class="headerlink" title="公有访问修饰符 - public"></a>公有访问修饰符 - public</h3><p>被声明为public 的类、方法、构造方法和接口可以被任何其他类访问。</p><p>如果几个相互访问的 public 类分布在不同的包中，则需要导入相应 public 类所在的包。由于类的继承性，类所有的公共方法和变量都能被子类继承。</p><p>注意：Java 中，main()方法必须设置为公有的，否则，Java 解释器将不能运行该类。</p><h3 id="受保护的访问修饰符-protected"><a href="#受保护的访问修饰符-protected" class="headerlink" title="受保护的访问修饰符-protected"></a>受保护的访问修饰符-protected</h3><p>protected 需要从以下两个点来分析说明：</p><ul><li><strong>子类与基类再同一个包中</strong>：被声明为 protected 的变量、方法和构造器能被同一个包中的任何其他类类访问 ；</li><li><strong>子类与基类不在同一个包中：</strong>那么在子类中，子类实例可以访问其他基类继承而来的 protected 方法，而不能访问基类实例的 protected 方法。</li></ul><p>protected 可以修饰数据成员，构造方法，方法成员，不能修饰类（内部类除外）。接口及接口的成员变量和成员方法不能声明为protected 。</p><p>子类能访问 protected 修饰符声明的方法和变量，这样能保护不相干的类使用这些方法和变量。</p><p>下面举例说明：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SuperA</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">boolean</span> <span class="title">openSpeaker</span><span class="params">(Speaker sp)</span></span>&#123;</span><br><span class="line">        <span class="comment">//实现细节1</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SuperB</span> <span class="keyword">extends</span> <span class="title">SuperA</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">boolean</span> <span class="title">openSpeaker</span><span class="params">(Speaker sp)</span></span>&#123;</span><br><span class="line">        <span class="comment">//实现细节2</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结果分析：</p><ul><li>如果把 openSpeaker () 方法声明为 private ，那么除了SuperA 以外的类无法访问该方法。</li><li>如果把 openSpeaker () 方法声明为 public ，那么所有的类都能够访问该方法。</li><li>如果我们只想让该方法对其所在类的子类可见，则将该方法声明为 protected 。<a href="https://gek7777.github.iohub.io/2019/04/08/Java-protected-%E5%85%B3%E9%94%AE%E5%AD%97%E8%AF%A6%E8%A7%A3/"><strong>关于protect 访问修饰符，请看 Java protected 关键字详解。</strong></a></li></ul><h3 id="访问控制和继承"><a href="#访问控制和继承" class="headerlink" title="访问控制和继承"></a>访问控制和继承</h3><p>请注意以下方法继承的规则：</p><ul><li>父类中声明为 public 的方法在子类中也必须为 public 。</li><li>父类中为 protected 的方法在子类中要么声明为 protected ，要么声明为 public ，不能声明为 private。</li><li>父类声明为 private 的方法，不能被继承。</li></ul><h2 id="非访问修饰符"><a href="#非访问修饰符" class="headerlink" title="非访问修饰符"></a>非访问修饰符</h2><ol><li>static 修饰符，用来修饰类方法和类变量。</li><li>final 修饰符，用来修饰类，方法和变量，final 修饰的类不能被继承，修饰的方法不能被继承类重新定义，修饰的变量为常量，是不可修改的。</li><li>abstract 修饰符，用来创建抽象类和抽象方法。</li><li>transient 主要用来将序列化对象中的实例变量不进行持久化。</li><li>synchronized 和 volatile 修饰符，主要用于线程的编程。</li></ol><h3 id="static-修饰符"><a href="#static-修饰符" class="headerlink" title="static 修饰符"></a>static 修饰符</h3><h4 id="静态变量："><a href="#静态变量：" class="headerlink" title="静态变量："></a>静态变量：</h4><p>static 关键字用来声明独立于对象的静态变量，无论一个类实例化多少对象，它的静态变量只有一份拷贝。静态变量也被称为类变量。局部变量不能被声明为 static 变量。</p><h4 id="静态方法："><a href="#静态方法：" class="headerlink" title="静态方法："></a>静态方法：</h4><p>static 关键字用来声明独立于对象的静态方法。静态方法不能使用类的非静态变量。静态方法从参数列表得到数据，然后计算这些数据。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//实例</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">InstanceCounter</span> </span>&#123;</span><br><span class="line">   <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span> numInstances = <span class="number">0</span>;</span><br><span class="line">   <span class="function"><span class="keyword">protected</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">getCount</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> numInstances;</span><br><span class="line">   &#125;</span><br><span class="line"> </span><br><span class="line">   <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">addInstance</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      numInstances++;</span><br><span class="line">   &#125;</span><br><span class="line"> </span><br><span class="line">   InstanceCounter() &#123;</span><br><span class="line">      InstanceCounter.addInstance();</span><br><span class="line">   &#125;</span><br><span class="line"> </span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] arguments)</span> </span>&#123;</span><br><span class="line">      System.out.println(<span class="string">&quot;Starting with &quot;</span> +</span><br><span class="line">      InstanceCounter.getCount() + <span class="string">&quot; instances&quot;</span>);</span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">500</span>; ++i)&#123;</span><br><span class="line">         <span class="keyword">new</span> InstanceCounter();</span><br><span class="line">          &#125;</span><br><span class="line">      System.out.println(<span class="string">&quot;Created &quot;</span> +</span><br><span class="line">      InstanceCounter.getCount() + <span class="string">&quot; instances&quot;</span>);</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//结果：</span></span><br><span class="line">Starting with <span class="number">0</span> instances</span><br><span class="line">Created <span class="number">500</span> instances</span><br></pre></td></tr></table></figure><h3 id="final-修饰符"><a href="#final-修饰符" class="headerlink" title="final 修饰符"></a>final 修饰符</h3><h4 id="final-变量"><a href="#final-变量" class="headerlink" title="final 变量"></a>final 变量</h4><p>final 变量表示最后的、最终的，变量一旦被赋值，便不可修改。并且，必须显示的指定初始值。</p><h4 id="final-方法"><a href="#final-方法" class="headerlink" title="final 方法"></a>final 方法</h4><p>类中的 final 方法可以被子类继承，但是不能被子类重写。设置为final 就是为了避免子类重写。</p><h4 id="final-类"><a href="#final-类" class="headerlink" title="final 类"></a>final 类</h4><p>final 类不能被继承，没有类能继承 final 类的任何特性。</p><h3 id="abstract-修饰符"><a href="#abstract-修饰符" class="headerlink" title="abstract 修饰符"></a>abstract 修饰符</h3><h4 id="抽象类："><a href="#抽象类：" class="headerlink" title="抽象类："></a><strong>抽象类：</strong></h4><p>抽象类不能用来实例化对象，声明抽象类的唯一目的是为了将来对该类进行扩充。</p><p>一个类不能同时被abstract 和final 修饰。如果一个类包含了抽象方法，那么这个类要声明为抽象类，否则编译出错。</p><p>抽象类中可以包含抽象方法和非抽象方法。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//实例</span></span><br><span class="line"><span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">Caravan</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">double</span> price;</span><br><span class="line">    <span class="keyword">private</span> String model;</span><br><span class="line">    <span class="keyword">private</span> String year;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">goFast</span><span class="params">()</span></span>;<span class="comment">//抽象方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">changeColor</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="comment">//非抽象方法的视实现代码</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="抽象方法"><a href="#抽象方法" class="headerlink" title="抽象方法"></a><strong>抽象方法</strong></h4><ul><li>抽象方法是一种没有任何实现的方法，该方法的具体实现由子类提供。</li><li>抽象方法不能被声明为 final 和 static 。</li><li>任何继承抽象类的子类必须实现父类的所有抽象方法，除非该子类也是抽象类。</li><li>如果一个类包含若干个抽象方法，那么该类必须声明为抽象类。抽象类可以不包含抽象方法。</li><li>抽象方法的生命以分号结尾。</li></ul><h3 id="synchronized-修饰符"><a href="#synchronized-修饰符" class="headerlink" title="synchronized 修饰符"></a>synchronized 修饰符</h3><p>synchronized 关键字声明的方法同一时间只能被一个线程访问。synchronized 修饰符可以用于四个访问修饰符（default、public 、protected 、 private）</p><p>实例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">synchronized</span> <span class="keyword">void</span> <span class="title">methodName</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">//方法实现</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="transient-修饰符"><a href="#transient-修饰符" class="headerlink" title="transient 修饰符"></a>transient 修饰符</h3><p>序列化的对象包含被 transient 修饰的实例变量时，Java 虚拟机（JVM）跳过该特定的变量。该修饰符包含在定义变量的语句中，用于预处理类和变量的数据类型。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//实例</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">transient</span> <span class="keyword">int</span> limit = <span class="number">44</span>; <span class="comment">//不会持久化</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">int</span> b; <span class="comment">//持久化</span></span><br></pre></td></tr></table></figure><h3 id="volatile-修饰符"><a href="#volatile-修饰符" class="headerlink" title="volatile 修饰符"></a>volatile 修饰符</h3><p>volatile 修饰的成员变量在每次被线程访问时，都强制从共享内存中重新读取该成员变量。而且，当成员变量发生变化时，会强制线程将变化值回写到共享内存。这样在任何时刻，两个不同的线程总是看到某个成员变量的同一个值。</p><p>一个 volatile 对象引用可能是 null。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//实例</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyRunnable</span> <span class="keyword">implements</span> <span class="title">Runnable</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">volatile</span> <span class="keyword">boolean</span> active;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        active = <span class="keyword">true</span>;</span><br><span class="line">        <span class="keyword">while</span> (active) <span class="comment">// 第一行</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// 代码</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">stop</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        active = <span class="keyword">false</span>; <span class="comment">// 第二行</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>结果分析：</strong><br>通常情况下，在一个线程调用 run() 方法（在 Runnable 开启的线程），在另一个线程调用 stop() 方法。 如果 第一行 中缓冲区的 active 值被使用，那么在 第二行 的 active 值为 false 时循环不会停止。</p><p>但是以上代码中我们使用了 volatile 修饰 active，所以该循环会停止。</p>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java-变量类型</title>
      <link href="2019/04/08/Java-%E5%8F%98%E9%87%8F%E7%B1%BB%E5%9E%8B/"/>
      <url>2019/04/08/Java-%E5%8F%98%E9%87%8F%E7%B1%BB%E5%9E%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="Java变量类型"><a href="#Java变量类型" class="headerlink" title="Java变量类型"></a>Java变量类型</h1><p>在 Java 中，所有的变量在使用前必须声明。声明变量的基本格式如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">type identifier [= value][,identifier [= value]...];</span><br><span class="line"><span class="comment">//格式说明：type 为 Java 基本数据类型。identifier 是变量名。可以使用逗号隔开来声明多个同类型变量。以下为一些实例：</span></span><br><span class="line"><span class="keyword">int</span> a , b , c; <span class="comment">//声明三个int 型整数：a,b,c</span></span><br><span class="line"><span class="keyword">int</span> d = <span class="number">3</span>, e = <span class="number">4</span>, f = <span class="number">5</span>; <span class="comment">//声明三个整数并赋予初值</span></span><br><span class="line"><span class="keyword">byte</span>  z = <span class="number">22</span>; <span class="comment">//声明并初始化 z </span></span><br><span class="line">String s = <span class="string">&quot;hello&quot;</span>; <span class="comment">//声明并初始化字符串 s </span></span><br><span class="line"><span class="keyword">double</span> pi = <span class="number">3.14159</span>; <span class="comment">//声明双精度浮点变量 pi</span></span><br><span class="line"><span class="keyword">char</span> x = <span class="string">&quot;x&quot;</span>; <span class="comment">//声明变量 x 的值是字符 &#x27;x&#x27;</span></span><br></pre></td></tr></table></figure><a id="more"></a><p>Java 语言支持的变量类型有：</p><ul><li>类变量：独立于方法之外的变量，用 static 来修饰。</li><li>实例变量：独立于方法之外的变量，不过没有 static 修饰</li><li>局部变量：类的方法中的变量。</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//实例</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Variable</span></span>&#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">int</span> allClicks = <span class="number">0</span>; <span class="comment">//类变量</span></span><br><span class="line">    </span><br><span class="line">    String str = “hello word”;<span class="comment">//实例变量</span></span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">method</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">int</span> i = <span class="number">0</span>;<span class="comment">//局部变量</span></span><br><span class="line">        </span><br><span class="line">    &#125;            </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Java-局部变量"><a href="#Java-局部变量" class="headerlink" title="Java 局部变量"></a>Java 局部变量</h2><ul><li>局部变量声明在方法、构造方法或者语句块中；</li><li>局部变量在方法、构造方法、或者语句块被执行的时候创建，当它们执行完成后，变量会被销毁；</li><li>访问修饰符不能用于局部变量；</li><li>局部变量只在声明它的方法、构造方法或者语句块中可见；</li><li>局部变量是在栈上分配的；</li><li>局部变量没有默认值，所以局部变量被声明后，必须经过初始化，才可以使用。</li></ul><h2 id="实例变量"><a href="#实例变量" class="headerlink" title="实例变量"></a>实例变量</h2><ul><li>实例变量声明在一个类中，但在方法、构造方法和语句块之外；</li><li>当一个对象被实例化之后，每个实例变量的值就跟着确定；</li><li>实例变量在对象创建额时候创建，在对象被销毁的时候销毁；</li><li>实例变量的值应该至少被一个方法、构造方法或者语句块引用，使得外部能够通过这些方式获取实例变量信息；</li><li>实例变量可以生命在使用前或者使用后；</li><li>访问修饰符可以修饰实例变量；</li><li>实例变量对于类中的方法、构造方法或者语句块是可见的。一般情况下应该把实例变量设为私有。通过使用访问修饰符可以使实例变量对子类可见；</li><li>实例变量具有默认值。数值型变量的默认值是0，布尔型变量的默认值是false ，引用类型变量的默认值是null 。变量的值可以在声明时指定，也可以在构造方法中指定；</li><li>实例变量可以直接通过变量名访问。但在静态方法以及其他类中，就应该使用完全限定名：ObejectReference.VariableName</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//实例</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Employee</span></span>&#123;</span><br><span class="line">   <span class="comment">// 这个实例变量对子类可见</span></span><br><span class="line">   <span class="keyword">public</span> String name;</span><br><span class="line">   <span class="comment">// 私有变量，仅在该类可见</span></span><br><span class="line">   <span class="keyword">private</span> <span class="keyword">double</span> salary;</span><br><span class="line">   <span class="comment">//在构造器中对name赋值</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="title">Employee</span> <span class="params">(String empName)</span></span>&#123;</span><br><span class="line">      name = empName;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="comment">//设定salary的值</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setSalary</span><span class="params">(<span class="keyword">double</span> empSal)</span></span>&#123;</span><br><span class="line">      salary = empSal;</span><br><span class="line">   &#125;  </span><br><span class="line">   <span class="comment">// 打印信息</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">printEmp</span><span class="params">()</span></span>&#123;</span><br><span class="line">      System.out.println(<span class="string">&quot;名字 : &quot;</span> + name );</span><br><span class="line">      System.out.println(<span class="string">&quot;薪水 : &quot;</span> + salary);</span><br><span class="line">   &#125;</span><br><span class="line"> </span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">      Employee empOne = <span class="keyword">new</span> Employee(<span class="string">&quot;RUNOOB&quot;</span>);</span><br><span class="line">      empOne.setSalary(<span class="number">1000</span>);</span><br><span class="line">      empOne.printEmp();</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//结果</span></span><br><span class="line">$ javac Employee.java </span><br><span class="line">$ java Employee</span><br><span class="line">名字 : RUNOOB</span><br><span class="line">薪水 : <span class="number">1000.0</span></span><br></pre></td></tr></table></figure><h2 id="类变量（静态变量）"><a href="#类变量（静态变量）" class="headerlink" title="类变量（静态变量）"></a>类变量（静态变量）</h2><ul><li>类变量也称为静态变量，在类中以static 关键字声明，但必须在方法之外；</li><li>无论一个类创建了多少个对象，类只拥有类变量的一份拷贝；</li><li>静态变量除了被声明为常量外很少使用。常量是指声明为public / private ,final 和 static 类型的变量。常量初始化后不可改变；</li><li>静态变量储存在静态存储区。经常被声明为常量，很少单独使用static 声明变量；</li><li>静态变量在第一次被访问时创建，在程序结束时销毁；</li><li>与实例变量具有相似的可见性。但是为了对类的使用者可见，大多数静态变量声明为 public 类型；</li><li>默认值与实例变量相似。数值型变量默认值是0，布尔型默认值是false ，引用类型默认值是null  。变量的值可以再在声明的时候指定，也可以在构造方法中指定。此外，静态变量还可以在静态语句块中初始化；</li><li>静态变量可以通过：ClassName.VariableName 的方式访问；</li><li>类变量被声明为 public static final 类型时，类变量名称一般建议使用大写字母。如果静态变量不是 public 和 final 类型，其他命名方式与实例变量以及局部变量的命名方式一致。</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//实例</span></span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Employee</span> </span>&#123;</span><br><span class="line">    <span class="comment">//salary 是静态的私有变量</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">double</span> salary;</span><br><span class="line">    <span class="comment">//DEPARTMENT 是一个常量</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String DEPARTMENT = <span class="string">&quot;开发人员&quot;</span>;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        salary = <span class="number">10000</span>;</span><br><span class="line">        System.out.println(DEPARTMENT + <span class="string">&quot;平均工资：&quot;</span> + salary);</span><br><span class="line">    &#125;   </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//结果</span></span><br><span class="line">开发人员平均工资：<span class="number">10000.0</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//注意：其他类想要访问该变量，可以这样访问：Employee.DEPARTMENT.</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java-对象和类</title>
      <link href="2019/04/04/Java-%E5%AF%B9%E8%B1%A1%E5%92%8C%E7%B1%BB/"/>
      <url>2019/04/04/Java-%E5%AF%B9%E8%B1%A1%E5%92%8C%E7%B1%BB/</url>
      
        <content type="html"><![CDATA[<h1 id="Java-对象和类"><a href="#Java-对象和类" class="headerlink" title="Java 对象和类"></a>Java 对象和类</h1><p>Java 作为一种面向对象语言。支持以下概念：</p><ul><li>多态</li><li>继承</li><li>封装</li><li>抽象</li><li>类</li><li>对象</li><li>实例</li><li>方法</li><li>重载</li></ul><p>这里主要研究对象和类的概念。</p><ul><li>对象：对象是类的一个实例，有状态和行为。例如，一条狗是一个对象，它的状态有：颜色、名字、品种；行为有：摇尾巴、叫、吃等。</li><li>类：类是一个模板，它描述一类对象的行为和状态。</li></ul><a id="more"></a><h2 id="Java-中的对象"><a href="#Java-中的对象" class="headerlink" title="Java 中的对象"></a>Java 中的对象</h2><p>对象有自己的状态和行为，对应的是属性和方法。</p><p>在软件开发中，方法操作对象内部状态的改变，对象的互相调用也是通过方法来完成的。</p><h2 id="Java-中的类"><a href="#Java-中的类" class="headerlink" title="Java 中的类"></a>Java 中的类</h2><p>类可以看成是创建 Java 对象的模板。</p><p>一个类可以包含一些类型变量：</p><ul><li>局部变量：在方法、构造方法或者语句块中定义的变量被称为局部变量。变量声明和初始化都是在方法中，方法结束后，变量就会自动销毁。</li><li>成员变量：成员变量是定义在类中，方法体之外的变量。这种变量在创建对象的时候实例化。成员变量可以被类中方法、构造方法和特定类的语句块访问。</li><li>类变量：类变量也声明在类中，方法体之外，但是必须声明为 static 类型。</li></ul><h2 id="构造方法"><a href="#构造方法" class="headerlink" title="构造方法"></a>构造方法</h2><p>每个类都有构造方法。如果没有显示地为类定义构造方法，Java 编译器会为该类提供一个默认构造方法。</p><p>在创建一个对象的时候，至少要调用一个构造方法。构造方法的名称必须与类同名，一个类可以有多个构造方法。</p><h2 id="创建对象"><a href="#创建对象" class="headerlink" title="创建对象"></a>创建对象</h2><p>对象是根据类创建的。在 Java 中，使用关键字 new 来创建一个新的对象。创建对象需要三步：</p><ul><li>声明：声明一个对象，包括对象名称和对象类型。</li><li>实例化：使用关键字 new 来创建一个对象。</li><li>初始化：使用 new 创建对象时，对调用构造方法初始化对象。</li></ul><h2 id="访问实例变量和方法"><a href="#访问实例变量和方法" class="headerlink" title="访问实例变量和方法"></a>访问实例变量和方法</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 实例化对象 */</span></span><br><span class="line">Object referenceVariable = <span class="keyword">new</span> Constructor();</span><br><span class="line"><span class="comment">/* 访问类中的变量 */</span></span><br><span class="line">referenceVariable.variableName;</span><br><span class="line"><span class="comment">/* 访问类中的方法 */</span></span><br><span class="line">referenceVariable.methodName();</span><br></pre></td></tr></table></figure><h2 id="源文件声明规则"><a href="#源文件声明规则" class="headerlink" title="源文件声明规则"></a>源文件声明规则</h2><p>当一个源文件中定义多个类，并且还有 import 语句和package 语句时，要特别注意这些规则。</p><ul><li>一个源文件只能有一个 public 类。</li><li>一个源文件可以有多个非 public 类。</li><li>源文件的名称应该和 public 类  的类名保持一致。</li><li>如果一个类定义在某个包里，那么package 语句应该放在源文件的首行。</li><li>如果源文件包含 import 语句，那么应该放在package 语句和类定义之间。如果没有package 语句，那么 import 应该再源文件的最前面。</li><li>import 语句和 package 语句对源文件中定义的所有类有效。在同一个源文件中，不能给不同类不同的包声明。</li></ul><p>类除了有若干种访问级别，并且类也分为不同的类型：抽象类和 final 类等。</p><p>还有一些特殊类，如：内部类、匿名类。</p><h2 id="Java-包"><a href="#Java-包" class="headerlink" title="Java 包"></a>Java 包</h2><p>包主要用来对类和接口进行分类。</p><h2 id="Import-语句"><a href="#Import-语句" class="headerlink" title="Import 语句"></a>Import 语句</h2><p>在 Java 中，如果给你一个完成的限定名，包括包名、类名，那么 Java 编译器就可以很容易地定位到源代码或者类。Import 语句就是用来提供一个合理的路径，是编译器可以找到某个类。</p>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java-基本数据类型</title>
      <link href="2019/04/04/Java-%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/"/>
      <url>2019/04/04/Java-%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="Java-基本数据类型"><a href="#Java-基本数据类型" class="headerlink" title="Java 基本数据类型"></a>Java 基本数据类型</h1><p>变量就是申请内存来存储值。就是说，创建变量的时候，需要在内存中申请空间。</p><p>内存管理系统根据变量的类型为变量分配存储空间，分配的空间只能用来存储该数据类型。</p><p>Java 的两大数据类型：</p><ul><li>内置数据类型</li><li>引用数据类型</li></ul><a id="more"></a><h2 id="内置数据类型"><a href="#内置数据类型" class="headerlink" title="内置数据类型"></a>内置数据类型</h2><p>Java 提供了八种基本数据类型。六中数字类型（四个整数型，两个浮点型），一个字符型，一个布尔型。</p><p><strong>byte</strong>：</p><ul><li>byte 数据类型是 8位、有符号的，以二进制补码表示的整数；</li><li>最小值是 <strong>-128（-2^7）</strong>；</li><li>最大值是 <strong>127（2^7-1）</strong>；</li><li>默认值是 <strong>0</strong>；</li><li>byte 类型用在大型数组中节约空间，主要替代整数，因为 byte 变量占用的空间之有 int 类型的四分之一；</li><li>例子：byte a = 100，byte b = -90;</li></ul><p>short：</p><ul><li>short 数据类型是 16 位、有符号的以二进制补码表示的整数</li><li>最小值是 <strong>-32768（-2^15）</strong>；</li><li>最大值是 <strong>32767（2^15 - 1）</strong>；</li><li>Short 数据类型也可以像 byte 那样节省空间。一个short变量是int型变量所占空间的二分之一；</li><li>默认值是 <strong>0</strong>；</li><li>例子：short s = 1000，short r = -20000。</li></ul><p><strong>int：</strong></p><ul><li>int 数据类型是32位、有符号的以二进制补码表示的整数；</li><li>最小值是 <strong>-2,147,483,648（-2^31）</strong>；</li><li>最大值是 <strong>2,147,483,647（2^31 - 1）</strong>；</li><li>一般地整型变量默认为 int 类型；</li><li>默认值是 <strong>0</strong> ；</li><li>例子：int a = 100000, int b = -200000。</li></ul><p><strong>long：</strong></p><ul><li>long 数据类型是 64 位、有符号的以二进制补码表示的整数；</li><li>最小值是 <strong>-9,223,372,036,854,775,808（-2^63）</strong>；</li><li>最大值是 <strong>9,223,372,036,854,775,807（2^63 -1）</strong>；</li><li>这种类型主要使用在需要比较大整数的系统上；</li><li>默认值是 <strong>0L</strong>；</li><li>例子： long a = 100000L，Long b = -200000L。<br>  “L”理论上不分大小写，但是若写成”l”容易与数字”1”混淆，不容易分辩。所以最好大写。</li></ul><p><strong>float：</strong></p><ul><li>float 数据类型是单精度、32位、符合IEEE 754标准的浮点数；</li><li>float 在储存大型浮点数组的时候可节省内存空间；</li><li>默认值是 <strong>0.0f</strong>；</li><li>浮点数不能用来表示精确的值，如货币；</li><li>例子：float f1 = 234.5f。</li></ul><p><strong>double：</strong></p><ul><li>double 数据类型是双精度、64 位、符合IEEE 754标准的浮点数；</li><li>浮点数的默认类型为double类型；</li><li>double类型同样不能表示精确的值，如货币；</li><li>默认值是 <strong>0.0d</strong>；</li><li>例子：double d1 = 123.4。</li></ul><p><strong>boolean：</strong></p><ul><li>boolean 数据表示一位的信息；</li><li>只有两个取值：true 和 false；</li><li>这种类型只作为一种标志来记录true / false 情况</li><li>默认值是 false；</li><li>例子：boolean a = true；</li></ul><p><strong>char</strong>：</p><ul><li>char 类型是一个单一的16位 Unicode 字符；</li><li>最小值是 <strong>\u0000</strong>（即为0）；</li><li>最大值是 <strong>\uffff</strong>（即为65535）；</li><li>char 数据类型可以储存任何字符；</li><li>例子：char a = “M”。</li></ul><p>实例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PrimitiveTypeTest</span> </span>&#123;  </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;  </span><br><span class="line">        <span class="comment">// byte  </span></span><br><span class="line">        System.out.println(<span class="string">&quot;基本类型：byte 二进制位数：&quot;</span> + Byte.SIZE);  </span><br><span class="line">        System.out.println(<span class="string">&quot;包装类：java.lang.Byte&quot;</span>);  </span><br><span class="line">        System.out.println(<span class="string">&quot;最小值：Byte.MIN_VALUE=&quot;</span> + Byte.MIN_VALUE);  </span><br><span class="line">        System.out.println(<span class="string">&quot;最大值：Byte.MAX_VALUE=&quot;</span> + Byte.MAX_VALUE);  </span><br><span class="line">        System.out.println();  </span><br><span class="line">  </span><br><span class="line">        <span class="comment">// short  </span></span><br><span class="line">        System.out.println(<span class="string">&quot;基本类型：short 二进制位数：&quot;</span> + Short.SIZE);  </span><br><span class="line">        System.out.println(<span class="string">&quot;包装类：java.lang.Short&quot;</span>);  </span><br><span class="line">        System.out.println(<span class="string">&quot;最小值：Short.MIN_VALUE=&quot;</span> + Short.MIN_VALUE);  </span><br><span class="line">        System.out.println(<span class="string">&quot;最大值：Short.MAX_VALUE=&quot;</span> + Short.MAX_VALUE);  </span><br><span class="line">        System.out.println();  </span><br><span class="line">  </span><br><span class="line">        <span class="comment">// int  </span></span><br><span class="line">        System.out.println(<span class="string">&quot;基本类型：int 二进制位数：&quot;</span> + Integer.SIZE);  </span><br><span class="line">        System.out.println(<span class="string">&quot;包装类：java.lang.Integer&quot;</span>);  </span><br><span class="line">        System.out.println(<span class="string">&quot;最小值：Integer.MIN_VALUE=&quot;</span> + Integer.MIN_VALUE);  </span><br><span class="line">        System.out.println(<span class="string">&quot;最大值：Integer.MAX_VALUE=&quot;</span> + Integer.MAX_VALUE);  </span><br><span class="line">        System.out.println();  </span><br><span class="line">  </span><br><span class="line">        <span class="comment">// long  </span></span><br><span class="line">        System.out.println(<span class="string">&quot;基本类型：long 二进制位数：&quot;</span> + Long.SIZE);  </span><br><span class="line">        System.out.println(<span class="string">&quot;包装类：java.lang.Long&quot;</span>);  </span><br><span class="line">        System.out.println(<span class="string">&quot;最小值：Long.MIN_VALUE=&quot;</span> + Long.MIN_VALUE);  </span><br><span class="line">        System.out.println(<span class="string">&quot;最大值：Long.MAX_VALUE=&quot;</span> + Long.MAX_VALUE);  </span><br><span class="line">        System.out.println();  </span><br><span class="line">  </span><br><span class="line">        <span class="comment">// float  </span></span><br><span class="line">        System.out.println(<span class="string">&quot;基本类型：float 二进制位数：&quot;</span> + Float.SIZE);  </span><br><span class="line">        System.out.println(<span class="string">&quot;包装类：java.lang.Float&quot;</span>);  </span><br><span class="line">        System.out.println(<span class="string">&quot;最小值：Float.MIN_VALUE=&quot;</span> + Float.MIN_VALUE);  </span><br><span class="line">        System.out.println(<span class="string">&quot;最大值：Float.MAX_VALUE=&quot;</span> + Float.MAX_VALUE);  </span><br><span class="line">        System.out.println();  </span><br><span class="line">  </span><br><span class="line">        <span class="comment">// double  </span></span><br><span class="line">        System.out.println(<span class="string">&quot;基本类型：double 二进制位数：&quot;</span> + Double.SIZE);  </span><br><span class="line">        System.out.println(<span class="string">&quot;包装类：java.lang.Double&quot;</span>);  </span><br><span class="line">        System.out.println(<span class="string">&quot;最小值：Double.MIN_VALUE=&quot;</span> + Double.MIN_VALUE);  </span><br><span class="line">        System.out.println(<span class="string">&quot;最大值：Double.MAX_VALUE=&quot;</span> + Double.MAX_VALUE);  </span><br><span class="line">        System.out.println();  </span><br><span class="line">  </span><br><span class="line">        <span class="comment">// char  </span></span><br><span class="line">        System.out.println(<span class="string">&quot;基本类型：char 二进制位数：&quot;</span> + Character.SIZE);  </span><br><span class="line">        System.out.println(<span class="string">&quot;包装类：java.lang.Character&quot;</span>);  </span><br><span class="line">        <span class="comment">// 以数值形式而不是字符形式将Character.MIN_VALUE输出到控制台  </span></span><br><span class="line">        System.out.println(<span class="string">&quot;最小值：Character.MIN_VALUE=&quot;</span>  </span><br><span class="line">                + (<span class="keyword">int</span>) Character.MIN_VALUE);  </span><br><span class="line">        <span class="comment">// 以数值形式而不是字符形式将Character.MAX_VALUE输出到控制台  </span></span><br><span class="line">        System.out.println(<span class="string">&quot;最大值：Character.MAX_VALUE=&quot;</span>  </span><br><span class="line">                + (<span class="keyword">int</span>) Character.MAX_VALUE);  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Float 和 Double 的最小值和最大值都是以科学记数法的形式输出的，结尾的”E+数字”表示E之前的数字要乘以10的多少次方。比如3.14E3就是3.14 × 10^3 =3140，3.14E-3 就是 3.14 x 10^-3 =0.00314。</p><p>实际上，JAVA 中还存在另外一种基本类型 void ，它也有对应的包装类  java.lang.Void，不过我们无法直接对它们进行操作。</p><h2 id="引用类型"><a href="#引用类型" class="headerlink" title="引用类型"></a>引用类型</h2><ul><li>在 Java 中，引用类型的变量非常类似C/C++ 的指针。引用类型指向一个对象，指向对象的变量是引用变量。这些变量在声明时被指定为一个特定的类型，比如 Employee 、Person 等。变量一旦声明后，类型就不能被改变。</li><li>对象、数组都是引用数据类型。</li><li>所有引用类型的默认值都是 null 。</li><li>一个引用变量可以用来引用任何与之兼容的类型。</li><li>例子：Site site = new Site(“ABCD”);</li></ul><h2 id="Java-常量"><a href="#Java-常量" class="headerlink" title="Java 常量"></a>Java 常量</h2><p>常量在程序运行时是不能被修改的。</p><p>在Java 中使用 final 关键字来修饰常量，声明方式和变量类似：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">final</span> <span class="keyword">double</span> PI = <span class="number">3.1415926</span></span><br></pre></td></tr></table></figure><p>虽然常量名也可以用小写，但是为了便于识别，通常使用大写字母表示常量。</p><p>字面量可以赋值给任何内置类型的变量。例如：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">byte</span> a =  <span class="number">68</span>;</span><br><span class="line"><span class="keyword">char</span> a = <span class="string">&#x27;A&#x27;</span>;</span><br></pre></td></tr></table></figure><p>byte、int、long、和short都可以用十进制、16进制以及8进制的方式来表示。</p><p>当使用常量的时候，前缀 <strong>0</strong> 表示 8 进制，而前缀 <strong>0x</strong> 代表 16 进制, 例如：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> decimal = <span class="number">100</span>;</span><br><span class="line"><span class="keyword">int</span> octal = <span class="number">0144</span>;</span><br><span class="line"><span class="keyword">int</span> hexa =  <span class="number">0x64</span>;</span><br></pre></td></tr></table></figure><p>和其他语言一样，Java 的字符串常量也是包含在两个引号之间的字符序列。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;Hello World&quot;</span></span><br><span class="line"><span class="string">&quot;two\nlines&quot;</span></span><br></pre></td></tr></table></figure><p>字符串常量和字符常量都可以i包含任何 Unicode 字符。例如：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">char</span> a  = <span class="string">&#x27;\u0001&#x27;</span>;</span><br><span class="line">String a = <span class="string">&#x27;\u0001&#x27;</span></span><br></pre></td></tr></table></figure><p>Java 语言支持一些特殊的转义字符序列。</p><table><thead><tr><th>符号</th><th>字符含义</th></tr></thead><tbody><tr><td>\n</td><td>换行（0x0a）</td></tr><tr><td>\r</td><td>回车（0x0d）</td></tr><tr><td>\f</td><td>换页符（0x0c）</td></tr><tr><td>\b</td><td>退格（0x08）</td></tr><tr><td>\0</td><td>空字符（0x20）</td></tr><tr><td>\s</td><td>字符串</td></tr><tr><td>\t</td><td>制表符</td></tr><tr><td>&quot;</td><td>双引号</td></tr><tr><td>&#39;</td><td>单引号</td></tr><tr><td>\\</td><td>反斜杠</td></tr><tr><td>\ddd</td><td>八进制字符（ddd）</td></tr><tr><td>\uxxx</td><td>16进制Unicode 字符（xxxx）</td></tr></tbody></table><h2 id="自动类型转换"><a href="#自动类型转换" class="headerlink" title="自动类型转换"></a>自动类型转换</h2><p><strong>整型，实型（常量）、字符型数据可以混合运算。运算中，不同类型的数据先转化为同一类型，然后进行运行。</strong></p><p>转化从低级到高级：</p><p>低  —————————————————————–&gt;    高</p><p>byte，short，char——&gt;int ——&gt;long——&gt;float ——&gt; double</p><p>数据类型转化必须满足如下规则：</p><ul><li><p>不能对 boolean 类型就进行类型转换。</p></li><li><p>不能把对象类型转换成不相关类的对象。</p></li><li><p>在把容量大的类型转换为容量小的类型是必须使用强制类型转换。</p></li><li><p>转换过程中可能导致溢出或者损失精度，例如：</p>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> i =<span class="number">128</span>;   </span><br><span class="line"><span class="keyword">byte</span> b = (<span class="keyword">byte</span>)i;</span><br><span class="line"><span class="comment">//因为 byte 类型是 8 位，最大值为127，所以当 int 强制转换为 byte 类型时，值 128 时候就会导致溢出。</span></span><br></pre></td></tr></table></figure></li><li><p>浮点数到整数的转换是通过舍弃小数而得到，而不是四舍五入，例如：</p>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">(<span class="keyword">int</span>)<span class="number">23.7</span> == <span class="number">23</span>;        </span><br><span class="line">(<span class="keyword">int</span>)-<span class="number">45.89f</span> == -<span class="number">45</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="自动类型转换-1"><a href="#自动类型转换-1" class="headerlink" title="自动类型转换"></a>自动类型转换</h3><p>必须满足转换前的数据类型的位数要低于转换后的数据类型。低位数可以自动转高位数。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ZiDongLeiZhuan</span></span>&#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">            <span class="keyword">char</span> c1=<span class="string">&#x27;a&#x27;</span>;<span class="comment">//定义一个char类型</span></span><br><span class="line">            <span class="keyword">int</span> i1 = c1;<span class="comment">//char自动类型转换为int</span></span><br><span class="line">            System.out.println(<span class="string">&quot;char自动类型转换为int后的值等于&quot;</span>+i1);</span><br><span class="line">            <span class="keyword">char</span> c2 = <span class="string">&#x27;A&#x27;</span>;<span class="comment">//定义一个char类型</span></span><br><span class="line">            <span class="keyword">int</span> i2 = c2+<span class="number">1</span>;<span class="comment">//char 类型和 int 类型计算</span></span><br><span class="line">            System.out.println(<span class="string">&quot;char类型和int计算后的值等于&quot;</span>+i2);</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**输出结果为：</span></span><br><span class="line"><span class="comment">    char自动类型转换为int后的值等于97</span></span><br><span class="line"><span class="comment">    char类型和int计算后的值等于66</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">解析：c1 的值为字符 a ,查 ASCII 码表可知对应的 <span class="keyword">int</span> 类型值为 <span class="number">97</span>， A 对应值为 <span class="number">65</span>，所以 i2=<span class="number">65</span>+<span class="number">1</span>=<span class="number">66</span>。</span><br></pre></td></tr></table></figure><h3 id="强制类型转换"><a href="#强制类型转换" class="headerlink" title="强制类型转换"></a>强制类型转换</h3><ul><li><p>条件是转换的数据类型必须是兼容的。</p></li><li><p>格式：（type）Value  ，type是要强制类型转换后的数据类型，实例：</p>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">QiangZhiZhuanHuan</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> i1 = <span class="number">123</span>;</span><br><span class="line">        <span class="keyword">byte</span> b = (<span class="keyword">byte</span>)i1;<span class="comment">//强制类型转换为byte</span></span><br><span class="line">        System.out.println(<span class="string">&quot;int强制类型转换为byte后的值等于&quot;</span>+b);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*运行结果：</span></span><br><span class="line"><span class="comment">int强制类型转换为byte后的值等于123</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="隐含强制类型转换"><a href="#隐含强制类型转换" class="headerlink" title="隐含强制类型转换"></a>隐含强制类型转换</h3><ul><li><p>整数的默认类型是 int</p></li><li><p>浮点型不存在这种情况，因为在定义 float 类型时，必须在数字后面跟上 F 或者 f 。</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java-基础语法</title>
      <link href="2019/04/04/Java-%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/"/>
      <url>2019/04/04/Java-%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h1 id="Java-基础语法"><a href="#Java-基础语法" class="headerlink" title="Java 基础语法"></a>Java 基础语法</h1><p>一个 Java 程序可以认为是一系列对象的集合，而这些对象通过调用彼此的方法来协同工作。</p><ul><li>对象：对象是类的一个实例，有状态和行为。</li><li>类：类是一个模板，它描述一类对象的行为和状态。</li><li>方法：方法就是行为，一个类可以有很多方法。运算逻辑、数据修改以及所有的动作都是在方法中完成的。</li><li>实例变量：每个对象都有独特的实例变量，对象的状态由这些实例变量的值决定。</li></ul><a id="more"></a><h2 id="基本语法"><a href="#基本语法" class="headerlink" title="基本语法"></a>基本语法</h2><p>编写 Java 程序时需要注意以下几点：</p><ul><li>大小写敏感：Java是大小写敏感的。</li><li>类名：对于所有的类来说，类名的首字母应该大写。如果由多个单词组成使用大驼峰命名法</li><li>方法名：所有的方法名都应该以小写字母开头，小驼峰命名法。</li><li>源文件名：源文件名必须与类名相同。如果不同，编译的时候会出错。</li><li>主方法入口：所有的 Java 程序由public static void main(String[] args) 方法开始执行。</li></ul><h2 id="Java-修饰符"><a href="#Java-修饰符" class="headerlink" title="Java 修饰符"></a>Java 修饰符</h2><p>Java 可以使用修饰符来修饰类中方法和属性。主要有两类修饰符：</p><ul><li>访问控制修饰符：default ，public，protected ，private </li><li>非访问控制修饰符：final ，abstract， static ， synchronized</li></ul><h2 id="Java-变量"><a href="#Java-变量" class="headerlink" title="Java 变量"></a>Java 变量</h2><p>三种：</p><ol><li>局部变量</li><li>类变量（静态变量）</li><li>成员变量（非静态变量）</li></ol><h2 id="Java-数组"><a href="#Java-数组" class="headerlink" title="Java 数组"></a>Java 数组</h2><p>数组是存储在堆上的对象，可以保存多个同类型变量。</p><h2 id="Java-枚举"><a href="#Java-枚举" class="headerlink" title="Java 枚举"></a>Java 枚举</h2><p>Java 5.0引入。枚举限制变量只能是预先设定好的值。使用枚举可以减少程序的 bug。</p><p><strong>注意：</strong>枚举可以单独声明或者声明在类里面。方法、变量、构造函数可以在枚举中定义。</p><table><thead><tr><th>类别</th><th>关键字</th><th>说明</th></tr></thead><tbody><tr><td>访问控制</td><td>private</td><td>私有的</td></tr><tr><td></td><td>protected</td><td>受保护的</td></tr><tr><td></td><td>public</td><td>公共的</td></tr><tr><td>类、方法和变量修饰符</td><td>abstract</td><td>抽象声明</td></tr><tr><td></td><td>class</td><td>类</td></tr><tr><td></td><td>extends</td><td>扩充，继承</td></tr><tr><td></td><td>final</td><td>最终的，不可修改的</td></tr><tr><td></td><td>implements</td><td>实现（接口）</td></tr><tr><td></td><td>interface</td><td>接口</td></tr><tr><td></td><td>native</td><td>本地，原生方法（非 Java 实现）</td></tr><tr><td></td><td>new</td><td>新，创建</td></tr><tr><td></td><td>static</td><td>静态</td></tr><tr><td></td><td>strictfp</td><td>严格，精准</td></tr><tr><td></td><td>synchronized</td><td>线程，同步</td></tr><tr><td></td><td>transient</td><td>暂时</td></tr><tr><td></td><td>volatile</td><td>易失</td></tr><tr><td>程序控制语句</td><td>break</td><td>跳出循环</td></tr><tr><td></td><td>case</td><td>定义一个值供switch选择</td></tr><tr><td></td><td>continue</td><td>继续</td></tr><tr><td></td><td>default</td><td>默认</td></tr><tr><td></td><td>do</td><td>运行</td></tr><tr><td></td><td>else</td><td>否则</td></tr><tr><td></td><td>for</td><td>循环</td></tr><tr><td></td><td>if</td><td>如果</td></tr><tr><td></td><td>instanceof</td><td>实例</td></tr><tr><td></td><td>return</td><td>返回</td></tr><tr><td></td><td>switch</td><td>根据值选择执行</td></tr><tr><td></td><td>while</td><td>循环</td></tr><tr><td>错误处理</td><td>assert</td><td>判断表达式是否为真</td></tr><tr><td></td><td>catch</td><td>捕捉异常</td></tr><tr><td></td><td>finally</td><td>有没有异常都执行</td></tr><tr><td></td><td>throw</td><td>抛出一个异常</td></tr><tr><td></td><td>throws</td><td>声明一个异常可能抛出</td></tr><tr><td></td><td>try</td><td>捕捉异常</td></tr><tr><td>包相关</td><td>import</td><td>引入</td></tr><tr><td></td><td>package</td><td>包</td></tr><tr><td>基本类型</td><td>boolean</td><td>布尔类型</td></tr><tr><td></td><td>byte</td><td>字节类型</td></tr><tr><td></td><td>char</td><td>字符类型</td></tr><tr><td></td><td>double</td><td>双精度浮点类型</td></tr><tr><td></td><td>float</td><td>单精度浮点类型</td></tr><tr><td></td><td>int</td><td>整数型</td></tr><tr><td></td><td>long</td><td>长整数型</td></tr><tr><td></td><td>short</td><td>短整数型</td></tr><tr><td>变量引用</td><td>supper</td><td>父类，超类</td></tr><tr><td></td><td>this</td><td>本类</td></tr><tr><td></td><td>void</td><td>无返回值</td></tr><tr><td>保留关键字</td><td>goto</td><td>是关键字，但是不可使用</td></tr><tr><td></td><td>const</td><td>是关键字，但是不可使用</td></tr><tr><td></td><td>null</td><td>空</td></tr></tbody></table><h2 id="Java-注释"><a href="#Java-注释" class="headerlink" title="Java 注释"></a>Java 注释</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 单行注释</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">多行注释。</span></span><br><span class="line"><span class="comment">*/</span> </span><br></pre></td></tr></table></figure><h2 id="Java-空行"><a href="#Java-空行" class="headerlink" title="Java 空行"></a>Java 空行</h2><p>空行或者有注释的行，Java 编译器会自动忽略掉。</p><h2 id="继承"><a href="#继承" class="headerlink" title="继承"></a>继承</h2><p>在 Java 中，一个类可以由其他类派生。如果你要创建一个类，而且已经存在一个类具有你所需要的属性和方法，那么你可以将新创建的类继承该类。</p><p>利用继承的方法，可以重用已存在类的方法和属性，而不用重写这些代码。被继承的类称为超类（supper class），派生类称为子类（subclass）。</p><h2 id="接口"><a href="#接口" class="headerlink" title="接口"></a>接口</h2><p>在 Java 中，接口可理解为对象间相互通信的协议。接口在继承中扮演着很重要的角色。</p><p>接口只定义派生要用到的方法，但是方法的具体实现完全取决于派生类。</p><h2 id="Java-源程序与编译型运行区别"><a href="#Java-源程序与编译型运行区别" class="headerlink" title="Java 源程序与编译型运行区别"></a>Java 源程序与编译型运行区别</h2><ul><li><p>编译型源程序    —-编译连接—&gt;   可执行程序EXE   —-执行—-&gt; 操作系统</p></li><li><p>Java 程序（.java文件）  —-编译—-&gt;   字节码程序（.class文件）—–解释执行—-&gt; 解释器 ——-&gt; 操作系统</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SQL函数-03</title>
      <link href="2019/04/03/SQL%E5%87%BD%E6%95%B0-03/"/>
      <url>2019/04/03/SQL%E5%87%BD%E6%95%B0-03/</url>
      
        <content type="html"><![CDATA[<h1 id="常用的-SQL-函数"><a href="#常用的-SQL-函数" class="headerlink" title="常用的 SQL 函数"></a>常用的 SQL 函数</h1><h2 id="AVG-函数"><a href="#AVG-函数" class="headerlink" title="AVG () 函数"></a>AVG () 函数</h2><p>计算一个字段的平均值，NULL 值不在其中</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">AVG</span>(column_name) <span class="keyword">FROM</span> table_name</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="COUNT-函数"><a href="#COUNT-函数" class="headerlink" title="COUNT () 函数"></a>COUNT () 函数</h2><p>返回匹配条件的行数</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 返回指定列的值的数目，null 不算入内</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">COUNT</span>(column_name) <span class="keyword">FROM</span> table_name</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">COUNT</span>(*) <span class="keyword">FROM</span> table_name</span><br><span class="line"></span><br><span class="line"><span class="comment">--适用于Oracle 和 SQL Sever</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">COUNT</span>(<span class="keyword">DISTINCT</span> column_name) <span class="keyword">FROM</span> table_name</span><br></pre></td></tr></table></figure><h2 id="FIRST-函数"><a href="#FIRST-函数" class="headerlink" title="FIRST () 函数"></a>FIRST () 函数</h2><p>返回指定的字段中第一个记录值</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">FIRST</span>(column_name) <span class="keyword">FROM</span> table_name</span><br></pre></td></tr></table></figure><h2 id="LAST-函数"><a href="#LAST-函数" class="headerlink" title="LAST () 函数"></a>LAST () 函数</h2><p>返回指定的字段最后一个记录值</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">LAST</span>(column_name) <span class="keyword">FROM</span> table_name</span><br></pre></td></tr></table></figure><h2 id="MAX-函数"><a href="#MAX-函数" class="headerlink" title="MAX () 函数"></a>MAX () 函数</h2><p>返回一列中最大的值。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">MAX</span>(column_name) <span class="keyword">FROM</span> table_name</span><br></pre></td></tr></table></figure><h2 id="MIN-函数"><a href="#MIN-函数" class="headerlink" title="MIN () 函数"></a>MIN () 函数</h2><p>返回一列中最小的值。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">MIN</span>(column_name) <span class="keyword">FROM</span> table_name</span><br></pre></td></tr></table></figure><h2 id="SUM-函数"><a href="#SUM-函数" class="headerlink" title="SUM () 函数"></a>SUM () 函数</h2><p>返回数值列的总和。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">SUM</span>(column_name) <span class="keyword">FROM</span> table_name</span><br></pre></td></tr></table></figure><h2 id="GROUP-BY-语句"><a href="#GROUP-BY-语句" class="headerlink" title="GROUP BY 语句"></a>GROUP BY 语句</h2><p>GROUP BY 语句用于结合合计函数，根据一个或多个列对结果集进行分组</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> column_name, aggregate_function(column_name)</span><br><span class="line"><span class="keyword">FROM</span> table_name</span><br><span class="line"><span class="keyword">WHERE</span> column_name <span class="keyword">operator</span> <span class="keyword">value</span></span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> column_name,另一个字段名</span><br></pre></td></tr></table></figure><h2 id="HAVING-子句"><a href="#HAVING-子句" class="headerlink" title="HAVING 子句"></a>HAVING 子句</h2><p>在 SQL 中增加 HAVING 子句的原因是，WHERE 关键字无法与合计函数一起使用。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> column_name, aggregate_function(column_name)</span><br><span class="line"><span class="keyword">FROM</span> table_name</span><br><span class="line"><span class="keyword">WHERE</span> column_name <span class="keyword">operator</span> <span class="keyword">value</span></span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> column_name</span><br><span class="line"><span class="keyword">HAVING</span> aggregate_function(column_name) <span class="keyword">operator</span> <span class="keyword">value</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--例子：查找订单总金额少于 2000 的客户。</span></span><br><span class="line"><span class="keyword">SELECT</span> Customer,<span class="keyword">SUM</span>(OrderPrice) <span class="keyword">FROM</span> Orders</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> Customer</span><br><span class="line"><span class="keyword">HAVING</span> <span class="keyword">SUM</span>(OrderPrice)&lt;<span class="number">2000</span></span><br></pre></td></tr></table></figure><h2 id="UCASE-函数"><a href="#UCASE-函数" class="headerlink" title="UCASE () 函数"></a>UCASE () 函数</h2><p>把字段的值全部转换成大写</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">UCASE</span>(column_name) <span class="keyword">FROM</span> table_name</span><br></pre></td></tr></table></figure><h2 id="LCASE-函数"><a href="#LCASE-函数" class="headerlink" title="LCASE () 函数"></a>LCASE () 函数</h2><p>把字段的值全部转换成小写</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">LCASE</span>(column_name) <span class="keyword">FROM</span> table_name</span><br></pre></td></tr></table></figure><h2 id="MID-函数"><a href="#MID-函数" class="headerlink" title="MID () 函数"></a>MID () 函数</h2><p>MID 函数用于从文本字段中提取字符。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">MID</span>(column_name,<span class="keyword">start</span>[,<span class="keyword">length</span>]) <span class="keyword">FROM</span> table_name</span><br></pre></td></tr></table></figure><table><thead><tr><th align="left">参数</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">column_name</td><td align="left">必需。要提取字符的字段。</td></tr><tr><td align="left">start</td><td align="left">必需。规定开始位置（起始值是 1）。</td></tr><tr><td align="left">length</td><td align="left">可选。要返回的字符数。如果省略，则 MID() 函数返回剩余文本。</td></tr></tbody></table><h2 id="LEN-函数"><a href="#LEN-函数" class="headerlink" title="LEN () 函数"></a>LEN () 函数</h2><p>LEN 函数返回文本字段中值的长度。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">LEN</span>(column_name) <span class="keyword">FROM</span> table_name</span><br></pre></td></tr></table></figure><h2 id="ROUND-函数"><a href="#ROUND-函数" class="headerlink" title="ROUND () 函数"></a>ROUND () 函数</h2><p>用于把数值字段舍入为指定的小数位数。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">ROUND</span>(column_name,decimals) <span class="keyword">FROM</span> table_name</span><br></pre></td></tr></table></figure><table><thead><tr><th align="left">参数</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">column_name</td><td align="left">必需。要舍入的字段。</td></tr><tr><td align="left">decimals</td><td align="left">必需。规定要返回的小数位数。</td></tr></tbody></table><h2 id="NOW-函数"><a href="#NOW-函数" class="headerlink" title="NOW () 函数"></a>NOW () 函数</h2><p>NOW 函数返回当前的日期和时间。</p><p><strong>注意：</strong>SQL Sever 数据库，用 getdate ()函数获取当前时间。Oracle 数据库中使用SYSDATE 获取当前日期和时间。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">NOW</span>() <span class="keyword">FROM</span> table_name;</span><br></pre></td></tr></table></figure><h2 id="FORMAT-函数"><a href="#FORMAT-函数" class="headerlink" title="FORMAT () 函数"></a>FORMAT () 函数</h2><p>用于对字段的显示进行格式化。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">FORMAT</span>(column_name,<span class="keyword">format</span>) <span class="keyword">FROM</span> table_name</span><br><span class="line"></span><br><span class="line"><span class="comment">--例子</span></span><br><span class="line"><span class="keyword">SELECT</span> ProductName, UnitPrice, <span class="keyword">FORMAT</span>(<span class="keyword">Now</span>(),<span class="string">&#x27;YYYY-MM-DD&#x27;</span>) <span class="keyword">as</span> PerDate</span><br><span class="line"><span class="keyword">FROM</span> Products</span><br></pre></td></tr></table></figure><table><thead><tr><th align="left">参数</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">column_name</td><td align="left">必需。要格式化的字段。</td></tr><tr><td align="left">format</td><td align="left">必需。规定格式。</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SQL基础-02</title>
      <link href="2019/04/03/SQL%E5%9F%BA%E7%A1%80-02/"/>
      <url>2019/04/03/SQL%E5%9F%BA%E7%A1%80-02/</url>
      
        <content type="html"><![CDATA[<h1 id="SQL进阶"><a href="#SQL进阶" class="headerlink" title="SQL进阶"></a>SQL进阶</h1><h2 id="TOP-子句"><a href="#TOP-子句" class="headerlink" title="TOP 子句"></a>TOP 子句</h2><p>用于规定要返回的记录的数目，对于拥有数千条记录的大型表来说，TOP子句是非常有用的。注意：并非所有的数据库系统都支持 TOP 子句</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> TOP <span class="built_in">Number</span>|<span class="keyword">percent</span> 字段名(s) <span class="keyword">from</span> 表名；</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="LIKE-子句"><a href="#LIKE-子句" class="headerlink" title="LIKE 子句"></a>LIKE 子句</h2><p>用于在where 子句中搜索列中的指定模式。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> 字段名(s) <span class="keyword">from</span> 表名 <span class="keyword">where</span> 字段名 <span class="keyword">like</span> <span class="string">&quot;%a&quot;</span>；</span><br></pre></td></tr></table></figure><h2 id="通配符"><a href="#通配符" class="headerlink" title="通配符"></a>通配符</h2><p>在搜索数据库中的数据时，SQL 通配符可以替代一个或者多个字符，必须与 LIKE 运算符一起使用。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- % 匹配多个字符</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> 表名 <span class="keyword">where</span> 字段名 <span class="keyword">like</span> <span class="string">&quot;%a&quot;</span>；</span><br><span class="line"></span><br><span class="line"><span class="comment">-- _ 匹配一个字符</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> 表名 <span class="keyword">where</span> 字段名 <span class="keyword">like</span> <span class="string">&quot;_a&quot;</span>；</span><br></pre></td></tr></table></figure><h2 id="IN-操作符"><a href="#IN-操作符" class="headerlink" title="IN 操作符"></a>IN 操作符</h2><p>​    允许我们在 where 子句中规定多个值。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> 字段名 <span class="keyword">from</span> 表名 <span class="keyword">where</span> 字段名 <span class="keyword">in</span> (Value1，value2，...)；</span><br></pre></td></tr></table></figure><h2 id="BETWEEN-操作符"><a href="#BETWEEN-操作符" class="headerlink" title="BETWEEN 操作符"></a>BETWEEN 操作符</h2><p>​    用在where 子句中，作用是选取介于两个值之间的数据范围</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> 表名 <span class="keyword">where</span> 字段名 <span class="keyword">between</span> Value1 <span class="keyword">and</span> Value2；</span><br></pre></td></tr></table></figure><h2 id="ALIAS-别名"><a href="#ALIAS-别名" class="headerlink" title="ALIAS 别名"></a>ALIAS 别名</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> 表名 <span class="keyword">as</span> 表别名；</span><br><span class="line"><span class="comment">-- 等价于</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> 表名  表别名；</span><br></pre></td></tr></table></figure><h2 id="JOIN-联表"><a href="#JOIN-联表" class="headerlink" title="JOIN 联表"></a>JOIN 联表</h2><p>​    用于多个表中的字段名之间的关系，从这些表中查询数据</p><img src=https://gitee.com/gek7777/cdn.io/raw/master/image/sql-join.png ><ul><li>JOIN :如果表中有至少一个匹配，则返回行</li></ul><img src=https://gitee.com/gek7777/cdn.io/raw/master/image/img_leftjoin.png ><ul><li>LEFT JOIN : 内连接，即使右表中没有匹配，也从左表返回所有行</li></ul><img src=https://gitee.com/gek7777/cdn.io/raw/master/image/img_rightjoin.png ><ul><li>RIGHT JOIN : 右连接，即使左表中没有匹配，也从右表返回所有行</li></ul><img src=https://gitee.com/gek7777/cdn.io/raw/master/image/img_fulljoin.png ><ul><li>FULL JOIN : 只要其中一个表中存在匹配，就返回行</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--联表方式1</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> 表名<span class="number">1</span> t1，表名<span class="number">2</span> t2 <span class="keyword">where</span> t1.字段名 = t2.字段名；</span><br><span class="line"></span><br><span class="line"><span class="comment">--联表方式2</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> 表名<span class="number">1</span> t1 <span class="keyword">Inner</span> <span class="keyword">join</span> 表名<span class="number">2</span> t2 <span class="keyword">on</span> t1.字段名 = t2.字段名；</span><br></pre></td></tr></table></figure><h2 id="UNION-和-UNION-ALL-操作符"><a href="#UNION-和-UNION-ALL-操作符" class="headerlink" title="UNION  和 UNION ALL 操作符"></a>UNION  和 UNION ALL 操作符</h2><p>UNION 操作符用于合并两个或多个 SELECT 语句的结果集。注意：查出来的字段数量相同，列的类型也相同，对应的顺序也需要相同。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- UNION 默认不允许取重复的值</span></span><br><span class="line"><span class="keyword">select</span> 字段<span class="number">1</span> <span class="keyword">from</span> 表<span class="number">1</span> <span class="keyword">UNION</span> <span class="keyword">select</span> 字段<span class="number">1</span> <span class="keyword">from</span> 表<span class="number">2</span> ；</span><br><span class="line"></span><br><span class="line"><span class="comment">-- UNION ALL 允许取重复的值</span></span><br><span class="line"><span class="keyword">select</span> 字段<span class="number">1</span> <span class="keyword">from</span> 表<span class="number">1</span> <span class="keyword">UNION</span> <span class="keyword">ALL</span> <span class="keyword">select</span> 字段<span class="number">1</span> <span class="keyword">from</span> 表<span class="number">2</span>；</span><br></pre></td></tr></table></figure><h2 id="SELECT-INTO"><a href="#SELECT-INTO" class="headerlink" title="SELECT INTO"></a>SELECT INTO</h2><p> 用于从一个表中选取数据，然后把数据插入另一个表中。常用于创建表的备份复件或者用于对记录进行存档。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">into</span> 新表名 <span class="keyword">from</span> 旧表名；</span><br></pre></td></tr></table></figure><h2 id="AUTO-INCREMENT-字段"><a href="#AUTO-INCREMENT-字段" class="headerlink" title="AUTO  INCREMENT 字段"></a>AUTO  INCREMENT 字段</h2><p>每次插入新纪录时，自动创建主键字段的值</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 在mysql 中的用法</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> Persons</span><br><span class="line">(</span><br><span class="line">P_Id <span class="built_in">int</span> PRIMARY <span class="keyword">KEY</span> AUTOINCREMENT,</span><br><span class="line">LastName <span class="built_in">varchar</span>(<span class="number">255</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">FirstName <span class="built_in">varchar</span>(<span class="number">255</span>),</span><br><span class="line">Address <span class="built_in">varchar</span>(<span class="number">255</span>),</span><br><span class="line">City <span class="built_in">varchar</span>(<span class="number">255</span>)</span><br><span class="line">)；</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">-------------------------------------</span></span><br><span class="line"><span class="comment">-- 在Oracle 中的用法</span></span><br><span class="line"><span class="comment">--先创建一个序列对象 sequence </span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">SEQUENCE</span> seq_person</span><br><span class="line"><span class="keyword">MINVALUE</span> <span class="number">1</span></span><br><span class="line"><span class="keyword">START</span> <span class="keyword">WITH</span> <span class="number">1</span></span><br><span class="line"><span class="keyword">INCREMENT</span> <span class="keyword">BY</span> <span class="number">1</span></span><br><span class="line"><span class="keyword">CACHE</span> <span class="number">10</span>；</span><br><span class="line"><span class="comment">--面的代码创建名为 seq_person 的序列对象，它以 1 起始且以 1 递增。该对象缓存 10 个值以提高性能。CACHE 选项规定了为了提高访问速度要存储多少个序列值。</span></span><br><span class="line"><span class="comment">--再插入数据</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> Persons (P_Id,FirstName,LastName)</span><br><span class="line"><span class="keyword">VALUES</span> (seq_person.nextval,<span class="string">&#x27;Lars&#x27;</span>,<span class="string">&#x27;Monsen&#x27;</span>)；</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">---------------------------------------</span></span><br><span class="line"><span class="comment">--在SQL Sever 的用法</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> Persons</span><br><span class="line">(</span><br><span class="line">P_Id <span class="built_in">int</span> PRIMARY <span class="keyword">KEY</span> <span class="keyword">IDENTITY</span>,</span><br><span class="line">LastName <span class="built_in">varchar</span>(<span class="number">255</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">FirstName <span class="built_in">varchar</span>(<span class="number">255</span>),</span><br><span class="line">Address <span class="built_in">varchar</span>(<span class="number">255</span>),</span><br><span class="line">City <span class="built_in">varchar</span>(<span class="number">255</span>)</span><br><span class="line">)；</span><br><span class="line"><span class="comment">--如果要修改起始位置，和每次递增的规律。使用IDENTITY(x,y),以 x 起始位置，y 递增。</span></span><br></pre></td></tr></table></figure><h2 id="CREATE-VIEW-视图"><a href="#CREATE-VIEW-视图" class="headerlink" title="CREATE VIEW  视图"></a>CREATE VIEW  视图</h2><p>在 SQL 中，是基于 SQL 语句的结果集的可视化的表。视图包括行和列，<strong>就像一个真实的表</strong>。视图中的字段来自真实表中的字段。可以向视图中添加 SQL 函数、 WHERE 以及 JOIN 语句，也可以提交数据。<strong>注意</strong>：数据库的设计和结构不会受视图中的函数、WHERE 以及 JOIN 语句的影响。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">view</span> 视图名 <span class="keyword">as</span> <span class="keyword">select</span> 字段名 <span class="keyword">from</span> 表名 <span class="keyword">where</span> 条件；</span><br></pre></td></tr></table></figure><p><strong>注意</strong>：视图总是显示最近的数据。每当用户查询视图时，数据库引擎通过使用 SQL 语句来重建数据。</p><h1 id="SQL-约束-Constraints"><a href="#SQL-约束-Constraints" class="headerlink" title="SQL 约束 Constraints"></a>SQL 约束 Constraints</h1><p>约束用于限制加入表的数据的类型。可以在创建表时规定约束（通过create table语句），或者在表创建之后也可以（通过 alter table 语句）。</p><p>主要的几种约束：</p><ul><li><p>NOT NULL</p></li><li><p>UNIQUE</p></li><li><p>PRIMARY KEY</p></li><li><p>FOREIGN KEY</p></li><li><p>CHECK</p></li><li><p>DEFAULT </p></li></ul><h2 id="NOT-NULL-非空约束"><a href="#NOT-NULL-非空约束" class="headerlink" title="NOT NULL  非空约束"></a>NOT NULL  非空约束</h2><p>强制列不接受 NULL 值。强制该字段必须有值，无值的话不能添加或者更新记录。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> Persons</span><br><span class="line">(</span><br><span class="line">Id_P <span class="built_in">int</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">LastName <span class="built_in">varchar</span>(<span class="number">255</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">FirstName <span class="built_in">varchar</span>(<span class="number">255</span>),</span><br><span class="line">Address <span class="built_in">varchar</span>(<span class="number">255</span>),</span><br><span class="line">City <span class="built_in">varchar</span>(<span class="number">255</span>)</span><br><span class="line">)；</span><br></pre></td></tr></table></figure><h2 id="UNIQUE-唯一约束"><a href="#UNIQUE-唯一约束" class="headerlink" title="UNIQUE 唯一约束"></a>UNIQUE 唯一约束</h2><p>UNIQUE 约束唯一标识数据库表中额每条记录。</p><p>UNIQUE  和 PRIMARY KEY 约束均为列或者集合提供唯一性的保证。其中 PRIMARY KEY 中拥有自动定义的 UNIQUE 约束。</p><p><strong>注意</strong>：每个表中可以有多个 UNIQUE 约束，但是只能有一个 PRIMARY KEY 约束。</p><h3 id="创建表时添加-UNIQUE-约束："><a href="#创建表时添加-UNIQUE-约束：" class="headerlink" title="创建表时添加 UNIQUE 约束："></a>创建表时添加 UNIQUE 约束：</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--MySQL中，创建表时添加 UNIQUE 约束</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> Persons</span><br><span class="line">(</span><br><span class="line">Id_P <span class="built_in">int</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">LastName <span class="built_in">varchar</span>(<span class="number">255</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">FirstName <span class="built_in">varchar</span>(<span class="number">255</span>),</span><br><span class="line">Address <span class="built_in">varchar</span>(<span class="number">255</span>),</span><br><span class="line">City <span class="built_in">varchar</span>(<span class="number">255</span>),</span><br><span class="line"><span class="keyword">UNIQUE</span> (Id_P)</span><br><span class="line">)；</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">---------------------------------------------------------</span></span><br><span class="line"><span class="comment">--SQL Sever / Oracle / MS Access中创建表时 添加 UNIQUE 约束</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> Persons</span><br><span class="line">(</span><br><span class="line">Id_P <span class="built_in">int</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">UNIQUE</span>,</span><br><span class="line">LastName <span class="built_in">varchar</span>(<span class="number">255</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">FirstName <span class="built_in">varchar</span>(<span class="number">255</span>),</span><br><span class="line">Address <span class="built_in">varchar</span>(<span class="number">255</span>),</span><br><span class="line">City <span class="built_in">varchar</span>(<span class="number">255</span>)</span><br><span class="line">)；</span><br><span class="line"></span><br><span class="line"><span class="comment">---------------------------------------------------------</span></span><br><span class="line"><span class="comment">--如果需要重命名 UNIQUE 约束 ，以及为多个列定义 UNIQUE 约束</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> Persons</span><br><span class="line">(</span><br><span class="line">Id_P <span class="built_in">int</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">LastName <span class="built_in">varchar</span>(<span class="number">255</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">FirstName <span class="built_in">varchar</span>(<span class="number">255</span>),</span><br><span class="line">Address <span class="built_in">varchar</span>(<span class="number">255</span>),</span><br><span class="line">City <span class="built_in">varchar</span>(<span class="number">255</span>),</span><br><span class="line"><span class="keyword">CONSTRAINT</span> uc_PersonID <span class="keyword">UNIQUE</span> (Id_P,LastName)</span><br><span class="line">)；</span><br></pre></td></tr></table></figure><h3 id="表已经创建，修改其中的-UNIQUE-约束："><a href="#表已经创建，修改其中的-UNIQUE-约束：" class="headerlink" title="表已经创建，修改其中的 UNIQUE 约束："></a>表已经创建，修改其中的 UNIQUE 约束：</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 如果是单列的添加 UNIQUE 约束</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> Persons <span class="keyword">ADD</span> <span class="keyword">UNIQUE</span> (Id_P)；</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 如果需要重命名 UNIQUE 约束，并定义多个列的 UNIQUE 约束</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> Persons</span><br><span class="line"><span class="keyword">ADD</span> <span class="keyword">CONSTRAINT</span> uc_PersonID <span class="keyword">UNIQUE</span> (Id_P,LastName)；</span><br></pre></td></tr></table></figure><h3 id="撤销-UNIQUE-约束"><a href="#撤销-UNIQUE-约束" class="headerlink" title="撤销 UNIQUE 约束"></a>撤销 UNIQUE 约束</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--MySQL中</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 表名 <span class="keyword">drop</span> <span class="keyword">index</span> 约束名；</span><br><span class="line"></span><br><span class="line"><span class="comment">--SQL Sever / Oracle / MS Access中</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 表名 <span class="keyword">drop</span> <span class="keyword">constraint</span> 约束名；</span><br></pre></td></tr></table></figure><h2 id="PRIMARY-KEY-主键约束"><a href="#PRIMARY-KEY-主键约束" class="headerlink" title="PRIMARY KEY 主键约束"></a>PRIMARY KEY 主键约束</h2><p>PRIMARY KEY 约束唯一标识数据库表中的每条记录。</p><p>主键必须包含唯一值。主键不能包含NULL值。每个表都应该有一个主键，并且每个表只能有一个主键。</p><h3 id="创建表时添加-PRIMARY-KEY-约束"><a href="#创建表时添加-PRIMARY-KEY-约束" class="headerlink" title="创建表时添加 PRIMARY KEY 约束"></a>创建表时添加 PRIMARY KEY 约束</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- MySQL中</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> Persons</span><br><span class="line">(</span><br><span class="line">Id_P <span class="built_in">int</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">LastName <span class="built_in">varchar</span>(<span class="number">255</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">FirstName <span class="built_in">varchar</span>(<span class="number">255</span>),</span><br><span class="line">Address <span class="built_in">varchar</span>(<span class="number">255</span>),</span><br><span class="line">City <span class="built_in">varchar</span>(<span class="number">255</span>),</span><br><span class="line">PRIMARY <span class="keyword">KEY</span> (Id_P)</span><br><span class="line">)；</span><br><span class="line"></span><br><span class="line"><span class="comment">--SQL Sever / Oracle / MS Access 中</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> Persons</span><br><span class="line">(</span><br><span class="line">Id_P <span class="built_in">int</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> PRIMARY <span class="keyword">KEY</span>,</span><br><span class="line">LastName <span class="built_in">varchar</span>(<span class="number">255</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">FirstName <span class="built_in">varchar</span>(<span class="number">255</span>),</span><br><span class="line">Address <span class="built_in">varchar</span>(<span class="number">255</span>),</span><br><span class="line">City <span class="built_in">varchar</span>(<span class="number">255</span>)</span><br><span class="line">)；</span><br><span class="line"></span><br><span class="line"><span class="comment">------------------------------------</span></span><br><span class="line"><span class="comment">--如果需要重命名 PRIMARY KEY 约束，以及为多个列定义PRIMARY KEY 约束</span></span><br><span class="line">Id_P <span class="built_in">int</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">LastName <span class="built_in">varchar</span>(<span class="number">255</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">FirstName <span class="built_in">varchar</span>(<span class="number">255</span>),</span><br><span class="line">Address <span class="built_in">varchar</span>(<span class="number">255</span>),</span><br><span class="line">City <span class="built_in">varchar</span>(<span class="number">255</span>),</span><br><span class="line"><span class="keyword">CONSTRAINT</span> pk_PersonID PRIMARY <span class="keyword">KEY</span> (Id_P,LastName)</span><br><span class="line">)；</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="已存在的表的-PRIMARY-KEY-约束"><a href="#已存在的表的-PRIMARY-KEY-约束" class="headerlink" title="已存在的表的 PRIMARY KEY 约束"></a>已存在的表的 PRIMARY KEY 约束</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- MySQL / SQL Sever / Oracle / MS Access 中添加 PRIMARY KEY</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> Persons</span><br><span class="line"><span class="keyword">ADD</span> PRIMARY <span class="keyword">KEY</span> (Id_P)</span><br><span class="line"></span><br><span class="line"><span class="comment">-- MySQL / SQL Sever / Oracle / MS Access 中重命名 PRIMARY KEY 约束，以及多个列定义 PRIMARY KEY 约束</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> Persons</span><br><span class="line"><span class="keyword">ADD</span> <span class="keyword">CONSTRAINT</span> pk_PersonID PRIMARY <span class="keyword">KEY</span> (Id_P,LastName)；</span><br></pre></td></tr></table></figure><p><strong>注意：</strong>如果使用alter table 方式 添加主键，必须吧主键列声明为不包含 NULL 值 （在表首次创建时）。</p><h3 id="撤销-PRIMARY-KEY-约束"><a href="#撤销-PRIMARY-KEY-约束" class="headerlink" title="撤销 PRIMARY KEY 约束"></a>撤销 PRIMARY KEY 约束</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- MySQL 中</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 表名 <span class="keyword">drop</span> PRIMARY <span class="keyword">KEY</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- SQL Sever / Oracle / MS Access 中</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 表名 <span class="keyword">drop</span> <span class="keyword">constraint</span> 主键名；</span><br></pre></td></tr></table></figure><h2 id="FOREIGN-KEY-外键约束"><a href="#FOREIGN-KEY-外键约束" class="headerlink" title="FOREIGN KEY 外键约束"></a>FOREIGN KEY 外键约束</h2><p>一个表中的 FOREIGN KEY  指向另一个表中的 PRIMARY KEY 。</p><p>FOREIGN KEY 约束用于预防破坏表之间连接的动作。</p><p>FOREIGN KEY 约束也能防止非法数据插入外键列，因为它必须是它指向的那个表中的值之一。</p><h3 id="创建表时添加-FOREIGN-KEY-约束"><a href="#创建表时添加-FOREIGN-KEY-约束" class="headerlink" title="创建表时添加 FOREIGN KEY  约束"></a>创建表时添加 FOREIGN KEY  约束</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--MySQL中</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> Orders</span><br><span class="line">(</span><br><span class="line">Id_O <span class="built_in">int</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">OrderNo <span class="built_in">int</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">Id_P <span class="built_in">int</span>,</span><br><span class="line">PRIMARY <span class="keyword">KEY</span> (Id_O),</span><br><span class="line"><span class="keyword">FOREIGN</span> <span class="keyword">KEY</span> (另一个表的字段名) <span class="keyword">REFERENCES</span> 另一个表名(字段名)</span><br><span class="line">)；</span><br><span class="line"></span><br><span class="line"><span class="comment">--SQL Server / Oracle / MS Access 中</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> Orders</span><br><span class="line">(</span><br><span class="line">Id_O <span class="built_in">int</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> PRIMARY <span class="keyword">KEY</span>,</span><br><span class="line">OrderNo <span class="built_in">int</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">字段名 <span class="built_in">int</span> <span class="keyword">FOREIGN</span> <span class="keyword">KEY</span> <span class="keyword">REFERENCES</span> 另一个表名(字段名)</span><br><span class="line">)；</span><br><span class="line"><span class="comment">------------------------------------</span></span><br><span class="line"><span class="comment">--如果需要重命名 FOREIGN KEY 约束，以及为多个列定义 FOREIGN KEY 约束</span></span><br><span class="line"><span class="comment">--MySQL / SQL Server / Oracle / MS Access 中</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> Orders</span><br><span class="line">(</span><br><span class="line">Id_O <span class="built_in">int</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">OrderNo <span class="built_in">int</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">Id_P <span class="built_in">int</span>,</span><br><span class="line">PRIMARY <span class="keyword">KEY</span> (Id_O),</span><br><span class="line"><span class="keyword">CONSTRAINT</span> fk_PerOrders <span class="keyword">FOREIGN</span> <span class="keyword">KEY</span> (Id_P)</span><br><span class="line"><span class="keyword">REFERENCES</span> Persons(Id_P)</span><br><span class="line">)；</span><br></pre></td></tr></table></figure><h3 id="已经存在表的-FOREIGN-KEY-约束"><a href="#已经存在表的-FOREIGN-KEY-约束" class="headerlink" title="已经存在表的 FOREIGN KEY 约束"></a>已经存在表的 FOREIGN KEY 约束</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--如果是单列添加 FOREIGN KEY </span></span><br><span class="line"><span class="comment">-- MySQL / SQL Server / Oracle / MS Access 中</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> Orders</span><br><span class="line"><span class="keyword">ADD</span> <span class="keyword">FOREIGN</span> <span class="keyword">KEY</span> (Id_P)</span><br><span class="line"><span class="keyword">REFERENCES</span> Persons(Id_P)；</span><br><span class="line"></span><br><span class="line"><span class="comment">--如果需要重命名 FOREIGN KEY 约束，以及为多个列定义 FOREIGN KEY 约束，MySQL / SQL Server / Oracle / MS Access 中</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> Orders</span><br><span class="line"><span class="keyword">ADD</span> <span class="keyword">CONSTRAINT</span> fk_PerOrders</span><br><span class="line"><span class="keyword">FOREIGN</span> <span class="keyword">KEY</span> (Id_P)</span><br><span class="line"><span class="keyword">REFERENCES</span> Persons(Id_P)；</span><br></pre></td></tr></table></figure><h3 id="撤销-FOREIGN-KEY-约束"><a href="#撤销-FOREIGN-KEY-约束" class="headerlink" title="撤销 FOREIGN KEY 约束"></a>撤销 FOREIGN KEY 约束</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- MySQL中</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 表名 <span class="keyword">drop</span> <span class="keyword">FOREIGN</span> <span class="keyword">KEY</span> 外键名；</span><br><span class="line"></span><br><span class="line"><span class="comment">-- SQL Server / Oracle / MS Access 中</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 表名 <span class="keyword">drop</span> <span class="keyword">constraint</span> 外键名；</span><br></pre></td></tr></table></figure><h2 id="CHECK-检查约束"><a href="#CHECK-检查约束" class="headerlink" title="CHECK 检查约束"></a>CHECK 检查约束</h2><p>CHECK  约束用于限制列中的值的范围。只允许这个列特定的值。</p><h3 id="创建表时添加-CHECK-约束"><a href="#创建表时添加-CHECK-约束" class="headerlink" title="创建表时添加 CHECK  约束"></a>创建表时添加 CHECK  约束</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- MySQL 中</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> Persons</span><br><span class="line">(</span><br><span class="line">Id_P <span class="built_in">int</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">LastName <span class="built_in">varchar</span>(<span class="number">255</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">FirstName <span class="built_in">varchar</span>(<span class="number">255</span>),</span><br><span class="line">Address <span class="built_in">varchar</span>(<span class="number">255</span>),</span><br><span class="line">City <span class="built_in">varchar</span>(<span class="number">255</span>),</span><br><span class="line"><span class="keyword">CHECK</span> (Id_P&gt;<span class="number">0</span>)</span><br><span class="line">)；</span><br><span class="line"></span><br><span class="line"><span class="comment">--SQL Server / Oracle / MS Access 中</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> Persons</span><br><span class="line">(</span><br><span class="line">Id_P <span class="built_in">int</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">CHECK</span> (Id_P&gt;<span class="number">0</span>),</span><br><span class="line">LastName <span class="built_in">varchar</span>(<span class="number">255</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">FirstName <span class="built_in">varchar</span>(<span class="number">255</span>),</span><br><span class="line">Address <span class="built_in">varchar</span>(<span class="number">255</span>),</span><br><span class="line">City <span class="built_in">varchar</span>(<span class="number">255</span>)</span><br><span class="line">)；</span><br><span class="line"></span><br><span class="line"><span class="comment">-----------------------------------</span></span><br><span class="line"><span class="comment">--如果需要命名 CHECK 约束，以及为多个列定义 CHECK 约束</span></span><br><span class="line"><span class="comment">--MySQL / SQL Server / Oracle / MS Access 中</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> Persons</span><br><span class="line">(</span><br><span class="line">Id_P <span class="built_in">int</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">LastName <span class="built_in">varchar</span>(<span class="number">255</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">FirstName <span class="built_in">varchar</span>(<span class="number">255</span>),</span><br><span class="line">Address <span class="built_in">varchar</span>(<span class="number">255</span>),</span><br><span class="line">City <span class="built_in">varchar</span>(<span class="number">255</span>),</span><br><span class="line"><span class="keyword">CONSTRAINT</span> chk_Person <span class="keyword">CHECK</span> (Id_P&gt;<span class="number">0</span> <span class="keyword">AND</span> City=<span class="string">&#x27;Sandnes&#x27;</span>)</span><br><span class="line">)；</span><br></pre></td></tr></table></figure><h3 id="已经存在表时的-CHECK-约束"><a href="#已经存在表时的-CHECK-约束" class="headerlink" title="已经存在表时的 CHECK 约束"></a>已经存在表时的 CHECK 约束</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 添加 CHECK 约束</span></span><br><span class="line"><span class="comment">-- MySQL / SQL Server / Oracle / MS Access 中</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 表名 <span class="keyword">add</span> <span class="keyword">check</span> (字段条件);</span><br><span class="line"></span><br><span class="line"><span class="comment">--如果需要命名 CHECK 约束，以及为多个列定义 CHECK 约束，MySQL / SQL Server / Oracle / MS Access 中 </span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> Persons</span><br><span class="line"><span class="keyword">ADD</span> <span class="keyword">CONSTRAINT</span> chk_Person <span class="keyword">CHECK</span> (Id_P&gt;<span class="number">0</span> <span class="keyword">AND</span> City=<span class="string">&#x27;Sandnes&#x27;</span>)；</span><br></pre></td></tr></table></figure><h3 id="撤销-CHECK-约束"><a href="#撤销-CHECK-约束" class="headerlink" title="撤销 CHECK 约束"></a>撤销 CHECK 约束</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- SQL Sever / Oracle / MS Access </span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 表名 <span class="keyword">drop</span> <span class="keyword">constraint</span> <span class="keyword">check</span>约束名；</span><br><span class="line"></span><br><span class="line"><span class="comment">-- MySQL 中</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 表名 <span class="keyword">drop</span> <span class="keyword">CHECK</span> <span class="keyword">check</span>约束名；</span><br></pre></td></tr></table></figure><h2 id="DEFAULT-默认约束"><a href="#DEFAULT-默认约束" class="headerlink" title="DEFAULT 默认约束"></a>DEFAULT 默认约束</h2><p>DEFAULT 约束用于向列中插入默认值。如果没有指定其他的值，那么会默认值添加到所有的新纪录中</p><h3 id="创建表时添加-DEFAULT-约束"><a href="#创建表时添加-DEFAULT-约束" class="headerlink" title="创建表时添加 DEFAULT 约束"></a>创建表时添加 DEFAULT 约束</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--MySQL / SQL Sever / Oracle / MS Access 中</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> Persons</span><br><span class="line">(</span><br><span class="line">Id_P <span class="built_in">int</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">LastName <span class="built_in">varchar</span>(<span class="number">255</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">FirstName <span class="built_in">varchar</span>(<span class="number">255</span>),</span><br><span class="line">Address <span class="built_in">varchar</span>(<span class="number">255</span>),</span><br><span class="line">City <span class="built_in">varchar</span>(<span class="number">255</span>) <span class="keyword">DEFAULT</span> <span class="string">&#x27;Sandnes&#x27;</span></span><br><span class="line">)；</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 通过使用类似getdate() 这样的函数，DEFAULT 约束也可以用于插入系统值</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> Orders</span><br><span class="line">(</span><br><span class="line">Id_O <span class="built_in">int</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">OrderNo <span class="built_in">int</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">Id_P <span class="built_in">int</span>,</span><br><span class="line">OrderDate <span class="built_in">date</span> <span class="keyword">DEFAULT</span> <span class="keyword">GETDATE</span>()</span><br><span class="line">)；</span><br></pre></td></tr></table></figure><h3 id="已经存在表时的-CHECK-约束-1"><a href="#已经存在表时的-CHECK-约束-1" class="headerlink" title="已经存在表时的 CHECK 约束"></a>已经存在表时的 CHECK 约束</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- MySQL 中</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 表名 <span class="keyword">alter</span> 字段名 <span class="keyword">set</span> <span class="keyword">DEFAULT</span> ‘默认值’；</span><br><span class="line"></span><br><span class="line"><span class="comment">--SQL Server / Oracle / MS Access 中</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> 表名 <span class="keyword">ALTER</span> <span class="keyword">COLUMN</span> 字段名 <span class="keyword">SET</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;默认值&#x27;</span>；</span><br></pre></td></tr></table></figure><h3 id="撤销-DEFAULT-约束"><a href="#撤销-DEFAULT-约束" class="headerlink" title="撤销 DEFAULT 约束"></a>撤销 DEFAULT 约束</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- MySQL 中</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 表名 <span class="keyword">alter</span> 字段名 <span class="keyword">drop</span> <span class="keyword">DEFAULT</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">--SQL Server / Oracle / MS Access 中</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 表名 <span class="keyword">alter</span> <span class="keyword">column</span> 字段名 <span class="keyword">drop</span> <span class="keyword">DEFAULT</span>;</span><br></pre></td></tr></table></figure><h1 id="Date-函数"><a href="#Date-函数" class="headerlink" title="Date 函数"></a>Date 函数</h1><h2 id="SQL-日期"><a href="#SQL-日期" class="headerlink" title="SQL 日期"></a>SQL 日期</h2><p>当我们处理日期时，最难的任务恐怕是确保所插入的日期的格式，与数据库中日期列的格式相匹配。只要数据包含的知识日期部分，运行查询就不会出现问题。但是，如果涉及时间，情况就有点复杂了。</p><p>最重要的是内建日期处理函数。</p><h2 id="MySQL-Date-函数"><a href="#MySQL-Date-函数" class="headerlink" title="MySQL  Date 函数"></a>MySQL  Date 函数</h2><table><thead><tr><th>函数</th><th>描述</th></tr></thead><tbody><tr><td>NOW ()</td><td>返回当前的日期和时间</td></tr><tr><td>CURDATE ()</td><td>返回当前的日期</td></tr><tr><td>CURTIME ()</td><td>返回当前的时间</td></tr><tr><td>DATE ()</td><td>提取日期或日期/时间表达式的日期部分</td></tr><tr><td>EXTRACT ()</td><td>返回日期/时间按的单独部分</td></tr><tr><td>DATE_ADD ()</td><td>给日期添加指定的时间间隔</td></tr><tr><td>DATE_SUB ()</td><td>从日期减去指定的时间间隔</td></tr><tr><td>DATEDIFF ()</td><td>返回两个日期之间的天数</td></tr><tr><td>DATE_FORMAT ()</td><td>用不同的格式显示日期/时间</td></tr></tbody></table><h2 id="SQL-Sever-Date-函数"><a href="#SQL-Sever-Date-函数" class="headerlink" title="SQL Sever Date 函数"></a>SQL Sever Date 函数</h2><table><thead><tr><th align="left">函数</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">GETDATE ()</td><td align="left">返回当前日期和时间</td></tr><tr><td align="left">DATEPART ()</td><td align="left">返回日期/时间的单独部分</td></tr><tr><td align="left">DATEADD ()</td><td align="left">在日期中添加或减去指定的时间间隔</td></tr><tr><td align="left">DATEDIFF ()</td><td align="left">返回两个日期之间的时间</td></tr><tr><td align="left">CONVERT ()</td><td align="left">用不同的格式显示日期/时间</td></tr></tbody></table><h2 id="SQL-Date-数据类型"><a href="#SQL-Date-数据类型" class="headerlink" title="SQL Date 数据类型"></a>SQL Date 数据类型</h2><p>MySQL 使用下列数据类型在数据库中存储日期或日期/时间值：</p><ul><li>DATE - 格式 YYYY-MM-DD</li><li>DATETIME - 格式 YYYY-MM-DD HH:MM:SS</li><li>TIMESTAMP - 格式 YYYY-MM-DD HH:MM:SS</li><li>YEAR - 格式 YYYY 或者 YY</li></ul><p>SQL Sever 使用下列数据类型再数据库中存储日期或日期/时间值：</p><ul><li>DATE - 格式 YYYY-MM-DD</li><li>DATETIME - 格式 YYYY-MM-DD HH:MM:SS</li><li>SMALLDATETIME - 格式 YYYY-MM-DD HH:MM:SS</li><li>TIMESTAMP - 格式：唯一的数字</li></ul><h2 id="SQL-日期处理"><a href="#SQL-日期处理" class="headerlink" title="SQL 日期处理"></a>SQL 日期处理</h2><p>注意：尽量不要使用时间部分，这样的话查询更容易，且维护起来也更容易。</p><h1 id="SQL-NULL-值"><a href="#SQL-NULL-值" class="headerlink" title="SQL NULL 值"></a>SQL NULL 值</h1><h2 id="IS-NULL-与-IS-NOT-NULL"><a href="#IS-NULL-与-IS-NOT-NULL" class="headerlink" title="IS NULL 与 IS NOT NULL"></a>IS NULL 与 IS NOT NULL</h2><p>NULL 值是遗漏的位置数据。默认地，表的列可以存放 NULL 值。</p><p>使用 IS NULL 得到列中的值是为NULL ，不能使用运算符：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> 表名 <span class="keyword">where</span> 字段名 <span class="keyword">IS</span> <span class="literal">NULL</span>; </span><br></pre></td></tr></table></figure><p>使用 IS NOT NULL 得到列中的值不为 NULL ：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> 表名 <span class="keyword">where</span> 字段名 <span class="keyword">IS</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>; </span><br></pre></td></tr></table></figure><h2 id="SQL-ISNULL-等函数"><a href="#SQL-ISNULL-等函数" class="headerlink" title="SQL ISNULL () 等函数"></a>SQL ISNULL () 等函数</h2><p>​    SQL ISNULL()  —微软的、NVL() —-Oracle的 、IFNULL() 、COALESCE () 这两个是MySQL的 函数。</p><p>计算字段为空处的值。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--SQL Server / MS Access中 </span></span><br><span class="line"><span class="keyword">SELECT</span> ProductName,UnitPrice*(UnitsInStock+<span class="keyword">ISNULL</span>(UnitsOnOrder,<span class="number">0</span>))</span><br><span class="line"><span class="keyword">FROM</span> Products</span><br><span class="line"></span><br><span class="line"><span class="comment">-- Oracle 中没有ISNULL() 函数。是用NVL()</span></span><br><span class="line"><span class="keyword">SELECT</span> ProductName,UnitPrice*(UnitsInStock+NVL(UnitsOnOrder,<span class="number">0</span>))</span><br><span class="line"><span class="keyword">FROM</span> Products</span><br><span class="line"></span><br><span class="line"><span class="comment">--MySQL中，用IFNULL();</span></span><br><span class="line"><span class="keyword">SELECT</span> ProductName,UnitPrice*(UnitsInStock+<span class="keyword">IFNULL</span>(UnitsOnOrder,<span class="number">0</span>))</span><br><span class="line"><span class="keyword">FROM</span> Products</span><br><span class="line"><span class="comment">----或者</span></span><br><span class="line"><span class="keyword">SELECT</span> ProductName,UnitPrice*(UnitsInStock+<span class="keyword">COALESCE</span>(UnitsOnOrder,<span class="number">0</span>))</span><br><span class="line"><span class="keyword">FROM</span> Products</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="SQL-服务器-–RDBMS"><a href="#SQL-服务器-–RDBMS" class="headerlink" title="SQL 服务器 –RDBMS"></a>SQL 服务器 –RDBMS</h1><p>现代的 SQL 服务器构建在 RDBMS 之上。</p><h2 id="DBMS-数据库管理系统（Database-Management-System）"><a href="#DBMS-数据库管理系统（Database-Management-System）" class="headerlink" title="DBMS - 数据库管理系统（Database Management System）"></a>DBMS - 数据库管理系统（Database Management System）</h2><p>数据库管理系统是一种可以访问数据库中数据的计算机程序。</p><p>DBMS 使我们有能力在数据库中提取、修改或者存贮信息。</p><p>不同的 DBMS 提供不同的函数供查询、提交以及修改数据。</p><h2 id="RDBMS-关系数据库管理系统（Relational-Database-Management-System）"><a href="#RDBMS-关系数据库管理系统（Relational-Database-Management-System）" class="headerlink" title="RDBMS - 关系数据库管理系统（Relational Database Management System）"></a>RDBMS - 关系数据库管理系统（Relational Database Management System）</h2><p>关系数据库管理系统 (RDBMS) 也是一种数据库管理系统，其数据库是根据数据间的关系来组织和访问数据的。</p><p>20 世纪 70 年代初，IBM 公司发明了 RDBMS。</p><p>RDBMS 是 SQL 的基础，也是所有现代数据库系统诸如 Oracle、SQL Server、IBM DB2、Sybase、MySQL 以及 Microsoft Access 的基础。</p>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SQL基础-01</title>
      <link href="2019/04/02/SQL%E5%9F%BA%E7%A1%80-01/"/>
      <url>2019/04/02/SQL%E5%9F%BA%E7%A1%80-01/</url>
      
        <content type="html"><![CDATA[<h1 id="一、什么是SQL？"><a href="#一、什么是SQL？" class="headerlink" title="一、什么是SQL？"></a>一、什么是SQL？</h1><ul><li>SQL 指结构化查询语言</li><li>SQL 是我们有能力访问数据库</li><li>SQL 是一种 ANSI 的标准计算机语言    （ANSI，美国国家标准化组织） </li></ul><a id="more"></a><h1 id="二、SQL能做什么？"><a href="#二、SQL能做什么？" class="headerlink" title="二、SQL能做什么？"></a>二、SQL能做什么？</h1><ul><li>SQL 面向数据库执行查询</li><li>SQL 可从数据库取回数据</li><li>SQL 可在数据库中插入新的记录</li><li>SQL 可更新数据库中的数据</li><li>SQL 可从数据库中删除数据</li><li>SQL 可创建新数据库</li><li>SQL 可在数据库中创建新表</li><li>SQL 可在数据库中创建存储过程</li><li>SQL 可在数据库中创建视图</li><li>SQL 可以设置表、存储过程和视图的权限</li></ul><h1 id="三、RDBMS"><a href="#三、RDBMS" class="headerlink" title="三、RDBMS"></a>三、RDBMS</h1><p>RDBMS 指的是 关系型数据库管理系统</p><p>RDBMS 是 SQL 的基础，同样也是所有现代数据库系统的基础，比如 MS SQL Server 、IBM DB2 、Oracle 、MySQL 以及 Microsoft Access 。</p><p>RDBMS 中的数据存储在被称为表（table）的数据库对象中。</p><p>表是相关的数据项的集合，它由列和行组成。</p><h1 id="四、SQL-–结构化查询语句"><a href="#四、SQL-–结构化查询语句" class="headerlink" title="四、SQL –结构化查询语句"></a>四、SQL –结构化查询语句</h1><p>SQL（结构化查询语句）是用于执行查询的语法。但是SQL语言也包含用于更新、插入和删除记录的语法。</p><h2 id="DML-数据操作语言-查询和更新指令构成了-SQL-的-DML-部分："><a href="#DML-数据操作语言-查询和更新指令构成了-SQL-的-DML-部分：" class="headerlink" title="DML (数据操作语言) -查询和更新指令构成了 SQL 的 DML 部分："></a>DML (数据操作语言) -查询和更新指令构成了 SQL 的 DML 部分：</h2><ul><li><p>SELECT - 从数据库表中获取数据</p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> 表名；</span><br><span class="line"></span><br><span class="line"><span class="comment">--去重查询</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">distinct</span> 字段名 <span class="keyword">from</span> 表名；</span><br></pre></td></tr></table></figure></li><li><p>UPDATE - 更细数据库表中的数据</p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--更新某一行的一个列</span></span><br><span class="line"><span class="keyword">update</span> 表名 <span class="keyword">set</span> 字段名 = 新值 <span class="keyword">where</span> 字段名 = 某值；</span><br><span class="line"></span><br><span class="line"><span class="comment">--更新某一行的若干列</span></span><br><span class="line"><span class="keyword">update</span> 表名 <span class="keyword">set</span> 字段名<span class="number">1</span> = 新值，字段名<span class="number">2</span> = 新值 <span class="keyword">where</span> 字段名 = 某值； </span><br></pre></td></tr></table></figure></li><li><p>DELETE - 从数据库中删除数据</p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--删除所有</span></span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> 表名;</span><br><span class="line"></span><br><span class="line"><span class="comment">--删除行</span></span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> 表名 <span class="keyword">where</span> 字段名 = 值；</span><br></pre></td></tr></table></figure></li><li><p>INSERT INTO - 向数据库表中插入数据</p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--全字段添加</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> 表名 <span class="keyword">values</span> (值<span class="number">1</span>，值<span class="number">2</span>，值<span class="number">3</span>，...);</span><br><span class="line"></span><br><span class="line"><span class="comment">--指定字段添加</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> 表名 (字段<span class="number">1</span>，字段<span class="number">2</span>，...) <span class="keyword">values</span> (值<span class="number">1</span>，值<span class="number">2</span>，...);</span><br></pre></td></tr></table></figure></li></ul><p>SQL 的数据定义语言（DDL）部分使我们有能力创建或删除表格。我们也可以定义索引（键），规定表之间的链接，以及施加表间的约束。</p><h2 id="SQL-中最重要的-DDL-数据定义语言"><a href="#SQL-中最重要的-DDL-数据定义语言" class="headerlink" title="SQL 中最重要的 DDL (数据定义语言)"></a>SQL 中最重要的 DDL (数据定义语言)</h2><ul><li><p>CREATE DATABASE - 创建新数据库</p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">database</span> 数据库名；</span><br></pre></td></tr></table></figure></li><li><p>ALTER DATABASE - 修改数据库</p></li><li><p>DROP DATABASE - 删除数据库</p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">drop</span> <span class="keyword">database</span> 数据库名称；</span><br></pre></td></tr></table></figure></li><li><p>CREATE TABLE - 创建新表</p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> 表名 (字段名<span class="number">1</span> 数据类型，字段名<span class="number">2</span> 数据类型，字段名<span class="number">3</span> 数据类型，.....)</span><br></pre></td></tr></table></figure></li><li><p>ALTER TABLE - 变更（改变）数据库表</p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 添加字段</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 表名 <span class="keyword">add</span> 字段名 数据类型</span><br><span class="line"></span><br><span class="line"><span class="comment">--删除字段  --某些数据库系统不允许在这种数据库表中删除列的方式</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 表名 <span class="keyword">drop</span> <span class="keyword">column</span> 字段名</span><br><span class="line"></span><br><span class="line"><span class="comment">--改变表中列的数据类型</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 表名 <span class="keyword">alter</span> <span class="keyword">column</span> 字段名 数据类型</span><br></pre></td></tr></table></figure></li><li><p>DROP TABLE - 删除表</p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">//删除表（包括表的结构、属性以及索引都会删除）</span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> 表名；</span><br><span class="line"></span><br><span class="line">//只是删除表内数据，不删除表本身</span><br><span class="line"><span class="keyword">TRUNCATE</span> <span class="keyword">table</span> 表名；</span><br></pre></td></tr></table></figure></li><li><p>CREATE INDEX - 创建索引（搜索键）</p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">index</span> 下标名；</span><br></pre></td></tr></table></figure></li><li><p>DROP INDEX -删除索引</p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--Microsoft SQLjet</span></span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">index</span> 索引名 <span class="keyword">on</span> 表名；</span><br><span class="line"></span><br><span class="line"><span class="comment">--MS SQL Sever</span></span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">index</span> 表名.下标名；</span><br><span class="line"></span><br><span class="line"><span class="comment">--IBM DB2 和 Oracle 语法</span></span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">index</span> 下标名；</span><br><span class="line"></span><br><span class="line"><span class="comment">--MySQL </span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> 表名 <span class="keyword">drop</span> <span class="keyword">index</span> 下标名；</span><br></pre></td></tr></table></figure></li></ul><h1 id="五、SQL-基础"><a href="#五、SQL-基础" class="headerlink" title="五、SQL 基础"></a>五、SQL 基础</h1><h2 id="where-子句"><a href="#where-子句" class="headerlink" title="where 子句"></a>where 子句</h2><p>​    有条件的从表中选取数据，可将 where 子句添加到 select 语句中。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> 字段名 <span class="keyword">from</span> 表名 <span class="keyword">where</span> 字段名 运算符 值</span><br></pre></td></tr></table></figure><h2 id="and-和-or-运算符"><a href="#and-和-or-运算符" class="headerlink" title="and  和 or 运算符"></a>and  和 or 运算符</h2><p>​    条件语句取交集或者并集的关系运算符</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> 表名 <span class="keyword">where</span> 条件<span class="number">1</span> <span class="keyword">and</span> 条件<span class="number">2</span> <span class="keyword">or</span> 条件<span class="number">1</span> </span><br></pre></td></tr></table></figure><h2 id="order-by-语句"><a href="#order-by-语句" class="headerlink" title="order by 语句"></a>order by 语句</h2><p>​    order by 语句用于对结果集进行排序，默认是按照升序（ASC）排序，如果需要降序使用DESC。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> 表名 <span class="keyword">order</span> <span class="keyword">by</span> 字段名 （ <span class="keyword">asc</span> <span class="keyword">or</span> <span class="keyword">desc</span> ）</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java-Review01</title>
      <link href="2019/04/01/Java-Review01/"/>
      <url>2019/04/01/Java-Review01/</url>
      
        <content type="html"><![CDATA[<h1 id="一、原码，反码和补码"><a href="#一、原码，反码和补码" class="headerlink" title="一、原码，反码和补码"></a>一、原码，反码和补码</h1><p>计算机内存中，都是二进制的形式来存储数据。</p><ul><li>正整数的原码、补码、反码是一样的。</li><li>负整数的原码，最高位是符号位，1为负，0为正数。反码是原码按位取反，符号位不变。补码是反码加1。</li></ul><a id="more"></a><h1 id="二、计算机中数据存储单位"><a href="#二、计算机中数据存储单位" class="headerlink" title="二、计算机中数据存储单位"></a>二、计算机中数据存储单位</h1><ul><li>8 bit = 1 Byte 一个字节 【操作内存的最小单元】</li><li>1024 Byte = 1 KB</li><li>1024 KB = 1 MB</li><li>1024 MB = 1 GB</li><li>1024 GB = 1 TB</li><li>1024 TB = 1 PB</li></ul><h1 id="三、标识符"><a href="#三、标识符" class="headerlink" title="三、标识符"></a>三、标识符</h1><p>Java中，自定义标识符需要<strong>注意事项</strong>：</p><ol><li>标识符的组成是字母、数字和下划线。</li><li>标识符不能用数字开头。</li><li>在Java中严格区分大小写。</li><li>在发开中没有长度限制。</li><li>尽量做到见名知意。</li><li>Java内部已有的 关键字 和 保留字 不能用于自定义标识符。Byte 、int 、long  、this 、main</li></ol><p><strong>规范</strong>：</p><ul><li>方法名，变量名，按照小驼峰命名法。</li><li>类名，接口名，按照大驼峰命名法。</li><li>包名：必须全部小写。</li></ul><h1 id="四、变量"><a href="#四、变量" class="headerlink" title="四、变量"></a>四、变量</h1><p>定义：变量就是在程序运行中可以发生改变的量</p><p>变量就是一个存储数据的<strong>容器</strong></p><p><strong>容器</strong>的特点：</p><ol><li>占据一定的空间—电脑内存中的空间</li><li>存储一定格式的数据</li><li>名字–标识符</li></ol><p><strong>Java中八大基本数据类型：</strong></p><ul><li>byte 1字节 8位有符号的整数类型：-128~127</li><li>short 2字节 16位有符号的整数类型：-32768~32767</li><li>int 4字节 32位有符号的整数类型：大概-20亿~20亿</li><li>long 8字节 64位有符号的整数类型：-2^63~2^63-1  很多很多。。</li><li>float 4字节 小数类型：10^-38<del>10^38   和  -10^-38</del>-10^38</li><li>double 8字节 小数类型：10^-308<del>10^308 和  -10^-308</del>-10^308</li><li>boolean  两个值：false 、true</li><li>char 2字节 字符类型</li></ul><h1 id="五、运算符"><a href="#五、运算符" class="headerlink" title="五、运算符"></a>五、运算符</h1><h2 id="1、算术运算符"><a href="#1、算术运算符" class="headerlink" title="1、算术运算符"></a>1、算术运算符</h2><p>​            % 取余操作能够使用的是整数数据类型。/ 是除以。</p><h2 id="2、关系运算符"><a href="#2、关系运算符" class="headerlink" title="2、关系运算符"></a>2、关系运算符</h2><p>​            &lt;  、&gt; 、 &gt;=、  &lt;= 、 ==、 != 等。</p><h2 id="3、逻辑运算符"><a href="#3、逻辑运算符" class="headerlink" title="3、逻辑运算符"></a>3、逻辑运算符</h2><p>​            &amp; 和 &amp;&amp; 、| 和 || 、！</p><p>​            &amp; 左右都需要判断，&amp;&amp; 短路与，左边满足就不判断右边了。| 和 || 短路或同理。</p><p>​            ！ 取非，取反。</p><h2 id="4、三目运算符"><a href="#4、三目运算符" class="headerlink" title="4、三目运算符"></a>4、三目运算符</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//条件？ 语句 1 ：语句 2 ；</span></span><br><span class="line">a &gt; b ? x = <span class="number">1</span>: x = <span class="number">2</span>;</span><br><span class="line"><span class="comment">//分析，如果 a 大于 b ，那么 x 赋值为1，否者赋值为2</span></span><br></pre></td></tr></table></figure><h1 id="六、分支与循环"><a href="#六、分支与循环" class="headerlink" title="六、分支与循环"></a>六、分支与循环</h1><h2 id="1、分支"><a href="#1、分支" class="headerlink" title="1、分支"></a>1、分支</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//if判断</span></span><br><span class="line"><span class="keyword">if</span>  () &#123;</span><br><span class="line"><span class="comment">//语句</span></span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span>&#123;</span><br><span class="line"><span class="comment">//语句</span></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="comment">//语句</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//switch -case </span></span><br><span class="line"><span class="keyword">switch</span> () &#123;</span><br><span class="line">    <span class="keyword">case</span> 值<span class="number">1</span>:</span><br><span class="line">        处理方式<span class="number">1</span>；</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> 值<span class="number">2</span>:         </span><br><span class="line">        处理方式<span class="number">2</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">        最终处理方式；</span><br><span class="line">     <span class="keyword">break</span> ；</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2、循环结构"><a href="#2、循环结构" class="headerlink" title="2、循环结构"></a>2、循环结构</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//while</span></span><br><span class="line"><span class="keyword">while</span>(条件)&#123;</span><br><span class="line">    <span class="comment">//循环体</span></span><br><span class="line">    （循环条件变更）</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//do</span></span><br><span class="line"><span class="keyword">do</span>&#123;</span><br><span class="line">   <span class="comment">//循环体</span></span><br><span class="line">    （条件变更）</span><br><span class="line">&#125; <span class="keyword">while</span> (条件);</span><br><span class="line"></span><br><span class="line"><span class="comment">//for</span></span><br><span class="line"><span class="keyword">for</span>(循环条件初始化；循环条件判断；循环条件变更) &#123;</span><br><span class="line">    <span class="comment">//循环体</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3、break-关键字-与-continue-关键字的区别"><a href="#3、break-关键字-与-continue-关键字的区别" class="headerlink" title="3、break 关键字 与 continue 关键字的区别"></a>3、break 关键字 与 continue 关键字的区别</h2><p>break 是在循环中跳出循环，在 if 判断中，跳出上一层级的循环结构</p><p>continue 是结束本次循环，continue 后面的代码不再执行，执行新的依次循环。<strong>并且在 for 循环中，第三个条件–循环条件的变更可以认为不是循环体，是必须运行的语句，可以不受 continue 的影响。</strong></p>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>50公里徒步有感</title>
      <link href="2019/03/31/Life-50%E5%85%AC%E9%87%8C%E5%BE%92%E6%AD%A5%E6%9C%89%E6%84%9F/"/>
      <url>2019/03/31/Life-50%E5%85%AC%E9%87%8C%E5%BE%92%E6%AD%A5%E6%9C%89%E6%84%9F/</url>
      
        <content type="html"><![CDATA[<p>​    今天是2019/03/31，50公里徒步已经是昨天的事情了。为什么今天才写这篇心得呢？–因为昨天真的是太累了啊！！！！</p><a id="more"></a><p>​    早上6点不到，已经被室友叫起来了。宿舍离公司有点距离，还得洗漱、吃早餐，所以，得抓紧时间。6.15准时出门，早餐就在楼下包子店买了两个包子解决了。</p><p>​    周末的早晨，人真的少~路上没啥行人，车流量也不像平时。今天的空气感觉格外清新！天气还不错，体感温度20度，很适合外出的日子。果然还是应该多出来溜达溜达，下礼拜放假，感觉可以来一波“寻味顺德”了，扯远了。。</p><p>​    到了公司被告知司机闹钟没响，这就很烦了，等司机一小时，终于，辣个男人出现了。上车，我们终于出发了。</p><p>​    到了出发点德胜广场，真的被惊呆了。人<del>真</del>多~啊！！话不多说，拍照，出发！</p><p>​    前两签还有点小兴奋，一路边走边看，体验风土人情，特别是第二签，签点设在伦教678纪念碑。参观了纪念碑，街边很多的小吃呀！</p><p>看起来都想吃，最后买了一碗牛杂，略贵啊，感觉没有宣传视频里辣么多，估计是扛机器的人才拥有满满一大碗的特权吧，不过味道还是不错的。</p><p>​    <img src=https://gitee.com/gek7777/cdn.io/raw/master/image/20190331-6.jpg ></p><p>顺便一提，伦教的生态环境挺好的，小河里有好多鱼。</p><p>​    酒足饭饱之后又休息了一会，上路，这时候真是竹杖芒鞋轻胜马啊！过大桥有点堵，还有点小刺激，特别是重卡在旁边驶过，整个桥都会跟着一起抖动，大家也都是发出了小声的惊呼。    </p><p>没多久，到了第三签，西海亲水平台，简单的休息调整。到了这里，公司定的小目标算是完成了，但是我们都意犹未尽，而且觉得自己的状态还可以，想要继续走下去。</p><p>​    再走五公里，也就到了第四签，君兰河岸公园，这个时候有点状态跟不上了。28KM 加上早上出门的2公里，已经整整30公里了。身体有点吃不消了，我可以很明显的感受到自己的身体内每一个细已经在燃烧了，气息也有点乱了，我低着头，尽力地消除这种感觉。但是距离下一签整整9公里，我觉得需要每三公里休息十五分钟，队长不愿意浪费时间，提前走了。所以我跟其他两名很少锻炼的队员艰难地前行，路上我们互相鼓励，制定休息计划。幸好有热心的居民有偿提供能量饮料，这个时候的一罐可口可乐真的是拯救了我。</p><p>途中三次遇到近距离飞过的飞机~呼啸着，从头顶略过。我这个时候表示，我实名制羡慕啊！！！</p><p>还剩三公里的时候，我提议把路边的路灯看作一个目标，走完下一个目标就好。</p><p>​    就这样，苦苦支撑，我们到了第五签。此时是5:40分签到盖章，我就找了一块草坪躺下，全然不顾草里有没有小蚂蚁，也管不了刺挠的草尖透过衣服扎在皮肤痒痒的。我只是觉得，躺着真好！不想动了。</p><p>​    <img src=https://gitee.com/gek7777/cdn.io/raw/master/image/20190331-12.jpg ></p><p>​    我想休息15分钟，可是队长打算提前离开，所以我们又分开走了。15分钟过得太快了，眨眼即逝啊！等我踉跄地站起来，走路都一瘸一拐了。咬咬牙，心里一发狠，疼就随它吧！脚掌早就疼得麻木了，大腿内侧也是拉的酸疼不已。都快到终点了，坚持坚持！男人嘛，就怕别人说自己不行！</p><p>​    最后的五公里反而走得挺快的，可能是痛的已经麻木了，我反正是没啥感觉了，甚至还能小跑，不过这时候的小跑已经不能和平时相提并论了。</p><p>​    终于是到了。一路上的疲惫被瞬间爆棚的成就感一扫而光！赶紧拍照发朋友圈！哈哈哈哈哈~</p><p>​    <img src=https://gitee.com/gek7777/cdn.io/raw/master/image/20190331-18.jpg ></p><p>​    终点的人其实也挺多的，我还以为大部分的参与者应该不会走完全程，没想到，大家都这么厉害！</p><p>​    <img src=https://gitee.com/gek7777/cdn.io/raw/master/image/20190331-17.jpg ></p><p>​    总结一下，其实前面的25公里靠的体力，一般来说都没有问题，但是后面的25公里就是纯靠毅力了，稍微心思有那么一点点动摇，就会忍受不住想要休息，想要放弃。特别是在路上，每次看都撤离点的撤离车辆，我都会开玩笑地说：这就是人生道路上的诱惑，他们会给你好吃的东西，提供舒服的座椅，腐蚀你的信心，蚕食你的豪情壮志。成功的前提就是要抵抗住这些诱惑，坚毅的走向下一个目标！！</p><p>​    </p><p>​    </p>]]></content>
      
      
      <categories>
          
          <category> 生活 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 徒步 </tag>
            
            <tag> 锻炼 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Json-轻量级数据交换格式</title>
      <link href="2019/03/29/Json-%E8%BD%BB%E9%87%8F%E7%BA%A7%E6%95%B0%E6%8D%AE%E4%BA%A4%E6%8D%A2%E6%A0%BC%E5%BC%8F/"/>
      <url>2019/03/29/Json-%E8%BD%BB%E9%87%8F%E7%BA%A7%E6%95%B0%E6%8D%AE%E4%BA%A4%E6%8D%A2%E6%A0%BC%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<h1 id="前言："><a href="#前言：" class="headerlink" title="前言："></a>前言：</h1><p>JSON ：JavaScript Object  Notation  –  JS 对象简谱。一种理想的数据交换语言，是完全独立于编程语言的文本格式来储存和表示数据，易于人阅读和编写，同时也易于机器解析和生成。</p><p>​    <a id="more"></a></p><h1 id="JSON-语法"><a href="#JSON-语法" class="headerlink" title="JSON 语法"></a>JSON 语法</h1><h2 id="一、语法规则"><a href="#一、语法规则" class="headerlink" title="一、语法规则"></a>一、语法规则</h2><p>​    <strong>在 JS 语言中，一切都是对象。</strong>所以，任何类型都可以通过 JSON 来表示。</p><ul><li><p>对象表示为键值对，花括号表示对象。</p></li><li><p>数据由逗号分隔，方括号保存数组</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//对象</span></span><br><span class="line">&#123;<span class="string">&quot;key1&quot;</span> : <span class="string">&quot;value1&quot;</span>, <span class="string">&quot;key2&quot;</span> : <span class="string">&quot;value2&quot;</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//数组</span></span><br><span class="line">[<span class="string">&quot;value1&quot;</span>, <span class="string">&quot;value2&quot;</span>, <span class="string">&quot;value3&quot;</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment">//数组中的两个对象</span></span><br><span class="line">[&#123;<span class="string">&quot;key1&quot;</span> : <span class="string">&quot;value1&quot;</span>, <span class="string">&quot;key2&quot;</span> : <span class="string">&quot;value2&quot;</span>&#125;,&#123;<span class="string">&quot;key3&quot;</span> : <span class="string">&quot;value3&quot;</span>,  <span class="string">&quot;key4&quot;</span> : <span class="string">&quot;value4 &#125;]</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">//对象中的数组</span></span><br><span class="line"><span class="string">&#123;&quot;</span>name<span class="string">&quot; : &quot;</span>tom<span class="string">&quot;,&quot;</span>爱好<span class="string">&quot;: [&quot;</span>篮球<span class="string">&quot;，&quot;</span>足球<span class="string">&quot;，&quot;</span>跑步<span class="string">&quot;]&#125;</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="二、JSON-键-值对"><a href="#二、JSON-键-值对" class="headerlink" title="二、JSON 键/值对"></a>二、JSON 键/值对</h2><p>​    JSON 键值对是用来保存 JS 对象的一种方式，和 JS 对象的写法也差不多。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123; <span class="attr">&quot;firstName&quot;</span>: <span class="string">&quot;JSON&quot;</span> </span><br></pre></td></tr></table></figure><p>​    等价于JavaScript中的这条语句：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123; <span class="attr">firstName</span> : <span class="string">&quot;JSON&quot;</span> &#125;</span><br></pre></td></tr></table></figure><h2 id="三、JSON-和-JS-对象的关系"><a href="#三、JSON-和-JS-对象的关系" class="headerlink" title="三、JSON 和 JS 对象的关系"></a>三、JSON 和 JS 对象的关系</h2><p>​    **JSON 是 JS 对象的字符串表示法，它使用文本表示一个 JS 对象，本质是一个字符串。 **如：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> obj = &#123;<span class="attr">a</span>: <span class="string">&#x27;Hello&#x27;</span>,<span class="attr">b</span>: <span class="string">&#x27;Word&#x27;</span>&#125;;<span class="comment">//这是一个对象，键名也可以使用引号包裹</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> json = &#123;<span class="string">&quot;a&quot;</span>: <span class="string">&quot;Hello&quot;</span>, <span class="string">&quot;b&quot;</span>: <span class="string">&quot;Word&quot;</span>&#125;;<span class="comment">//这是一个 JSON 字符串，本质是一个字符串</span></span><br></pre></td></tr></table></figure><h2 id="四、JSON-和-JS-对象互转"><a href="#四、JSON-和-JS-对象互转" class="headerlink" title="四、JSON 和 JS 对象互转"></a>四、JSON 和 JS 对象互转</h2><p>​    JSON对象 –&gt; JS 字符串，使用 JSON.parse()方法：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> obj = <span class="built_in">JSON</span>.parse(<span class="string">&#x27;&#123;&quot;a&quot;: &quot;Hello&quot;,&quot;b&quot;: &quot;Word&quot;&#125;&#x27;</span>);</span><br><span class="line"><span class="comment">//结果是&#123;a: &#x27;Hello&#x27;,b: &#x27;Word&#x27;&#125;</span></span><br></pre></td></tr></table></figure><p>​    JS 对象 –&gt; JSON 字符串，使用 JSON.stringify()方法</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> json = <span class="built_in">JSON</span>.stringify(&#123;<span class="attr">a</span>: <span class="string">&#x27;Hello&#x27;</span>,<span class="attr">b</span>: <span class="string">&#x27;Word&#x27;</span>&#125;);</span><br><span class="line"><span class="comment">//结果是 &#x27;&#123;&quot;a&quot;: &quot;Hello&quot;, &quot;b&quot;: &quot;Word&quot;&#125;&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="五、JSON-与-HTML-对比"><a href="#五、JSON-与-HTML-对比" class="headerlink" title="五、JSON 与 HTML 对比"></a>五、JSON 与 HTML 对比</h2><p>JSON 格式：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="comment">// 键值对</span></span><br><span class="line">    <span class="string">&quot;name&quot;</span>: <span class="string">&quot;中国&quot;</span>,</span><br><span class="line">    <span class="comment">//对象中有数组，数组中又有对象</span></span><br><span class="line">    <span class="string">&quot;province&quot;</span>: [&#123;</span><br><span class="line">        <span class="string">&quot;name&quot;</span>: <span class="string">&quot;黑龙江&quot;</span>,</span><br><span class="line">        <span class="string">&quot;cities&quot;</span>: &#123;</span><br><span class="line">            <span class="string">&quot;city&quot;</span>: [<span class="string">&quot;哈尔滨&quot;</span>, <span class="string">&quot;大庆&quot;</span>]</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;, &#123;</span><br><span class="line">        <span class="string">&quot;name&quot;</span>: <span class="string">&quot;广东&quot;</span>,</span><br><span class="line">        <span class="string">&quot;cities&quot;</span>: &#123;</span><br><span class="line">            <span class="string">&quot;city&quot;</span>: [<span class="string">&quot;广州&quot;</span>, <span class="string">&quot;深圳&quot;</span>, <span class="string">&quot;珠海&quot;</span>]</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;, &#123;</span><br><span class="line">        <span class="string">&quot;name&quot;</span>: <span class="string">&quot;台湾&quot;</span>,</span><br><span class="line">        <span class="string">&quot;cities&quot;</span>: &#123;</span><br><span class="line">            <span class="string">&quot;city&quot;</span>: [<span class="string">&quot;台北&quot;</span>, <span class="string">&quot;高雄&quot;</span>]</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;, &#123;</span><br><span class="line">        <span class="string">&quot;name&quot;</span>: <span class="string">&quot;新疆&quot;</span>,</span><br><span class="line">        <span class="string">&quot;cities&quot;</span>: &#123;</span><br><span class="line">            <span class="string">&quot;city&quot;</span>: [<span class="string">&quot;乌鲁木齐&quot;</span>]</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>HTML 格式：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">country</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>中国<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">province</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>黑龙江<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">cities</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">city</span>&gt;</span>哈尔滨<span class="tag">&lt;/<span class="name">city</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">city</span>&gt;</span>大庆<span class="tag">&lt;/<span class="name">city</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">cities</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">province</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">province</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>广东<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">cities</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">city</span>&gt;</span>广州<span class="tag">&lt;/<span class="name">city</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">city</span>&gt;</span>深圳<span class="tag">&lt;/<span class="name">city</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">city</span>&gt;</span>珠海<span class="tag">&lt;/<span class="name">city</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">cities</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">province</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">province</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>台湾<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">cities</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">city</span>&gt;</span>台北<span class="tag">&lt;/<span class="name">city</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">city</span>&gt;</span>高雄<span class="tag">&lt;/<span class="name">city</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">cities</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">province</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">province</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>新疆<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">cities</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">city</span>&gt;</span>乌鲁木齐<span class="tag">&lt;/<span class="name">city</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">cities</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">province</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">country</span>&gt;</span></span><br></pre></td></tr></table></figure><p>​    通过对比，看得出 JSON 语言更简单，而HTML结构更加明晰。</p>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JSON </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PeopleSoft-AE报表程序</title>
      <link href="2019/03/28/PeopleSoft-AE%E6%8A%A5%E8%A1%A8%E7%A8%8B%E5%BA%8F/"/>
      <url>2019/03/28/PeopleSoft-AE%E6%8A%A5%E8%A1%A8%E7%A8%8B%E5%BA%8F/</url>
      
        <content type="html"><![CDATA[<h2 id="AE报表程序"><a href="#AE报表程序" class="headerlink" title="AE报表程序"></a>AE报表程序</h2><p>1、定义运行控制表    TBL表</p><ul><li>运行控制ID：区分用户的第几次操作</li><li>用户ID：区分用户</li><li>ORDERID:区分操作的表。</li></ul><p>2、定义进程参数传递表    AET表</p><p>3、定义报表请求页面（页面、组件、组件注册）</p><p>4、创建进程程序（AE）</p><p>5、创建进程定义（进程组：HRALL、GPALL）</p><a id="more"></a><h4 id="一、定义运行控制表，以-TBL结尾。"><a href="#一、定义运行控制表，以-TBL结尾。" class="headerlink" title="一、定义运行控制表，以_TBL结尾。"></a>一、定义运行控制表，以_TBL结尾。</h4><p>建sql表，插入field，设计里面每一个field的属性。保存，然后做好注释。</p><ul><li><p>OPRID ：用户ID，设置为key ，非必填。</p></li><li><p>RUN_CNTL_ID：运行控制，设置为key，search key 和 list Box Item</p></li><li><p>LANGUAGE：语言控制，用于多语言环境。</p></li><li><p>ZL_ORDERID：订单编号，设置为必填，Edit Type设置为Table Edit，Type 选择 Prompt Table Edit ，Prompt Table 选择对应的头表。</p></li></ul><img src=https://gitee.com/gek7777/cdn.io/raw/master/image/1553744905664.png ><h4 id="二、定义进程参数传递表，以-AET结尾。"><a href="#二、定义进程参数传递表，以-AET结尾。" class="headerlink" title="二、定义进程参数传递表，以_ AET结尾。"></a>二、定义进程参数传递表，以_ AET结尾。</h4><p>建Derived/Word表,插入field，设计里面每一个field的属性。保存，然后做好注释。</p><ul><li><p>LANGUAGE_CD：语言代码，多语言环境使用</p></li><li><p>PROCESS_INSTANCE：进程实例。</p></li><li><p>ZL_ORDERID：需要查询的订单。</p><img src=https://gitee.com/gek7777/cdn.io/raw/master/image/1553747367217.png ></li></ul><h4 id="三、定义报表请求页面（页面、组件、组件注册）"><a href="#三、定义报表请求页面（页面、组件、组件注册）" class="headerlink" title="三、定义报表请求页面（页面、组件、组件注册）"></a>三、定义报表请求页面（页面、组件、组件注册）</h4><p>​    1、新建page，放置一个subpage，选择如图。</p><p>​    2、然后拖入运行控制表中的订单编号。</p><img src=https://gitee.com/gek7777/cdn.io/raw/master/image/1553747635882.png ><p>​    3、新建组件，修改Item Label 为订单报表申请·ZL。</p><p>​    4、注册组件。过程不再详述，注意修改名字，标签和描述，级的勾选修改的三个选项。</p><h4 id="四、创建进程程序（AE）。"><a href="#四、创建进程程序（AE）。" class="headerlink" title="四、创建进程程序（AE）。"></a>四、创建进程程序（AE）。</h4><p>​    1、新建SQL。</p><img src=https://gitee.com/gek7777/cdn.io/raw/master/image/1553751655181.png ><p>​    </p><p>​    2、新建AE。如图，编写SQL Action 和 PeopleCode。</p><img src=https://gitee.com/gek7777/cdn.io/raw/master/image/1553751543749.png ><p><strong>SQL ACtion：</strong></p><ul><li>%Slelect (ZL_ORDERID) 等于 %Select (State Record .ZL_ORDERID)。<strong>注意：此处用的是指定的 State Record 表。</strong></li><li>%OperatorId ：操作用户ID</li><li>%RunControl： 运行控制ID</li></ul><img src=https://gitee.com/gek7777/cdn.io/raw/master/image/1553751847348.png ><p><strong>PeopleCode Action ：</strong>    </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**================================================</span></span><br><span class="line"><span class="comment">任务:ZL_ORGER_2019</span></span><br><span class="line"><span class="comment">描述：订单编号</span></span><br><span class="line"><span class="comment">--------------------------------------------------------</span></span><br><span class="line"><span class="comment">作者：            操作时间：                操作：                     </span></span><br><span class="line"><span class="comment">赵龙2019-03-25                  创建</span></span><br><span class="line"><span class="comment">=================================================*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/* 导入公共函数包 */</span></span><br><span class="line"><span class="keyword">import</span> C_HRS_FUNC:*;</span><br><span class="line"><span class="keyword">import</span> C_COMMON_FUNC:UTILITY:*;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 声明变量 */</span></span><br><span class="line">Local array of array of any &amp;arrRptPar; <span class="comment">/*定义报表参数列表*/</span></span><br><span class="line">Local array of any &amp;arrRptHead; <span class="comment">/*定义报表标题*/</span></span><br><span class="line"></span><br><span class="line">Local number &amp;seqNo; <span class="comment">/*序号*/</span></span><br><span class="line">Local array of any &amp;tmpArr;</span><br><span class="line">Local string &amp;orderId;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 变量初始化 */</span></span><br><span class="line">&amp;arrRptPar = CreateArrayRept(CreateArrayAny(), <span class="number">0</span>).Clone();</span><br><span class="line">&amp;arrRptHead = CreateArrayAny();</span><br><span class="line">&amp;arrData = CreateArrayAny();</span><br><span class="line">&amp;tmpArr = CreateArrayAny();</span><br><span class="line"></span><br><span class="line">&amp;oReport = create C_HRS_FUNC:REPORT();</span><br><span class="line">&amp;oUtility = create C_HRS_FUNC:UTILITY();</span><br><span class="line">&amp;oUtility2 = create C_COMMON_FUNC:UTILITY();</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 取得查询页面输入的查询参数 */</span></span><br><span class="line"></span><br><span class="line">&amp;orderId = ZL_RUN_CTL_AET.ZL_ORDERID.Value; <span class="comment">/*初始化变量*/</span></span><br><span class="line">&amp;seqNo = <span class="number">0</span>; <span class="comment">/*序号*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*定义输出文件*/</span></span><br><span class="line">Local File &amp;rptFile = GetTempFile(%FilePath | &amp;strTmplateId | <span class="string">&quot;_&quot;</span> | %Date | <span class="string">&quot;.xls&quot;</span>, <span class="string">&quot;w&quot;</span>, <span class="string">&quot;u&quot;</span>, %FilePath_Absolute);</span><br><span class="line"><span class="comment">/*打印log*/</span></span><br><span class="line">Local File &amp;log = GetTempFile(%FilePath | <span class="string">&quot;log&quot;</span> | %Date | <span class="string">&quot;.txt&quot;</span>, <span class="string">&quot;w&quot;</span>, <span class="string">&quot;u&quot;</span>, %FilePath_Absolute);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">================================================================</span></span><br><span class="line"><span class="comment">生成报表头信息</span></span><br><span class="line"><span class="comment">================================================================</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">Rem 求出报表描述名称;</span><br><span class="line">&amp;arrRptPar.Push(CreateArrayAny(<span class="string">&quot;报表名称&quot;</span>, <span class="string">&quot;订单明细表&quot;</span>));</span><br><span class="line"></span><br><span class="line">Rem 取报表的制表人(OPRID+空格+OPRID对应员工的NAME_FORMAL);</span><br><span class="line">SQLExec(<span class="string">&quot;SELECT NAME_DISPLAY FROM PS_PERSONAL_DATA WHERE EMPLID = :1&quot;</span>, %EmployeeId, &amp;strRptPersonNm);</span><br><span class="line">&amp;strRptPersonNm = %OperatorId | <span class="string">&quot; &quot;</span> | &amp;strRptPersonNm;</span><br><span class="line"></span><br><span class="line">&amp;arrRptPar.Push(CreateArrayAny(<span class="string">&quot;制表人&quot;</span>, &amp;strRptPersonNm));</span><br><span class="line">&amp;arrRptPar.Push(CreateArrayAny(<span class="string">&quot;制表日期&quot;</span>, String(%Date)));</span><br><span class="line"></span><br><span class="line">&amp;arrRptPar.Push(CreateArrayAny(<span class="string">&quot;订单ID&quot;</span>, &amp;orderId));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">================================================================</span></span><br><span class="line"><span class="comment">生成报表数据列头信息</span></span><br><span class="line"><span class="comment">================================================================</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line">Rem 设置报表格式信息;</span><br><span class="line">&amp;oReport.AddXlsHeader(&amp;rptFile);</span><br><span class="line">Rem 打印报表头信息;</span><br><span class="line">&amp;oReport.WritePara(&amp;rptFile, &amp;arrRptPar);</span><br><span class="line"></span><br><span class="line">Rem 初始化报表标题信息;</span><br><span class="line">&amp;arrRptHead.Push(<span class="string">&quot;序号&quot;</span>);</span><br><span class="line">&amp;arrRptHead.Push(<span class="string">&quot;订单编号&quot;</span>);</span><br><span class="line">&amp;arrRptHead.Push(<span class="string">&quot;订单描述&quot;</span>);</span><br><span class="line">&amp;arrRptHead.Push(<span class="string">&quot;订单子编号&quot;</span>);</span><br><span class="line">&amp;arrRptHead.Push(<span class="string">&quot;订单类型&quot;</span>);</span><br><span class="line">&amp;arrRptHead.Push(<span class="string">&quot;订单说明&quot;</span>);</span><br><span class="line">&amp;arrRptHead.Push(<span class="string">&quot;订单数量&quot;</span>);</span><br><span class="line">&amp;arrRptHead.Push(<span class="string">&quot;订单单价&quot;</span>);</span><br><span class="line">&amp;arrRptHead.Push(<span class="string">&quot;订单金额&quot;</span>);</span><br><span class="line"></span><br><span class="line">&amp;oReport.WriteColName(&amp;rptFile, &amp;arrRptHead);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">===============================================</span></span><br><span class="line"><span class="comment">============生成报表主题</span></span><br><span class="line"><span class="comment">================================================================</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">Local array of any &amp;tArr;</span><br><span class="line"></span><br><span class="line">Local SQL &amp;rowSql = CreateSQL(SQL.ZL_QUERY_SQL, &amp;orderId);</span><br><span class="line"></span><br><span class="line"><span class="comment">/** 讲&amp;rowSql中的每一个row赋值给 &amp;tmpArr 直到没有值*/</span></span><br><span class="line">While &amp;rowSql.Fetch(&amp;tmpArr)</span><br><span class="line">   &amp;seqNo = &amp;seqNo + <span class="number">1</span>;</span><br><span class="line">   </span><br><span class="line">   &amp;rptFile.WriteLine(<span class="string">&quot;&lt;tr&gt;&quot;</span>);</span><br><span class="line">   </span><br><span class="line">   &amp;oReport.WriteCellData(&amp;rptFile, &amp;seqNo, <span class="string">&quot;30&quot;</span>); <span class="comment">/* 序号*/</span></span><br><span class="line">   &amp;oReport.WriteCellData(&amp;rptFile, &amp;tmpArr [<span class="number">1</span>], <span class="string">&quot;30&quot;</span>); <span class="comment">/* 订单编号*/</span></span><br><span class="line">   &amp;oReport.WriteCellData(&amp;rptFile, &amp;tmpArr [<span class="number">2</span>], <span class="string">&quot;30&quot;</span>); <span class="comment">/* 订单描述*/</span></span><br><span class="line">   &amp;oReport.WriteCellData(&amp;rptFile, &amp;tmpArr [<span class="number">3</span>], <span class="string">&quot;30&quot;</span>); <span class="comment">/* 订单子序号*/</span></span><br><span class="line">   &amp;tArr = &amp;oUtility2.GetXlatValue(<span class="string">&quot;ZL_ORDER_SUBTYPE&quot;</span>, String(&amp;tmpArr [<span class="number">4</span>]), %Date);</span><br><span class="line">   &amp;oReport.WriteCellData(&amp;rptFile, &amp;tArr [<span class="number">1</span>], <span class="string">&quot;30&quot;</span>); <span class="comment">/* 订单类型*/</span></span><br><span class="line">   &amp;oReport.WriteCellData(&amp;rptFile, &amp;tmpArr [<span class="number">5</span>], <span class="string">&quot;30&quot;</span>); <span class="comment">/* 订单描述*/</span></span><br><span class="line">   &amp;oReport.WriteCellData(&amp;rptFile, &amp;tmpArr [<span class="number">6</span>], <span class="string">&quot;30&quot;</span>); <span class="comment">/* 订单数量*/</span></span><br><span class="line">   &amp;oReport.WriteCellData(&amp;rptFile, &amp;tmpArr [<span class="number">7</span>], <span class="string">&quot;30&quot;</span>); <span class="comment">/* 订单单价*/</span></span><br><span class="line">   &amp;oReport.WriteCellData(&amp;rptFile, &amp;tmpArr [<span class="number">8</span>], <span class="string">&quot;30&quot;</span>); <span class="comment">/* 订单金额*/</span></span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">   &amp;rptFile.WriteLine(<span class="string">&quot;&lt;/tr&gt;&quot;</span>);</span><br><span class="line">   </span><br><span class="line">End-While;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*打印结尾信息*/</span></span><br><span class="line">&amp;oReport.WriteEnding(&amp;rptFile);</span><br><span class="line"></span><br><span class="line">rem &amp;log.Delete();</span><br><span class="line">&amp;log.Close();</span><br><span class="line">&amp;rptFile.Close();</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>3、AE参数设置。</p><ul><li>配置State Records 表。选中对中的State Record 表，勾选Default State Record ，表示启用简写模式。</li></ul><img src=https://gitee.com/gek7777/cdn.io/raw/master/image/1553752390872.png ><ul><li>配置Temp Tables 表：抽取大数据中一小部分，暂存数据。设置实例个数，一般系统有冗余的。</li></ul><img src=https://gitee.com/gek7777/cdn.io/raw/master/image/1553752610328.png ><ul><li>配置Advanced 。</li></ul><img src=https://gitee.com/gek7777/cdn.io/raw/master/image/1553752942447.png ><h4 id="五、创建进程定义。"><a href="#五、创建进程定义。" class="headerlink" title="五、创建进程定义。"></a>五、创建进程定义。</h4><p>​    1、进入如下图，新建进程，选择类型：Application Engine。名称：和前面定义的程序一样。</p><img src=https://gitee.com/gek7777/cdn.io/raw/master/image/1553753567287.png ><p>​    2、进程定义中描述一下进程作用。在自定义中选择刚刚创建的AE程序。</p><img src=https://gitee.com/gek7777/cdn.io/raw/master/image/1553753792340.png ><h4 id="六、测试"><a href="#六、测试" class="headerlink" title="六、测试"></a>六、测试</h4><p>​    1、进入订单报表申请页面。按下步骤操作。</p><img src=https://gitee.com/gek7777/cdn.io/raw/master/image/1553753888865.png ><p>​    2、查看是否成功申请报表。</p><img src=https://gitee.com/gek7777/cdn.io/raw/master/image/1553754112122.png >]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PeopleSoft </tag>
            
            <tag> PeopleCode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PeopleSoft-页面Query查询产品</title>
      <link href="2019/03/28/PeopleSoft-%E9%A1%B5%E9%9D%A2Query%E6%9F%A5%E8%AF%A2%E4%BA%A7%E5%93%81/"/>
      <url>2019/03/28/PeopleSoft-%E9%A1%B5%E9%9D%A2Query%E6%9F%A5%E8%AF%A2%E4%BA%A7%E5%93%81/</url>
      
        <content type="html"><![CDATA[<p>在PeopleSoft中，业务可以通过页面配置，新建一个Query查询，可以实现零代码开发…</p><h2 id="新建页面Query查询流程："><a href="#新建页面Query查询流程：" class="headerlink" title="新建页面Query查询流程："></a>新建页面Query查询流程：</h2><h3 id="创建新树（trees）："><a href="#创建新树（trees）：" class="headerlink" title="创建新树（trees）："></a>创建新树（trees）：</h3><img src="https://gitee.com/gek7777/cdn.io/raw/master/image/20201221175736.png"/><h3 id="创建访问组（access-group）"><a href="#创建访问组（access-group）" class="headerlink" title="创建访问组（access group）"></a>创建访问组（access group）</h3><img src="https://gitee.com/gek7777/cdn.io/raw/master/image/20201221175752.png"/><h3 id="赋权。"><a href="#赋权。" class="headerlink" title="赋权。"></a>赋权。</h3><p>​    在主菜单–peopletools–安全性–查询安全性–查询访问管理器中插入子记录表。</p><img src=https://gitee.com/gek7777/cdn.io/raw/master/image/20190328-1.png ><p>​    </p><h3 id="新建查询。"><a href="#新建查询。" class="headerlink" title="新建查询。"></a>新建查询。</h3><img src=https://gitee.com/gek7777/cdn.io/raw/master/image/20190328-2.png ><p>​    1.添加需要的记录，并联接起来。</p><img src=https://gitee.com/gek7777/cdn.io/raw/master/image/20190328-3.png ><p>​    2.勾选需要查询的字段。就是sql语句中select 后面的字段。</p><img src=https://gitee.com/gek7777/cdn.io/raw/master/image/20190328-4.png ><p>​    3.编写表达式，选择类型，填写表达文本，最后，将表达式用作字段。</p><img src=https://gitee.com/gek7777/cdn.io/raw/master/image/20190328-5.png ><p>​    4.添加提示。<strong>注意：区分提示表和转换值的区别，主要是转换值，不要选提示表，只有提示表才需要选择对应的提示表</strong></p><img src=https://gitee.com/gek7777/cdn.io/raw/master/image/20190328-6.png ><p>​    5.检查，修改需要打印的字段，字段名。</p><img src=https://gitee.com/gek7777/cdn.io/raw/master/image/20190328-7.png ><p>​    6.添加标准，相当于sql中的where后面的条件。</p><p>​    第一个标准是联接两张表的orderID</p><img src=https://gitee.com/gek7777/cdn.io/raw/master/image/20190328-8.png ><p>​    第二个标准是用来查询的，这里用到前面定义好的提示。</p><img src=https://gitee.com/gek7777/cdn.io/raw/master/image/20190328-9.png ><p>​    7.检查得到的SQL语句。</p><img src=https://gitee.com/gek7777/cdn.io/raw/master/image/20190328-10.png ><p>​    8.运行。</p><img src=https://gitee.com/gek7777/cdn.io/raw/master/image/20190328-11.png ><p>​    9.添加到页面菜单中。</p><img src=https://gitee.com/gek7777/cdn.io/raw/master/image/20190328-12.png ><h3 id="注意："><a href="#注意：" class="headerlink" title="注意："></a><strong>注意：</strong></h3><ul><li><p>​    <strong>节点名称：LOCAL_NODE</strong></p></li><li><p>​    <strong>产品序号不要重复。</strong></p></li><li><p>​    <strong>url类型为一般URL，url设置为：q/?ICAction=ICQryNameUrl=ZL_ORDER_QRY（查询名）</strong></p><p>最后，可以在页面中找到这个产品，点击进去，就可以进行查询，查看或者下载。</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PeopleSoft </tag>
            
            <tag> Query </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PeopleSoft-Excel2CI-外部调用CI</title>
      <link href="2019/03/27/PeopleSoft-Excel2CI-%E5%A4%96%E9%83%A8%E8%B0%83%E7%94%A8CI/"/>
      <url>2019/03/27/PeopleSoft-Excel2CI-%E5%A4%96%E9%83%A8%E8%B0%83%E7%94%A8CI/</url>
      
        <content type="html"><![CDATA[<h2 id="Excel2CI报表-通过CI-调用component（订单管理系统）"><a href="#Excel2CI报表-通过CI-调用component（订单管理系统）" class="headerlink" title="Excel2CI报表 通过CI  调用component（订单管理系统）"></a>Excel2CI报表 通过CI  调用component（订单管理系统）</h2><ul><li>1、设置连接信息</li><li>2、基于组件CI创建模板和新建输入表格</li><li>3、输入数据与提交数据</li><li>4、发布</li></ul><a id="more"></a><h3 id="步骤："><a href="#步骤：" class="headerlink" title="步骤："></a>步骤：</h3><h4 id="1、打开Excel2CI-设置好连接信息如图："><a href="#1、打开Excel2CI-设置好连接信息如图：" class="headerlink" title="1、打开Excel2CI ,设置好连接信息如图："></a>1、打开Excel2CI ,设置好连接信息如图：</h4><img src=https://gitee.com/gek7777/cdn.io/raw/master/image/20190327-5.png ><h4 id="2、新建模版与输入表格："><a href="#2、新建模版与输入表格：" class="headerlink" title="2、新建模版与输入表格："></a>2、新建模版与输入表格：</h4><img src=https://gitee.com/gek7777/cdn.io/raw/master/image/20190327-6.png ><p>​    </p><h4 id="3、输入数据"><a href="#3、输入数据" class="headerlink" title="3、输入数据"></a>3、输入数据</h4><img src=https://gitee.com/gek7777/cdn.io/raw/master/image/20190327-7.png ><h4 id="4、发布"><a href="#4、发布" class="headerlink" title="4、发布"></a>4、发布</h4><img src=https://gitee.com/gek7777/cdn.io/raw/master/image/20190327-8.png >]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PeopleSoft </tag>
            
            <tag> Component Interface </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PeopleSoft-订单录入系统-内部调用CI</title>
      <link href="2019/03/27/PeopleSoft-%E8%AE%A2%E5%8D%95%E5%BD%95%E5%85%A5%E7%B3%BB%E7%BB%9F-%E5%86%85%E9%83%A8%E8%B0%83%E7%94%A8CI/"/>
      <url>2019/03/27/PeopleSoft-%E8%AE%A2%E5%8D%95%E5%BD%95%E5%85%A5%E7%B3%BB%E7%BB%9F-%E5%86%85%E9%83%A8%E8%B0%83%E7%94%A8CI/</url>
      
        <content type="html"><![CDATA[<p>​    设计<strong>订单录入系统</strong>–内部PeopleCode调用 CI </p><p>​    设计思路：建立一个新的订单录入系统，通过提交按钮，通过调用CI 来操作订单管理component 将页面中的数据提交至订单管理系统中，并保存。</p><p>​    流程：设计CI接口 –&gt;建record表–&gt;设计page页面–&gt;生成组件，编写提交按钮触发的PeopleCode代码–&gt;注册组件</p><a id="more"></a><h3 id="一、设计一个CI接口–基于订单管理系统"><a href="#一、设计一个CI接口–基于订单管理系统" class="headerlink" title="一、设计一个CI接口–基于订单管理系统"></a>一、设计一个CI接口–基于订单管理系统</h3><p>点击file ——&gt;new 新建一个component interface ，基于订单管理组件，意思就是该接口对外的接口。</p><img src=https://gitee.com/gek7777/cdn.io/raw/master/image/20190327-1.png ><p>在component interface 的properties设置中，做好备注，在standard methods中勾选可以指定方法的访问权限。保存即可。</p><h3 id="二、新建record表插入需要的已有field，按钮表-ZL-COMMITMENT-，做好每一个record的注释。"><a href="#二、新建record表插入需要的已有field，按钮表-ZL-COMMITMENT-，做好每一个record的注释。" class="headerlink" title="二、新建record表插入需要的已有field，按钮表  ZL_COMMITMENT ，做好每一个record的注释。"></a>二、新建record表插入需要的已有field，按钮表  ZL_COMMITMENT ，做好每一个record的注释。</h3><p>​    因为是需要调用CI接口，所以，field和订单管理系统的一致就可以了。</p><ul><li><strong>订单编号：</strong>勾选<strong>key</strong>，<strong>search key</strong>（出现在搜索栏的选择项）（自动勾选<strong>List Box Item</strong>：出现在搜索结果的列表里），并且在Edits中勾选<strong>required</strong>，<strong>表示这个field是必填项</strong>（即字段前面带*的输入框，无值的话会报错）。</li><li><strong>订单子序号：</strong>勾选key ，search key，勾选required。注意：translate field，在edits中必须将它的Edit Type —&gt;Table Edit —&gt;Type :Translate Table Edit **，否则在保存page页面的时候，会报该field字段无效的错误。</li><li><strong>注意：</strong>这里有个orderid，这个id勾选key，search key ，list box item 就好了，不需要勾选required。它与subid两个field组成一个key。</li><li><strong>新建表ZL_COMMITMENT 插入一个field COMMITMENT_CNTL，作为控制按钮。在component层面的这个field change的时候写PeopleCode。</strong></li><li>保存为HRAPP类型。</li><li><strong>重中之重：必须要build这两个record！！！否则，数据库中没有表，程序会报sql错误。</strong></li></ul><h3 id="三、设计page页面。将建好的两个record加入到page中。做好注释"><a href="#三、设计page页面。将建好的两个record加入到page中。做好注释" class="headerlink" title="三、设计page页面。将建好的两个record加入到page中。做好注释"></a>三、设计page页面。将建好的两个record加入到page中。做好注释</h3><p>0层的参照订单管理系统的page设计就行。</p><p>​    相同部分设计过程略。</p><p>​    特殊的是0层的按钮设计。</p><p>​        1.添加一个push button 到页面，对其进行设置。<strong>注意：要检查层级关系。</strong></p><img src=https://gitee.com/gek7777/cdn.io/raw/master/image/20190327-2.png ><p>1层的这次不要Grid了，采用插入Scroll观察两者的区别。</p><p>​    优点：不需要单独设计drop-down list box格式，会自动识别。</p><p>​    缺点：只能展示一条record记录。</p><h4 id="注意："><a href="#注意：" class="headerlink" title="注意："></a><strong>注意：</strong></h4><img src=https://gitee.com/gek7777/cdn.io/raw/master/image/20190327-3.png ><h3 id="四、生成组件component。将page拖进去，改Item-Label-的名字。"><a href="#四、生成组件component。将page拖进去，改Item-Label-的名字。" class="headerlink" title="四、生成组件component。将page拖进去，改Item Label 的名字。"></a>四、生成组件component。将page拖进去，改Item Label 的名字。</h3><p>​    打开component层面的按钮filed PeopleCode将CI 拖进去，自动生成代码，然后改掉根据需求该代码。[*] 表示需要替换的。</p><img src=https://gitee.com/gek7777/cdn.io/raw/master/image/20190327-4.png ><p>代码具体为：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">时间：2019/03/27</span></span><br><span class="line"><span class="comment">作者：赵龙</span></span><br><span class="line"><span class="comment">事件：订单录入系统page中点击提交，通过ci操作订单管理系统，保存提交内容。</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="comment">/* ===&gt;</span></span><br><span class="line"><span class="comment">This is a dynamically generated PeopleCode template to be used only as a helper</span></span><br><span class="line"><span class="comment">to the application developer.</span></span><br><span class="line"><span class="comment">You need to replace all references to &#x27;[*]&#x27; OR default values with  references to</span></span><br><span class="line"><span class="comment">PeopleCode variables and/or a Rec.Fields. */</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Local File &amp;fileLog;</span><br><span class="line">Local ApiObject &amp;oSession, &amp;oZlOrdercomCi;</span><br><span class="line">Local ApiObject &amp;oZlOrderDetCollection, &amp;oZlOrderDet;</span><br><span class="line"></span><br><span class="line"><span class="function">Function <span class="title">errorHandler</span><span class="params">()</span></span></span><br><span class="line"><span class="function">   Local ApiObject &amp;oPSMessageCollection, &amp;oPSMessage</span>;</span><br><span class="line">   Local number &amp;i;</span><br><span class="line">   Local string &amp;sErrMsgSetNum, &amp;sErrMsgNum, &amp;sErrMsgText, &amp;sErrType;</span><br><span class="line">   </span><br><span class="line">   &amp;oPSMessageCollection = &amp;oSession.PSMessages;</span><br><span class="line">   For &amp;i = <span class="number">1</span> To &amp;oPSMessageCollection.Count</span><br><span class="line">      &amp;oPSMessage = &amp;oPSMessageCollection.Item(&amp;i);</span><br><span class="line">      &amp;sErrMsgSetNum = &amp;oPSMessage.MessageSetNumber;</span><br><span class="line">      &amp;sErrMsgNum = &amp;oPSMessage.MessageNumber;</span><br><span class="line">      &amp;sErrMsgText = &amp;oPSMessage.Text;</span><br><span class="line">      rem &amp;fileLog.WriteLine(&amp;sErrType | <span class="string">&quot; (&quot;</span> | &amp;sErrMsgSetNum | <span class="string">&quot;,&quot;</span> | &amp;sErrMsgNum | <span class="string">&quot;) - &quot;</span> | &amp;sErrMsgText);</span><br><span class="line">      MessageBox(<span class="number">0</span>, <span class="string">&quot;&quot;</span>, <span class="number">9999</span>, <span class="number">9999</span>, <span class="string">&quot;&quot;</span> | &amp;sErrType | <span class="string">&quot; (&quot;</span> | &amp;sErrMsgSetNum | <span class="string">&quot;,&quot;</span> | &amp;sErrMsgNum | <span class="string">&quot;) - &quot;</span> | &amp;sErrMsgText);</span><br><span class="line">   End-For;</span><br><span class="line">   rem ***** Delete the Messages from the collection *****;</span><br><span class="line">   &amp;oPSMessageCollection.DeleteAll();</span><br><span class="line">End-Function;</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span></span><br><span class="line">   rem ***** Set the Log File *****;</span><br><span class="line">   rem &amp;fileLog = GetFile(<span class="string">&quot;C:\Users\zhaolong\AppData\Local\Temp\ZL_ORDERCOM_CI.log&quot;</span>, <span class="string">&quot;w&quot;</span>, <span class="string">&quot;a&quot;</span>, %FilePath_Absolute);</span><br><span class="line">   rem &amp;fileLog.WriteLine(<span class="string">&quot;Begin&quot;</span>);</span><br><span class="line">   rem ***** Get current PeopleSoft Session *****;</span><br><span class="line">   &amp;oSession = %Session;</span><br><span class="line">   </span><br><span class="line">   rem ***** Set the PeopleSoft Session Error Message Mode *****;</span><br><span class="line">   rem ***** <span class="number">0</span> - None *****;</span><br><span class="line">   rem ***** <span class="number">1</span> - <span class="function">PSMessage Collection <span class="title">only</span> <span class="params">(<span class="keyword">default</span>)</span> *****</span>;</span><br><span class="line">   rem ***** <span class="number">2</span> - Message Box only *****;</span><br><span class="line">   rem ***** <span class="number">3</span> - Both collection and message box *****;</span><br><span class="line">   &amp;oSession.PSMessagesMode = <span class="number">1</span>;</span><br><span class="line">   </span><br><span class="line">   rem ***** Get the Component Interface *****;</span><br><span class="line">   &amp;oZlOrdercomCi = &amp;oSession.GetCompIntfc(CompIntfc.ZL_ORDERCOM_CI);</span><br><span class="line">   </span><br><span class="line">   If &amp;oZlOrdercomCi = Null Then</span><br><span class="line">      </span><br><span class="line">      errorHandler();</span><br><span class="line">      <span class="keyword">throw</span> CreateException(<span class="number">0</span>, <span class="number">0</span>, <span class="string">&quot; getCi faidled&quot;</span>);</span><br><span class="line">   End-If;</span><br><span class="line">   </span><br><span class="line">   rem ***** Set the Component Interface Mode *****;</span><br><span class="line">   &amp;oZlOrdercomCi.InteractiveMode = True;</span><br><span class="line">   &amp;oZlOrdercomCi.GetHistoryItems = True;</span><br><span class="line">   &amp;oZlOrdercomCi.EditHistoryItems = True;</span><br><span class="line">   </span><br><span class="line">   rem ***** Set Component Interface Get/Create Keys *****;</span><br><span class="line">   &amp;oZlOrdercomCi.ZL_ORDERID = GetLevel0()(<span class="number">1</span>).ZL_ORDER_HEL_1.ZL_ORDERID.Value;</span><br><span class="line">   </span><br><span class="line">   rem ***** Execute Get *****;</span><br><span class="line">   If Not &amp;oZlOrdercomCi.Get() Then</span><br><span class="line">      MessageBox(<span class="number">0</span>, <span class="string">&quot;&quot;</span>, <span class="number">9999</span>, <span class="number">9999</span>, <span class="string">&quot;ci没有&quot;</span>);</span><br><span class="line">      rem ***** Execute Create ******;</span><br><span class="line">      If Not &amp;oZlOrdercomCi.Create() Then;</span><br><span class="line">         rem ***** Unable to Create Component Interface <span class="keyword">for</span> the Add keys provided. *****;</span><br><span class="line">         MessageBox(<span class="number">0</span>, <span class="string">&quot;&quot;</span>, <span class="number">9999</span>, <span class="number">9999</span>, <span class="string">&quot;ci对象创建失败&quot;</span>);</span><br><span class="line">         errorHandler();</span><br><span class="line">         <span class="keyword">throw</span> CreateException(<span class="number">0</span>, <span class="number">0</span>, <span class="string">&quot;Create failed&quot;</span>);</span><br><span class="line">      End-If;</span><br><span class="line">   End-If;</span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">   rem ***** Begin: Get/Set Component Interface Properties *****;</span><br><span class="line">   rem ***** Get/Set Level <span class="number">0</span> Field Properties *****;</span><br><span class="line">   </span><br><span class="line">   &amp;oZlOrdercomCi.ZL_ORDERID = GetLevel0()(<span class="number">1</span>).ZL_ORDER_HEL_1.ZL_ORDERID.Value;</span><br><span class="line">   </span><br><span class="line">   MessageBox(<span class="number">0</span>, <span class="string">&quot;&quot;</span>, <span class="number">9999</span>, <span class="number">9999</span>, <span class="string">&quot;id赋值&quot;</span>);</span><br><span class="line">   &amp;oZlOrdercomCi.ZL_ORDERDESC = GetLevel0()(<span class="number">1</span>).ZL_ORDER_HEL_1.ZL_ORDERDESC.Value;</span><br><span class="line">   MessageBox(<span class="number">0</span>, <span class="string">&quot;&quot;</span>, <span class="number">9999</span>, <span class="number">9999</span>, <span class="string">&quot;描述赋值&quot;</span>);</span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">   &amp;oZlOrderDetCollection = &amp;oZlOrdercomCi.ZL_ORDER_DET;</span><br><span class="line">   Local integer &amp;i17;</span><br><span class="line">   For &amp;i17 = &amp;oZlOrderDetCollection.count To <span class="number">1</span> Step - <span class="number">1</span></span><br><span class="line">      &amp;oZlOrderDetCollection.deleteItem(&amp;i17);</span><br><span class="line">   End-For;</span><br><span class="line">   MessageBox(<span class="number">0</span>, <span class="string">&quot;&quot;</span>, <span class="number">9999</span>, <span class="number">9999</span>, <span class="string">&quot;清空集合&quot;</span>);</span><br><span class="line">   </span><br><span class="line">   For &amp;i17 = <span class="number">1</span> <span class="function">To <span class="title">GetLevel0</span><span class="params">()</span><span class="params">(<span class="number">1</span>)</span>.<span class="title">GetRowset</span><span class="params">(Scroll.ZL_ORDER_DET_1)</span>.ActiveRowCount</span>;</span><br><span class="line">      &amp;oZlOrderDetCollection.insertItem(&amp;oZlOrderDetCollection.count);</span><br><span class="line">      </span><br><span class="line">      </span><br><span class="line">      &amp;oZlOrderDet = &amp;oZlOrderDetCollection.Item(&amp;oZlOrderDetCollection.count);</span><br><span class="line">      </span><br><span class="line">      </span><br><span class="line">      &amp;oZlOrderDet.ZL_ORDER_SUBID = GetLevel0()(<span class="number">1</span>).GetRowset(Scroll.ZL_ORDER_DET_1).GetRow(&amp;i17).ZL_ORDER_DET_1.ZL_ORDER_SUBID.Value;</span><br><span class="line">      </span><br><span class="line">      </span><br><span class="line">      &amp;oZlOrderDet.ZL_ORDER_SUBTYPE = GetLevel0()(<span class="number">1</span>).GetRowset(Scroll.ZL_ORDER_DET_1).GetRow(&amp;i17).ZL_ORDER_DET_1.ZL_ORDER_SUBTYPE.Value;</span><br><span class="line">      </span><br><span class="line">      </span><br><span class="line">      &amp;oZlOrderDet.ZL_ORDER_SUBDESC_1 = GetLevel0()(<span class="number">1</span>).GetRowset(Scroll.ZL_ORDER_DET_1).GetRow(&amp;i17).ZL_ORDER_DET_1.ZL_ORDER_SUBDESC.Value;</span><br><span class="line">      </span><br><span class="line">      </span><br><span class="line">      &amp;oZlOrderDet.ZL_ORDERQUAN = GetLevel0()(<span class="number">1</span>).GetRowset(Scroll.ZL_ORDER_DET_1).GetRow(&amp;i17).ZL_ORDER_DET_1.ZL_ORDERQUAN.Value;</span><br><span class="line">      </span><br><span class="line">      </span><br><span class="line">      &amp;oZlOrderDet.ZL_ORDERPRI = GetLevel0()(<span class="number">1</span>).GetRowset(Scroll.ZL_ORDER_DET_1).GetRow(&amp;i17).ZL_ORDER_DET_1.ZL_ORDERPRI.Value;</span><br><span class="line">      MessageBox(<span class="number">0</span>, <span class="string">&quot;&quot;</span>, <span class="number">9999</span>, <span class="number">9999</span>, <span class="string">&quot;完成第&quot;</span> | &amp;i17 | <span class="string">&quot;个record赋值&quot;</span>);</span><br><span class="line">      </span><br><span class="line">   End-For;</span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">   rem ***** End: Get/Set Component Interface Properties *****;</span><br><span class="line">   </span><br><span class="line">   rem ***** Execute Save *****;</span><br><span class="line">   If Not &amp;oZlOrdercomCi.Save() Then;</span><br><span class="line">      MessageBox(<span class="number">0</span>, <span class="string">&quot;&quot;</span>, <span class="number">9999</span>, <span class="number">9999</span>, <span class="string">&quot;订单导入失败&quot;</span>);</span><br><span class="line">      errorHandler();</span><br><span class="line">      <span class="keyword">throw</span> CreateException(<span class="number">0</span>, <span class="number">0</span>, <span class="string">&quot;Save failed&quot;</span>);</span><br><span class="line">   Else</span><br><span class="line">      MessageBox(<span class="number">0</span>, <span class="string">&quot;&quot;</span>, <span class="number">9999</span>, <span class="number">9999</span>, <span class="string">&quot;订单导入成功&quot;</span>);</span><br><span class="line">   End-If;</span><br><span class="line">   </span><br><span class="line">   rem ***** Execute Cancel *****;</span><br><span class="line">   If Not &amp;oZlOrdercomCi.Cancel() Then;</span><br><span class="line">      errorHandler();</span><br><span class="line">      <span class="keyword">throw</span> CreateException(<span class="number">0</span>, <span class="number">0</span>, <span class="string">&quot;Cancel failed&quot;</span>);</span><br><span class="line">   End-If;</span><br><span class="line">   </span><br><span class="line"><span class="keyword">catch</span> Exception &amp;ex</span><br><span class="line">   MessageBox(<span class="number">0</span>, <span class="string">&quot;&quot;</span>, <span class="number">9999</span>, <span class="number">9999</span>, <span class="string">&quot;运行异常&quot;</span>);</span><br><span class="line">   </span><br><span class="line">end-<span class="keyword">try</span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="五、注册组件。"><a href="#五、注册组件。" class="headerlink" title="五、注册组件。"></a>五、注册组件。</h3><p>与订单管理系统相同步骤。过程略。</p>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PeopleCode </tag>
            
            <tag> Component Interface </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PeopleSoft-soapUI模拟外部request通过CI操作组件</title>
      <link href="2019/03/27/PeopleSoft-soapUI%E6%A8%A1%E6%8B%9F%E5%A4%96%E9%83%A8request%E9%80%9A%E8%BF%87CI%E6%93%8D%E4%BD%9C%E7%BB%84%E4%BB%B6/"/>
      <url>2019/03/27/PeopleSoft-soapUI%E6%A8%A1%E6%8B%9F%E5%A4%96%E9%83%A8request%E9%80%9A%E8%BF%87CI%E6%93%8D%E4%BD%9C%E7%BB%84%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<h2 id="soapUI模拟外部request请求-通过CI-操作组件"><a href="#soapUI模拟外部request请求-通过CI-操作组件" class="headerlink" title="soapUI模拟外部request请求 通过CI 操作组件"></a>soapUI模拟外部request请求 通过CI 操作组件</h2><p><strong>基本流程：创建消息（包括请求消息和响应消息），服务，服务操作， 创建package class ，使用soapUI 模拟外部request请求</strong></p><a id="more"></a><h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><h4 id="一、创建消息。请求消息使用原有的头表和明细表维护，而响应消息需要新建表维护。"><a href="#一、创建消息。请求消息使用原有的头表和明细表维护，而响应消息需要新建表维护。" class="headerlink" title="一、创建消息。请求消息使用原有的头表和明细表维护，而响应消息需要新建表维护。"></a>一、创建消息。请求消息使用原有的头表和明细表维护，而响应消息需要新建表维护。</h4><ol><li><p>创建 接口响应消息表  record 命名为：ZL_INT_ORD_RST ，向其中添加两个field，ZL_ORDERID和 MESSAGE_TEXT，并设置ZL_ORDERID为key，search key ，list box item。</p></li><li><p>在PS系统：主菜单–PeopleTools–集成代理程序–集成设置–消息目录下，添加新值。</p><p>订单请求消息目录：①类型选择：行集合   ②名称：ZL_REQ_MESAG   ③版本：V1</p><p>描述：订单请求消息目录。向根节点添加记录：</p><img src=https://gitee.com/gek7777/cdn.io/raw/master/image/20190326-1.png ><p>订单响应消息目录：①类型选择：行集合   ②名称：ZL_RESP_MESAGE  ③版本：V1</p><p>描述：订单响应消息目录。向根节点添加记录：</p><img src=https://gitee.com/gek7777/cdn.io/raw/master/image/20190326-2.png ></li></ol><h4 id="二、创建-服务-与-服务操作。"><a href="#二、创建-服务-与-服务操作。" class="headerlink" title="二、创建 服务 与 服务操作。"></a>二、创建 服务 与 服务操作。</h4><ol><li><p>在PS系统：主菜单–PeopleTools–集成代理程序–集成设置–服务目录下，添加新值。</p><img src=https://gitee.com/gek7777/cdn.io/raw/master/image/20190326-3.png ></li><li><p>在PS系统：主菜单–PeopleTools–集成代理程序–集成设置–服务操作目录下，添加新值。</p><p>​    <u>基于服务创建<strong>同名</strong>的服务操作</u>。赋权，生成路由，插入消息。</p></li></ol><img src=https://gitee.com/gek7777/cdn.io/raw/master/image/20190326-4.png ><img src=https://gitee.com/gek7777/cdn.io/raw/master/image/20190326-5.png ><img src=https://gitee.com/gek7777/cdn.io/raw/master/image/20190326-6.png ><h4 id="三、创建package-class-。"><a href="#三、创建package-class-。" class="headerlink" title="三、创建package class 。"></a>三、创建package class 。</h4><ol><li>在工程中插入Application Package : SIE_TRN2019_PKG（软件包名称），TRN2019（路径），右键路径，插入新建class类 ZL_ORDER_ON_REQU，代码如下：</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> PS_PT:Integration:IRequestHandler;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** 实现一个请求接口 PS_PT:Integration:IRequestHandler*/</span></span><br><span class="line">class ZL_ORDER_ON_REQU implements PS_PT:Integration:IRequestHandler</span><br><span class="line"><span class="comment">/**构造方法*/</span></span><br><span class="line">   <span class="function">method <span class="title">ZL_ORDER_ON_REQU</span><span class="params">()</span></span>;</span><br><span class="line">   <span class="comment">/**执行方法*/</span></span><br><span class="line">   <span class="function">method <span class="title">OnRequest</span><span class="params">(&amp;_MSG As Message)</span> Returns Message</span>;</span><br><span class="line"><span class="comment">/**错误处理方法*/</span></span><br><span class="line">   <span class="function">method <span class="title">OnError</span><span class="params">(&amp;_MSG As Message)</span> Returns string</span>;</span><br><span class="line">end-<span class="class"><span class="keyword">class</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**声明调用的函数，位置*/</span></span><br><span class="line">Declare Function fun PeopleCode ZL_COMMITMENT.COMMITMENT_CNTL FieldFormula;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* constructor 构造器*/</span></span><br><span class="line">method ZL_ORDER_ON_REQU</span><br><span class="line">   %Super = create PS_PT:Integration:IRequestHandler();</span><br><span class="line">end-method;</span><br><span class="line"></span><br><span class="line">method OnRequest</span><br><span class="line">   /+ &amp;_MSG as Message +/</span><br><span class="line">   /+ Returns Message +/</span><br><span class="line">   /+ Extends/implements PS_PT:Integration:IRequestHandler.OnRequest +/</span><br><span class="line">   Local Message &amp;response;</span><br><span class="line">   Local XmlDoc &amp;requestDoc, &amp;responseDoc;</span><br><span class="line">   Local Rowset &amp;rst;</span><br><span class="line">   </span><br><span class="line">   Local integer &amp;I, &amp;J;</span><br><span class="line">   &amp;rst = &amp;_MSG.GetRowset(); <span class="comment">/*获取行消息集合*/</span></span><br><span class="line">   </span><br><span class="line">   <span class="comment">/** 接受函数返回值 */</span></span><br><span class="line">   Local <span class="keyword">boolean</span> &amp;ret = fun(&amp;rst);</span><br><span class="line"></span><br><span class="line">   <span class="comment">/** 获取请求msg中的0层的record */</span></span><br><span class="line">   Local Record &amp;hdl = &amp;rst.GetRow(<span class="number">1</span>).GetRecord(Record.ZL_ORDER_HEL);</span><br><span class="line">   </span><br><span class="line">   MessageBox(<span class="number">0</span>, <span class="string">&quot;&quot;</span>, <span class="number">9999</span>, <span class="number">9999</span>, <span class="string">&quot;&amp;ret===&quot;</span> | &amp;ret);</span><br><span class="line">   </span><br><span class="line">   <span class="comment">/** Local Rowset &amp;itmRst = &amp;rst.GetRow(1).GetRowset(Scroll.ZL_ORDER_ITEM);*/</span></span><br><span class="line">   </span><br><span class="line">   <span class="comment">/** 根据请求消息发送过来的smg中的订单ID删除消息响应目录表中的订单ID对应的record */</span></span><br><span class="line">   SQLExec(<span class="string">&quot;DELETE FROM PS_ZL_INT_ORD_RST WHERE ZL_ORDERID=:1&quot;</span>, &amp;hdl.ZL_ORDERID.Value);</span><br><span class="line">   <span class="comment">/** 在 消息响应目录表 创建新的record，此时是在component buffer*/</span></span><br><span class="line">   Local Record &amp;respRcd = CreateRecord(Record.ZL_INT_ORD_RST);</span><br><span class="line"><span class="comment">/** 设置新建的record的orderID字段的值*/</span></span><br><span class="line">   &amp;respRcd.ZL_ORDERID.Value = &amp;hdl.ZL_ORDERID.Value;</span><br><span class="line">   <span class="comment">/** 根据fun函数返回结果设置新建record中MESSAGE_TEXT字段的值*/</span></span><br><span class="line">   If &amp;ret = True Then</span><br><span class="line">      &amp;respRcd.MESSAGE_TEXT.Value = <span class="string">&quot;订单接口数据同步成功。&quot;</span>;</span><br><span class="line">   Else</span><br><span class="line">      &amp;respRcd.MESSAGE_TEXT.Value = <span class="string">&quot;订单接口数据同步失败。&quot;</span>;</span><br><span class="line">   End-If;</span><br><span class="line">   </span><br><span class="line"><span class="comment">/** 将buffer中新建的record 插入数据库中*/</span></span><br><span class="line">   &amp;respRcd.Insert();</span><br><span class="line">   <span class="comment">/** 提交事务*/</span></span><br><span class="line">   CommitWork();</span><br><span class="line">   <span class="comment">/*</span></span><br><span class="line"><span class="comment">   生产响应消息，针对ZL_ORDER_SRV服务操作</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">   &amp;response = CreateMessage(Operation.ZL_ORDER_SRV, %IntBroker_Response);</span><br><span class="line">   </span><br><span class="line">   <span class="comment">/**获得响应的rowset集合，里面是空的   */</span></span><br><span class="line">   Local Rowset &amp;respRst = &amp;response.GetRowset();</span><br><span class="line">   </span><br><span class="line"><span class="comment">/** 根据record新建一个rowset*/</span></span><br><span class="line">   Local Rowset &amp;respRst1 = CreateRowset(Record.ZL_INT_ORD_RST);</span><br><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">   根据msg获得orderid的值查表ZL_INT_ORD_RST 然后添加到新建的rowset中。</span></span><br><span class="line"><span class="comment">   返回值：改变的行数。如果返回0，表示表中没有这条数据。</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">   Local integer &amp;numRowCount = &amp;respRst1.Fill(<span class="string">&quot;WHERE FILL.ZL_ORDERID=:1&quot;</span>, &amp;hdl.ZL_ORDERID.Value);</span><br><span class="line">   </span><br><span class="line">   <span class="comment">/** 判断是否有改变，进行提示 */</span></span><br><span class="line">   If &amp;numRowCount = <span class="number">0</span> Then</span><br><span class="line">      <span class="keyword">throw</span> CreateException(<span class="number">30002</span>, <span class="number">13</span>, <span class="string">&quot;无数据！&quot;</span>);</span><br><span class="line">   End-If;</span><br><span class="line">   <span class="comment">/** 将新建的rowset中的值复制到响应中的rowset中 */</span></span><br><span class="line">   &amp;respRst1.CopyTo(&amp;respRst);</span><br><span class="line">   <span class="comment">/**  发送响应消息  */</span></span><br><span class="line">   Return &amp;response;</span><br><span class="line">   </span><br><span class="line">end-method;</span><br><span class="line"></span><br><span class="line">method OnError</span><br><span class="line">   /+ &amp;_MSG as Message +/</span><br><span class="line">   /+ Returns String +/</span><br><span class="line">   /+ Extends/implements PS_PT:Integration:IRequestHandler.OnError +/</span><br><span class="line">   </span><br><span class="line">   Local integer &amp;nMsgNumber, &amp;nMsgSetNumber;</span><br><span class="line">   Local string &amp;sText; </span><br><span class="line">   &amp;nMsgNumber = &amp;_MSG.IBException.MessageNumber;</span><br><span class="line">   &amp;nMsgSetNumber = &amp;_MSG.IBException.MessageSetNumber;</span><br><span class="line">   &amp;sText = &amp;_MSG.IBException.ToString();</span><br><span class="line"></span><br><span class="line">   Return &amp;sText;</span><br><span class="line">   </span><br><span class="line">end-method;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><ol start="2"><li>在ZL_COMMITMENT.COMMITMENT_CNTL Fieldformula 中编写PeopleCode，代码如下：</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/** 声明变量 */</span></span><br><span class="line">Local ApiObject &amp;oSession, &amp;oZlOrdercomCi;</span><br><span class="line">Local ApiObject &amp;oZlOrderDetCollection, &amp;oZlOrderDet;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** 定义了一个错误处理函数*/</span></span><br><span class="line"><span class="function">Function <span class="title">errorHandler</span><span class="params">()</span></span></span><br><span class="line"><span class="function">   Local ApiObject &amp;oPSMessageCollection, &amp;oPSMessage</span>;</span><br><span class="line">   Local number &amp;i;</span><br><span class="line">   Local string &amp;sErrMsgSetNum, &amp;sErrMsgNum, &amp;sErrMsgText, &amp;sErrType;</span><br><span class="line">   </span><br><span class="line">   &amp;oPSMessageCollection = &amp;oSession.PSMessages;</span><br><span class="line">   For &amp;i = <span class="number">1</span> To &amp;oPSMessageCollection.Count</span><br><span class="line">      &amp;oPSMessage = &amp;oPSMessageCollection.Item(&amp;i);</span><br><span class="line">      &amp;sErrMsgSetNum = &amp;oPSMessage.MessageSetNumber;</span><br><span class="line">      &amp;sErrMsgNum = &amp;oPSMessage.MessageNumber;</span><br><span class="line">      &amp;sErrMsgText = &amp;oPSMessage.Text;</span><br><span class="line">      rem &amp;fileLog.WriteLine(&amp;sErrType | <span class="string">&quot; (&quot;</span> | &amp;sErrMsgSetNum | <span class="string">&quot;,&quot;</span> | &amp;sErrMsgNum | <span class="string">&quot;) - &quot;</span> | &amp;sErrMsgText);</span><br><span class="line">      MessageBox(<span class="number">0</span>, <span class="string">&quot;&quot;</span>, <span class="number">9999</span>, <span class="number">9999</span>, <span class="string">&quot;&quot;</span> | &amp;sErrType | <span class="string">&quot; (&quot;</span> | &amp;sErrMsgSetNum | <span class="string">&quot;,&quot;</span> | &amp;sErrMsgNum | <span class="string">&quot;) - &quot;</span> | &amp;sErrMsgText);</span><br><span class="line">   End-For;</span><br><span class="line">   rem ***** Delete the Messages from the collection *****;</span><br><span class="line">   &amp;oPSMessageCollection.DeleteAll();</span><br><span class="line">End-Function;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** 定义服务操作处理函数*/</span></span><br><span class="line"><span class="function">Function <span class="title">fun</span><span class="params">(&amp;rst)</span> Returns <span class="keyword">boolean</span></span>;</span><br><span class="line">   </span><br><span class="line">   <span class="keyword">try</span></span><br><span class="line">       <span class="comment">/** 获取到系统的session */</span></span><br><span class="line">      &amp;oSession = %Session;</span><br><span class="line">      <span class="comment">/** 设置session消息模式 */</span></span><br><span class="line">      &amp;oSession.PSMessagesMode = <span class="number">1</span>;</span><br><span class="line">      rem ***** Get the Component Interface *****;</span><br><span class="line"><span class="comment">/** 获取到定义好的接口 */</span></span><br><span class="line">      &amp;oZlOrdercomCi = &amp;oSession.GetCompIntfc(CompIntfc.ZL_ORDERCOM_CI);</span><br><span class="line">      <span class="comment">/** 如果没有获取到接口，就报错 */</span></span><br><span class="line">      If &amp;oZlOrdercomCi = Null Then</span><br><span class="line">         errorHandler();</span><br><span class="line">         <span class="keyword">throw</span> CreateException(<span class="number">0</span>, <span class="number">0</span>, <span class="string">&quot; getCi faidled&quot;</span>);</span><br><span class="line">      End-If;</span><br><span class="line">      </span><br><span class="line">      rem ***** Set the Component Interface Mode *****;</span><br><span class="line"></span><br><span class="line">      &amp;oZlOrdercomCi.InteractiveMode = True;</span><br><span class="line">      &amp;oZlOrdercomCi.GetHistoryItems = True;</span><br><span class="line">      &amp;oZlOrdercomCi.EditHistoryItems = True;</span><br><span class="line">      </span><br><span class="line"><span class="comment">/**获取接口对象 */</span></span><br><span class="line">      If Not &amp;oZlOrdercomCi.Get() Then</span><br><span class="line">         rem ***** Execute Create ******;</span><br><span class="line"><span class="comment">/**  如果获取不到，创建一个新的接口对象*/</span></span><br><span class="line">         If Not &amp;oZlOrdercomCi.Create() Then;</span><br><span class="line">            rem ***** Unable to Create Component Interface <span class="keyword">for</span> the Add keys provided. *****;</span><br><span class="line">            errorHandler();</span><br><span class="line">            <span class="keyword">throw</span> CreateException(<span class="number">0</span>, <span class="number">0</span>, <span class="string">&quot;Create failed&quot;</span>);</span><br><span class="line">         End-If;</span><br><span class="line">      End-If;</span><br><span class="line">      </span><br><span class="line"><span class="comment">/** 给接口中的参数赋值*/</span></span><br><span class="line">      &amp;oZlOrdercomCi.ZL_ORDERID = &amp;rst.getrow(<span class="number">1</span>).ZL_ORDER_HEL.ZL_ORDERID.VALUE;</span><br><span class="line"></span><br><span class="line">      &amp;oZlOrdercomCi.ZL_ORDERDESC = &amp;rst.getrow(<span class="number">1</span>).ZL_ORDER_HEL.ZL_ORDERDESC.VALUE;</span><br><span class="line">      <span class="comment">/** 获取接口对象中ZL_ORDER_DET集合*/</span></span><br><span class="line">      &amp;oZlOrderDetCollection = &amp;oZlOrdercomCi.ZL_ORDER_DET;</span><br><span class="line">      <span class="comment">/** 将集合的元素中的元素全部删除  */</span></span><br><span class="line">      Local integer &amp;i;</span><br><span class="line">      For &amp;i = &amp;oZlOrderDetCollection.count To <span class="number">1</span> Step - <span class="number">1</span></span><br><span class="line">         &amp;oZlOrderDetCollection.deleteItem(&amp;i);</span><br><span class="line">      End-For;</span><br><span class="line">      <span class="comment">/**  获取传入参数的rst中的1层的rowset*/</span></span><br><span class="line">      Local Rowset &amp;rowSet1 = &amp;rst.GetRow(<span class="number">1</span>).GetRowset(Scroll.ZL_ORDER_DET);</span><br><span class="line">      <span class="comment">/** for循环 对 对象中的集合中的元素的各个字段进行赋值*/</span></span><br><span class="line">      For &amp;i17 = <span class="number">1</span> To &amp;rowSet1.ActiveRowCount;</span><br><span class="line">  <span class="comment">/**根据当前的下标数插入元素，</span></span><br><span class="line"><span class="comment">      增加的是当前数的下一个元素</span></span><br><span class="line"><span class="comment">      */</span></span><br><span class="line">&amp;oZlOrderDetCollection.insertItem(&amp;oZlOrderDetCollection.count);</span><br><span class="line"><span class="comment">/** 获取当前数为下标数的元素 */</span></span><br><span class="line">         &amp;oZlOrderDet = &amp;oZlOrderDetCollection.Item(&amp;oZlOrderDetCollection.count);</span><br><span class="line">         </span><br><span class="line">         &amp;oZlOrderDet.ZL_ORDER_SUBID = &amp;rowSet1.GetRow(&amp;i17).ZL_ORDER_DET.ZL_ORDER_SUBID.Value;</span><br><span class="line">         </span><br><span class="line">         &amp;oZlOrderDet.ZL_ORDER_SUBTYPE = &amp;rowSet1.GetRow(&amp;i17).ZL_ORDER_DET.ZL_ORDER_SUBTYPE.Value;</span><br><span class="line">         </span><br><span class="line">         &amp;oZlOrderDet.ZL_ORDER_SUBDESC_1 = &amp;rowSet1.GetRow(&amp;i17).ZL_ORDER_DET.ZL_ORDER_SUBDESC.Value;</span><br><span class="line">         </span><br><span class="line">         &amp;oZlOrderDet.ZL_ORDERQUAN = &amp;rowSet1.GetRow(&amp;i17).ZL_ORDER_DET.ZL_ORDERQUAN.Value;</span><br><span class="line">         </span><br><span class="line">         &amp;oZlOrderDet.ZL_ORDERPRI = &amp;rowSet1.GetRow(&amp;i17).ZL_ORDER_DET.ZL_ORDERPRI.Value;</span><br><span class="line">         </span><br><span class="line">      End-For;</span><br><span class="line">      <span class="comment">/** </span></span><br><span class="line"><span class="comment">      调用对象的save()函数，（这里执行的是create操作）</span></span><br><span class="line"><span class="comment">      返回值：boolean类型，失败了返回false，成功了返回true。</span></span><br><span class="line"><span class="comment">      */</span></span><br><span class="line">      If Not &amp;oZlOrdercomCi.Save() Then;</span><br><span class="line">         Return False;</span><br><span class="line">      Else</span><br><span class="line">         Return True;</span><br><span class="line">      End-If;</span><br><span class="line">      </span><br><span class="line">   <span class="keyword">catch</span> Exception &amp;ex</span><br><span class="line">      </span><br><span class="line">   end-<span class="keyword">try</span>;</span><br><span class="line">   </span><br><span class="line">End-Function;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><ol start="3"><li>在服务操作中的处理程序 中 添加处理程序详情：</li></ol><img src=https://gitee.com/gek7777/cdn.io/raw/master/image/20190326-7.png ><ol start="4"><li><strong>注意：这里不添加处理程序的话，在soapUI中会报错：执行到onRequest中断之类的错误。</strong></li></ol><h4 id="四、使用soapUI模拟外部request请求"><a href="#四、使用soapUI模拟外部request请求" class="headerlink" title="四、使用soapUI模拟外部request请求"></a>四、使用soapUI模拟外部request请求</h4><img src=https://gitee.com/gek7777/cdn.io/raw/master/image/20190326-8.png ><img src=https://gitee.com/gek7777/cdn.io/raw/master/image/20190326-9.png ><img src=https://gitee.com/gek7777/cdn.io/raw/master/image/20190326-10.png ><p>打开soapUI，新建工程：</p><img src=https://gitee.com/gek7777/cdn.io/raw/master/image/20190326-11.png ><img src=https://gitee.com/gek7777/cdn.io/raw/master/image/20190326-12.png ><p>得到代码如下，删除了后面两部分，似乎是关于多语言配置的：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">soapenv:Envelope</span> <span class="attr">xmlns:soapenv</span>=<span class="string">&quot;http://schemas.xmlsoap.org/soap/envelope/&quot;</span> <span class="attr">xmlns:zl</span>=<span class="string">&quot;http://xmlns.oracle.com/Enterprise/Tools/schemas/ZL_REQ_MESAG.V1&quot;</span>&gt;</span></span><br><span class="line"> <span class="comment">&lt;!-- 修改头部信息--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">soapenv:Header</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">wsse:Security</span> <span class="attr">soap:mustUnderstand</span>=<span class="string">&quot;1&quot;</span> <span class="attr">xmlns:soap</span>=<span class="string">&quot;http://schemas.xmlsoap.org/wsdl/soap/&quot;</span> <span class="attr">xmlns:wsse</span>=<span class="string">&quot;http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd&quot;</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">wsse:UsernameToken</span> <span class="attr">wsu:Id</span>=<span class="string">&quot;UsernameToken-1&quot;</span> <span class="attr">xmlns:wsu</span>=<span class="string">&quot;http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd&quot;</span>&gt;</span></span><br><span class="line">         <span class="comment">&lt;!-- 这里是用户ID和密码，如果该用户没有改服务操作的权限，会报错：该用户未经授权无法调用服务操作 ZL_ORDER_SRV。--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">wsse:Username</span>&gt;</span>PS<span class="tag">&lt;/<span class="name">wsse:Username</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">wsse:Password</span> <span class="attr">Type</span>=<span class="string">&quot;http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText&quot;</span>&gt;</span>Abcd!234<span class="tag">&lt;/<span class="name">wsse:Password</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;/<span class="name">wsse:UsernameToken</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">wsse:Security</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">soapenv:Header</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">   <span class="tag">&lt;<span class="name">soapenv:Body</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">zl:ZL_REQ_MESAG</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">zl:FieldTypes</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--You may enter the following 3 items in any order--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">zl:ZL_ORDER_HEL</span> <span class="attr">class</span>=<span class="string">&quot;R&quot;</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">zl:ZL_ORDERID</span> <span class="attr">type</span>=<span class="string">&quot;CHAR&quot;</span>/&gt;</span></span><br><span class="line">               <span class="comment">&lt;!--Optional:--&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">zl:ZL_ORDER_TEXT</span> <span class="attr">type</span>=<span class="string">&quot;CHAR&quot;</span>/&gt;</span></span><br><span class="line">               <span class="comment">&lt;!--Optional:--&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">zl:ZL_ORDERDESC</span> <span class="attr">type</span>=<span class="string">&quot;CHAR&quot;</span>/&gt;</span></span><br><span class="line">               <span class="comment">&lt;!--Optional:--&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">zl:ZL_ORDER_SUMMON</span> <span class="attr">type</span>=<span class="string">&quot;NUMBER&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">zl:ZL_ORDER_HEL</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">zl:ZL_ORDER_DET</span> <span class="attr">class</span>=<span class="string">&quot;R&quot;</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">zl:ZL_ORDER_SUBID</span> <span class="attr">type</span>=<span class="string">&quot;CHAR&quot;</span>/&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">zl:ZL_ORDERID</span> <span class="attr">type</span>=<span class="string">&quot;CHAR&quot;</span>/&gt;</span></span><br><span class="line">               <span class="comment">&lt;!--Optional:--&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">zl:ZL_ORDER_SUBTYPE</span> <span class="attr">type</span>=<span class="string">&quot;CHAR&quot;</span>/&gt;</span></span><br><span class="line">               <span class="comment">&lt;!--Optional:--&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">zl:ZL_ORDER_SUBDESC</span> <span class="attr">type</span>=<span class="string">&quot;CHAR&quot;</span>/&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">zl:ZL_ORDERQUAN</span> <span class="attr">type</span>=<span class="string">&quot;NUMBER&quot;</span>/&gt;</span></span><br><span class="line">               <span class="comment">&lt;!--Optional:--&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">zl:ZL_ORDERPRI</span> <span class="attr">type</span>=<span class="string">&quot;NUMBER&quot;</span>/&gt;</span></span><br><span class="line">               <span class="comment">&lt;!--Optional:--&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">zl:ZL_ORDERMON</span> <span class="attr">type</span>=<span class="string">&quot;NUMBER&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">zl:ZL_ORDER_DET</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">zl:PSCAMA</span> <span class="attr">class</span>=<span class="string">&quot;R&quot;</span>&gt;</span></span><br><span class="line">               <span class="comment">&lt;!--Optional:--&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">zl:LANGUAGE_CD</span> <span class="attr">type</span>=<span class="string">&quot;CHAR&quot;</span>/&gt;</span></span><br><span class="line">               <span class="comment">&lt;!--Optional:--&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">zl:AUDIT_ACTN</span> <span class="attr">type</span>=<span class="string">&quot;CHAR&quot;</span>/&gt;</span></span><br><span class="line">               <span class="comment">&lt;!--Optional:--&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">zl:BASE_LANGUAGE_CD</span> <span class="attr">type</span>=<span class="string">&quot;CHAR&quot;</span>/&gt;</span></span><br><span class="line">               <span class="comment">&lt;!--Optional:--&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">zl:MSG_SEQ_FLG</span> <span class="attr">type</span>=<span class="string">&quot;CHAR&quot;</span>/&gt;</span></span><br><span class="line">               <span class="comment">&lt;!--Optional:--&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">zl:PROCESS_INSTANCE</span> <span class="attr">type</span>=<span class="string">&quot;NUMBER&quot;</span>/&gt;</span></span><br><span class="line">               <span class="comment">&lt;!--Optional:--&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">zl:PUBLISH_RULE_ID</span> <span class="attr">type</span>=<span class="string">&quot;CHAR&quot;</span>/&gt;</span></span><br><span class="line">               <span class="comment">&lt;!--Optional:--&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">zl:MSGNODENAME</span> <span class="attr">type</span>=<span class="string">&quot;CHAR&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">zl:PSCAMA</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;/<span class="name">zl:FieldTypes</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">zl:MsgData</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--Zero or more repetitions:--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">zl:Transaction</span>&gt;</span></span><br><span class="line">               <span class="comment">&lt;!--You may enter the following 2 items in any order--&gt;</span></span><br><span class="line">               <span class="comment">&lt;!--Optional:--&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">zl:ZL_ORDER_HEL</span> <span class="attr">class</span>=<span class="string">&quot;R&quot;</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">zl:ZL_ORDERID</span> <span class="attr">IsChanged</span>=<span class="string">&quot;Y&quot;</span>&gt;</span>1001<span class="tag">&lt;/<span class="name">zl:ZL_ORDERID</span>&gt;</span></span><br><span class="line">                  <span class="comment">&lt;!--Optional:--&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">zl:ZL_ORDER_TEXT</span> <span class="attr">IsChanged</span>=<span class="string">&quot;Y&quot;</span>&gt;</span>测试<span class="tag">&lt;/<span class="name">zl:ZL_ORDER_TEXT</span>&gt;</span></span><br><span class="line">                  <span class="comment">&lt;!--Optional:--&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">zl:ZL_ORDERDESC</span> <span class="attr">IsChanged</span>=<span class="string">&quot;Y&quot;</span>&gt;</span>2018年采购<span class="tag">&lt;/<span class="name">zl:ZL_ORDERDESC</span>&gt;</span></span><br><span class="line">                  <span class="comment">&lt;!--Optional:--&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">zl:ZL_ORDER_SUMMON</span> <span class="attr">IsChanged</span>=<span class="string">&quot;Y&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">zl:ZL_ORDER_SUMMON</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">zl:ZL_ORDER_DET</span> <span class="attr">class</span>=<span class="string">&quot;R&quot;</span>&gt;</span></span><br><span class="line">                     <span class="tag">&lt;<span class="name">zl:ZL_ORDER_SUBID</span> <span class="attr">IsChanged</span>=<span class="string">&quot;Y&quot;</span>&gt;</span>1<span class="tag">&lt;/<span class="name">zl:ZL_ORDER_SUBID</span>&gt;</span></span><br><span class="line">                     <span class="tag">&lt;<span class="name">zl:ZL_ORDERID</span> <span class="attr">IsChanged</span>=<span class="string">&quot;Y&quot;</span>&gt;</span>1<span class="tag">&lt;/<span class="name">zl:ZL_ORDERID</span>&gt;</span></span><br><span class="line">                     <span class="comment">&lt;!--Optional:--&gt;</span></span><br><span class="line">                     <span class="tag">&lt;<span class="name">zl:ZL_ORDER_SUBTYPE</span> <span class="attr">IsChanged</span>=<span class="string">&quot;Y&quot;</span>&gt;</span>p<span class="tag">&lt;/<span class="name">zl:ZL_ORDER_SUBTYPE</span>&gt;</span></span><br><span class="line">                     <span class="comment">&lt;!--Optional:--&gt;</span></span><br><span class="line">                     <span class="tag">&lt;<span class="name">zl:ZL_ORDER_SUBDESC</span> <span class="attr">IsChanged</span>=<span class="string">&quot;Y&quot;</span>&gt;</span>垃圾采购<span class="tag">&lt;/<span class="name">zl:ZL_ORDER_SUBDESC</span>&gt;</span></span><br><span class="line">                     <span class="tag">&lt;<span class="name">zl:ZL_ORDERQUAN</span> <span class="attr">IsChanged</span>=<span class="string">&quot;Y&quot;</span>&gt;</span>10<span class="tag">&lt;/<span class="name">zl:ZL_ORDERQUAN</span>&gt;</span></span><br><span class="line">                     <span class="comment">&lt;!--Optional:--&gt;</span></span><br><span class="line">                     <span class="tag">&lt;<span class="name">zl:ZL_ORDERPRI</span> <span class="attr">IsChanged</span>=<span class="string">&quot;Y&quot;</span>&gt;</span>10.23<span class="tag">&lt;/<span class="name">zl:ZL_ORDERPRI</span>&gt;</span></span><br><span class="line">                     <span class="comment">&lt;!--Optional:--&gt;</span></span><br><span class="line">                     <span class="tag">&lt;<span class="name">zl:ZL_ORDERMON</span> <span class="attr">IsChanged</span>=<span class="string">&quot;Y&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">zl:ZL_ORDERMON</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;/<span class="name">zl:ZL_ORDER_DET</span>&gt;</span></span><br><span class="line">           </span><br><span class="line">               <span class="tag">&lt;/<span class="name">zl:ZL_ORDER_HEL</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">zl:Transaction</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;/<span class="name">zl:MsgData</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">zl:ZL_REQ_MESAG</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">soapenv:Body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">soapenv:Envelope</span>&gt;</span></span><br></pre></td></tr></table></figure><p>点击左上角运行，右边出现如下代码：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">soapenv:Envelope</span> <span class="attr">xmlns:soapenv</span>=<span class="string">&quot;http://schemas.xmlsoap.org/soap/envelope/&quot;</span> <span class="attr">xmlns:soapenc</span>=<span class="string">&quot;http://schemas.xmlsoap.org/soap/encoding/&quot;</span> <span class="attr">xmlns:xsd</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema&quot;</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">soapenv:Body</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">ZL_RESP_MESAGE</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://peoplesoft.com/ZL_RESP_MESAGEResponse&quot;</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">FieldTypes</span>&gt;</span></span><br><span class="line">             </span><br><span class="line">            <span class="tag">&lt;<span class="name">ZL_INT_ORD_RST</span> <span class="attr">class</span>=<span class="string">&quot;R&quot;</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">ZL_ORDERID</span> <span class="attr">type</span>=<span class="string">&quot;CHAR&quot;</span>/&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">MESSAGE_TEXT</span> <span class="attr">type</span>=<span class="string">&quot;CHAR&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">ZL_INT_ORD_RST</span>&gt;</span></span><br><span class="line">             </span><br><span class="line">            <span class="tag">&lt;<span class="name">PSCAMA</span> <span class="attr">class</span>=<span class="string">&quot;R&quot;</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">LANGUAGE_CD</span> <span class="attr">type</span>=<span class="string">&quot;CHAR&quot;</span>/&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">AUDIT_ACTN</span> <span class="attr">type</span>=<span class="string">&quot;CHAR&quot;</span>/&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">BASE_LANGUAGE_CD</span> <span class="attr">type</span>=<span class="string">&quot;CHAR&quot;</span>/&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">MSG_SEQ_FLG</span> <span class="attr">type</span>=<span class="string">&quot;CHAR&quot;</span>/&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">PROCESS_INSTANCE</span> <span class="attr">type</span>=<span class="string">&quot;NUMBER&quot;</span>/&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">PUBLISH_RULE_ID</span> <span class="attr">type</span>=<span class="string">&quot;CHAR&quot;</span>/&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">MSGNODENAME</span> <span class="attr">type</span>=<span class="string">&quot;CHAR&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">PSCAMA</span>&gt;</span></span><br><span class="line">             </span><br><span class="line">         <span class="tag">&lt;/<span class="name">FieldTypes</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">MsgData</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">Transaction</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">ZL_INT_ORD_RST</span> <span class="attr">class</span>=<span class="string">&quot;R&quot;</span>&gt;</span></span><br><span class="line">                   <span class="comment">&lt;!-- 输出返回的响应消息表中对应的数据 --&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">ZL_ORDERID</span> <span class="attr">IsChanged</span>=<span class="string">&quot;Y&quot;</span>&gt;</span>1001<span class="tag">&lt;/<span class="name">ZL_ORDERID</span>&gt;</span></span><br><span class="line">                  <span class="comment">&lt;!-- 此处表示成功通过订单接口同步数据 --&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">MESSAGE_TEXT</span> <span class="attr">IsChanged</span>=<span class="string">&quot;Y&quot;</span>&gt;</span>订单接口数据同步成功。<span class="tag">&lt;/<span class="name">MESSAGE_TEXT</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;/<span class="name">ZL_INT_ORD_RST</span>&gt;</span></span><br><span class="line">                </span><br><span class="line">               <span class="tag">&lt;<span class="name">PSCAMA</span> <span class="attr">class</span>=<span class="string">&quot;R&quot;</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">LANGUAGE_CD</span>&gt;</span>ZHS<span class="tag">&lt;/<span class="name">LANGUAGE_CD</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">AUDIT_ACTN</span>/&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">BASE_LANGUAGE_CD</span>&gt;</span>ZHS<span class="tag">&lt;/<span class="name">BASE_LANGUAGE_CD</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">MSG_SEQ_FLG</span>/&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">PROCESS_INSTANCE</span>&gt;</span>0<span class="tag">&lt;/<span class="name">PROCESS_INSTANCE</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">PUBLISH_RULE_ID</span>/&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">MSGNODENAME</span>/&gt;</span></span><br><span class="line">               <span class="tag">&lt;/<span class="name">PSCAMA</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">Transaction</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;/<span class="name">MsgData</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">ZL_RESP_MESAGE</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">soapenv:Body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">soapenv:Envelope</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>思考：</strong></p><p><strong>1、为什么当点击两次运行时，会出现插入失败，即自定义在fieldformula中的函数运行失败了？</strong></p><p>​    这里和订单录入系统函数代码虽然是一样的，最终都是执行的save操作，但区别是：订单录入系统的save是执行的updatedata操作（覆盖操作），这里的save是执行create操作（新建，orderID是唯一的），所以，一个可以成功覆盖，另一个不能成功创建插入。还有一个是update操作，ID可以相同，但是子序列必须不同。</p><p><strong>2、header中的配置从哪里获得的？</strong></p><p>​    每个系统特有的，会给。</p>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PeopleSoft </tag>
            
            <tag> Component Interface </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PeopleSoft-开发入门</title>
      <link href="2019/03/25/PeopleSoft-%E5%BC%80%E5%8F%91%E5%85%A5%E9%97%A8/"/>
      <url>2019/03/25/PeopleSoft-%E5%BC%80%E5%8F%91%E5%85%A5%E9%97%A8/</url>
      
        <content type="html"><![CDATA[<p>​    第一次接触到Peoplesoft这款系统，以下是最基础的使用Application Designer 工具创建一个Demo基本过程和一些注意事项。</p><a id="more"></a><h3 id="Demo创建流程：Field-—-gt-Record—-gt-Page—-gt-Component—-gt-menu"><a href="#Demo创建流程：Field-—-gt-Record—-gt-Page—-gt-Component—-gt-menu" class="headerlink" title="Demo创建流程：Field —&gt; Record—&gt;Page—&gt;Component—&gt;menu"></a>Demo创建流程：Field —&gt; Record—&gt;Page—&gt;Component—&gt;menu</h3><h3 id="详细步骤："><a href="#详细步骤：" class="headerlink" title="详细步骤："></a>详细步骤：</h3><p>一、首先思考，观察业务需求，分析level层级以及每个层级中的Field的个数以及分布情况。</p><p>二、根据每个字段的特点，新建所有的fields。<u>每一个field做好注释</u>。</p><ul><li>ID：10 Character</li><li>描述：100 Character</li><li>价格：6 signed Number  小数点后两位</li><li>数量：6 Number   小数点后两位</li><li>总价：12 signed Number   </li><li><strong>注意：</strong>translate类型，一定不能超过3个字符长度，否则无法设置其value值，同时translate Value的值，记得要一个个的添加。（不添加的话，没有值）。</li></ul><p>三、建两个record，将建好的fields根据层级分别放入两个record中，并对fields进行设置，<u>做好每一个record的注释</u>。</p><ul><li><strong>订单编号：</strong>勾选<strong>key</strong>，<strong>search key</strong>（出现在搜索栏的选择项）（自动勾选<strong>List Box Item</strong>：出现在搜索结果的列表里），并且在Edits中勾选<strong>required</strong>，<strong>表示这个field是必填项</strong>（即字段前面带*的输入框，无值的话会报错）。</li><li><strong>订单子序号：</strong>勾选key ，search key，勾选required。注意：translate field，在edits中必须将它的Edit Type —&gt;Table Edit —&gt;Type :Translate Table Edit **，否则在保存page页面的时候，会报该field字段无效的错误。</li><li><strong>注意：</strong>这里有个orderid，这个id勾选key，search key ，list box item 就好了，不需要勾选required。它与subid两个field组成一个key。</li><li>保存为HRAPP类型。</li><li><strong>重中之重：<u>必须要build这两个record！！！否则，数据库中没有表，程序会报sql错误</u>。</strong></li></ul><p>四、新建一个page页面，将建好的 fileds 和 records 合理布置到页面中，<u>做好page的注释</u>。</p><ul><li><strong>page页面大小设置：</strong>page properties—&gt; page size设置为：custom size（自定义）。</li><li><strong>0层的record设置：</strong>将0层的fields拖进页面中布局，双击field，设置Size为custom（用户自定拉伸），label—&gt;Alignment设置为Left（左对齐），规范：各field名字左对齐，输入框左对齐。</li><li><strong>1层的grid设置：</strong>插入一个Grid表格，再将1层record拖进该Grid。在General中，设置Occurs count 为合适的个数（一页数据展示的个数），在Label中勾选Display Title，显示该Grid 的名字，并点击Properties修改显示的名字。在body Area中取消show border 的勾选，会好看些，并勾选show Grid lines，显示线条。在Use中取消allow deferred processor的选项的勾选（为了后面的自动计算金额做准备，如果勾选了，会延缓processor ，即我们写在peoplecode的代码）。</li><li><strong>Grid中下拉框设置：</strong>删掉translate字段，点击工具类的Drop Down List box，添加到Grid中，在order中调节它的位置，并双击设置对应的translate field name。</li></ul><p>五、新建一个component组件，添加page，<strong>写好组件注释</strong>。检查component的Structure层级结构是否有误。</p><ul><li>**修改search record :**page—&gt;component Properties—&gt;search record，设置为最高层级的record，在这里是ZL_ORDER_HEL，那么搜索就是根据这个record中的设置了key 的field来进行筛选的。</li><li><strong>修改item label 中的值：</strong>此值为组件<strong>详情页</strong>中页面左上角显示的值。</li></ul><p>六、注册组件 register component。</p><ul><li>在menu菜单中修改<strong>首页</strong>中页面左上角的显示名字。</li><li>选择文件夹名。</li><li>在注册过程中，修改内容参考名、内容参考标签和详细描述：设置为想要显示的。（这里后面可以通过在软件中的门户网站—&gt;内容与结构中对其进行修改设置）</li><li>填写序号。</li><li>勾选使用默认本地节点。</li><li>添加到项目勾选三项：菜单、注册表条目、许可权列表。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PeopleSoft </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Spring-归纳总结</title>
      <link href="2018/10/31/Spring-%E5%BD%92%E7%BA%B3%E6%80%BB%E7%BB%93/"/>
      <url>2018/10/31/Spring-%E5%BD%92%E7%BA%B3%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>&emsp;&emsp;如果说一个程序员必须学习的框架，那么就是Spring无疑了，Spring是一个开放源代码的设计层面框架，解决的是业务逻辑层和其他各层的松耦合问题，因此它将面向接口的编程思想贯穿整个系统应用。</p><h2 id="Spring的一些概念和思想"><a href="#Spring的一些概念和思想" class="headerlink" title="Spring的一些概念和思想"></a>Spring的一些概念和思想</h2><h3 id="Spring的核心：-AOP-、IOC"><a href="#Spring的核心：-AOP-、IOC" class="headerlink" title="Spring的核心： AOP 、IOC"></a>Spring的核心： AOP 、IOC</h3><p>&emsp;&emsp;简单点说，就是把对象交给Spring进行管理，通过面向切面编程来实现一些”模板式”的操作，使得程序员解放出来，可以更加关注业务实现。</p><p>&emsp;&emsp;Spring已经是一站式的开源框架解决方案，而且形成了Spring生态。</p><a id="more"></a><h2 id="关于IOC"><a href="#关于IOC" class="headerlink" title="关于IOC"></a>关于IOC</h2><p>&emsp;&emsp;IOC，从操作上来看，要么通过XML配置实现，要么通过注解的方式实现。在实际开发中，越来越流行注解的方式。</p><p>&emsp;&emsp;<strong>需要根据你使用到的功能，来进行依赖的引入，以及XML的Schema约束引用。</strong></p><p>&emsp;&emsp;Spring的核心配置文件，名称和位置不固定，不过在实际开发中，一般指定为applicationContext-xxx.xml的方式。这种方式，有2个好处：第一，可以对Spring的配置文件进行分模块管理；第二，由于统一的前缀，方便正则加载这些配置文件。</p><img src=https://gitee.com/gek7777/cdn.io/raw/master/image/spring%E6%A1%86%E6%9E%B6%E5%9B%BE.jpg ><h3 id="基于XML方式的bean创建以及注入"><a href="#基于XML方式的bean创建以及注入" class="headerlink" title="基于XML方式的bean创建以及注入"></a>基于XML方式的bean创建以及注入</h3><blockquote><p>&emsp;&emsp;直接通过来进行，这样的前提是该类存在无参数的构造方法（背后的原理就是通过反射实例化的）。这种方式是实际中最常使用的，当然，除此之外还存在静态工厂、实例工厂的方式创建。</p><p>&emsp;&emsp;另外一点还需要注意的是：bean是单例的，还是多例的？</p><p><strong>bean标签中存在scope属性用于说明：</strong></p><ul><li><strong>singleton：</strong>单例，default</li><li><strong>prototype：</strong>多例</li><li>request/session等。</li></ul><p>bean的XML创建是通过反射进行，那么bean的属性注入，是如何进行的呢？</p><ul><li><p>可以在构造bean的时候，提供有参数的构造方法进行设置；</p></li><li><p>可以在提供setter方法，进行设置；（最常用）</p></li><li><p>什么接口注入，什么P名称空间注入，这些实际都不用……</p></li></ul><p>&emsp;&emsp;要么利用value直接给出属性值，要么通过ref引用另一个bean。</p></blockquote><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;bean id=<span class="string">&quot;&quot;</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;&quot;</span>&gt;</span><br><span class="line">&lt;property name=<span class="string">&quot;&quot;</span> value=<span class="string">&quot;&quot;</span>&gt; 或者&lt;property name=<span class="string">&quot;&quot;</span> ref=<span class="string">&quot;&quot;</span>&gt;</span><br><span class="line">&lt;/bean&gt;</span><br></pre></td></tr></table></figure><h3 id="基于注解方式的bean创建以及注入"><a href="#基于注解方式的bean创建以及注入" class="headerlink" title="基于注解方式的bean创建以及注入"></a>基于注解方式的bean创建以及注入</h3><blockquote><p>&emsp;&emsp;因为Spring注解的实现是需要AOP的支持，因此在依赖方面需要注意，其次，要在XML中开启注解扫描：</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">&quot;&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>&emsp;&emsp;实际上这个配置，会让Spring在指定包下扫描，把带有注解标志的bean实例化，并且会进行属性注入。</p><p><strong>创建对象的4个注解：</strong> <strong>@Component/@Controller/@Service/@Repository</strong><br>&emsp;&emsp;在这4个注解上，通过value属性来指定bean的id，通过@scope配合来声明单例OR多例。（目前这4个注解功能是一样的，只是为了让标注类的用途更加清晰，而且Spring留了一手，以后说不定会增强功能呢？）</p><p><strong>如何注入属性？</strong> <strong>@Autowired/@Resource/@Qualifier</strong><br>&emsp;&emsp;需要注意的是@Resource是javax包下的，说白了就是J2EE提供的；而@Autowired是Spring提供的。（不必提供setter方法）<br>&emsp;&emsp;@Resource默认按照名称注入，如果找不到才按照类型注入。<br>&emsp;&emsp;@Autowired默认按照类型注入，可以结合@Qualifier进行名称注入。</p><p><strong>那么我们需要注意什么呢？</strong></p><p>&emsp;&emsp;如果@Autowired进行类型注入，很可能类型会有多个满足（多态），那么到底注入&gt;哪个呢？所以说，如果按照@Autowired类型注入，一定注意这点，结合@Qualifier。实际开发中，&gt;显然，注入应该是确定的，那么按照名称注入，应该是首选！</p></blockquote><h3 id="IOC-and-DI"><a href="#IOC-and-DI" class="headerlink" title="IOC and DI"></a>IOC and DI</h3><blockquote><p>IOC，控制反转；DI，依赖注入；</p><p>&emsp;&emsp;只有把对象交给Spring，才能由Spring帮助完成属性设置；因此，依赖注入不能单独存在，需要在IOC基础之上完成操作。</p></blockquote><h2 id="关于AOP"><a href="#关于AOP" class="headerlink" title="关于AOP"></a>关于AOP</h2><p>&emsp;&emsp;AOP的实现，一种横向抽取机制，依赖于动态代理模式。</p><p><strong>关于AOP的几个重点概念：</strong></p><blockquote><ul><li><p><strong>JoinPoint：</strong>连接点，说白了，就是可以被增强的方法；</p></li><li><p><strong>PointCut：</strong>切入点，对哪些JoinPoint进行拦截；</p></li><li><p><strong>Advice：</strong>通知，就是拦截后的动作；</p></li><li><p><strong>Aspect：</strong>切面，把增强应用到具体方法的过程；</p></li></ul></blockquote><p><strong>Spring的AOP需要借助aspectj来实现，可以通过XML，也可以通过注解来完成。</strong></p><blockquote><p>&emsp;&emsp;比如，采用XML方式的话，需要指明用A类的哪个方法对B类的哪些方法上进行增强，这里就涉及到execution表达式了。</p><p>&emsp;&emsp;比如，采用注解方式的话，就更加简单了，先在XML中开启AOP（），然后在增强方法上直接使用类似@Before(value=”execution(具体的表达式)”)即可；<br>其实，在实际开发中，我们对于AOP最常用的就是事务了。</p></blockquote><p><strong>Spring的事务管理</strong></p><blockquote><p>&emsp;&emsp;Spring的声明式事务管理，用的最多的就是基于注解的方式。首先我们得配置一个事务管理器，而事务管理器需要我们注入DataSource（DBCP,c3p0等连接池），这一点好理解，因为是DB的事务。要知道，Spring对不同的DAO层框架（Spring JDBC/MyBatis/Hibernate…）提供了不同的事务实现类。</p><p>&emsp;&emsp;对于多个数据源，当然，我们需要定义多个事务管理器，同时也得开启事务注解。</p><p>&emsp;&emsp;多个事务管理器，可以通过qualifier属性进行区分。</p><p>&emsp;&emsp;配置完毕后，直接在service层的类或者方法上，使用<br>@Transactional(value = “gcs”, rollbackFor = Exception.class)</p></blockquote><h2 id="Spring-与-web-整合的原理"><a href="#Spring-与-web-整合的原理" class="headerlink" title="Spring 与 web 整合的原理"></a>Spring 与 web 整合的原理</h2><blockquote><p>&emsp;&emsp;从操作上来讲，就是在web.xml中去配置一个监听器，然后指定Spring的配置文件即可。每一个WEB项目，都存在一个ServletContext对象，而我们配置的监听器就是对它进行监听，监听器会加载Spring的配置文件，把创建的对象放到ServletContext域（也就是setAttribute方法），获取对象的时候直接getAttribute即可！</p></blockquote><p>这就是大概的web总结，只是一些大概的概念，并不深究其中的细节部分。</p>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> spring </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>搭建SSM项目练习</title>
      <link href="2018/10/27/%E6%90%AD%E5%BB%BASSM%E9%A1%B9%E7%9B%AE%E7%BB%83%E4%B9%A0/"/>
      <url>2018/10/27/%E6%90%AD%E5%BB%BASSM%E9%A1%B9%E7%9B%AE%E7%BB%83%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<h1 id="SSM项目：Spring-SpringMVC-Mybatis"><a href="#SSM项目：Spring-SpringMVC-Mybatis" class="headerlink" title="SSM项目：Spring + SpringMVC + Mybatis"></a>SSM项目：Spring + SpringMVC + Mybatis</h1><p>&emsp;&emsp;这是一个SSM项目的搭建基本流程,主要来源于互联网。</p><h2 id="第一步：先搭建好数据库："><a href="#第一步：先搭建好数据库：" class="headerlink" title="第一步：先搭建好数据库："></a>第一步：先搭建好数据库：</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`user`</span> (</span><br><span class="line">  <span class="string">`id`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> AUTO_INCREMENT <span class="keyword">COMMENT</span> <span class="string">&#x27;用户ID&#x27;</span>,</span><br><span class="line">  <span class="string">`email`</span> <span class="built_in">varchar</span>(<span class="number">255</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">&#x27;用户邮箱&#x27;</span>,</span><br><span class="line">  <span class="string">`password`</span> <span class="built_in">varchar</span>(<span class="number">255</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">&#x27;用户密码&#x27;</span>,</span><br><span class="line">  <span class="string">`username`</span> <span class="built_in">varchar</span>(<span class="number">255</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">&#x27;用户昵称&#x27;</span>,</span><br><span class="line">  <span class="string">`role`</span> <span class="built_in">varchar</span>(<span class="number">255</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">&#x27;用户身份&#x27;</span>,</span><br><span class="line">  <span class="string">`status`</span> <span class="built_in">int</span>(<span class="number">1</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">&#x27;用户状态&#x27;</span>,</span><br><span class="line">  <span class="string">`regTime`</span> datetime <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">&#x27;注册时间&#x27;</span>,</span><br><span class="line">  <span class="string">`regIp`</span> <span class="built_in">varchar</span>(<span class="number">255</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">&#x27;注册IP&#x27;</span>,</span><br><span class="line">  PRIMARY <span class="keyword">KEY</span> (<span class="string">`id`</span>),</span><br><span class="line">  <span class="keyword">UNIQUE</span> <span class="keyword">KEY</span> <span class="string">`email`</span> (<span class="string">`email`</span>) <span class="keyword">USING</span> BTREE</span><br><span class="line">) <span class="keyword">ENGINE</span>=<span class="keyword">InnoDB</span> AUTO_INCREMENT=<span class="number">2</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8;</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="第二步、按项目结构图，在IDEA中搭建项目架构："><a href="#第二步、按项目结构图，在IDEA中搭建项目架构：" class="headerlink" title="第二步、按项目结构图，在IDEA中搭建项目架构："></a>第二步、按项目结构图，在IDEA中搭建项目架构：</h2><img src=https://gitee.com/gek7777/cdn.io/raw/master/image/%E9%A1%B9%E7%9B%AE%E7%BB%93%E6%9E%84%E5%9B%BE.jpg ><h2 id="第三步、配置其中的各个文件，倒序配置，先配置web-xml文件。"><a href="#第三步、配置其中的各个文件，倒序配置，先配置web-xml文件。" class="headerlink" title="第三步、配置其中的各个文件，倒序配置，先配置web.xml文件。"></a>第三步、配置其中的各个文件，倒序配置，先配置web.xml文件。</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">web-app</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://xmlns.jcp.org/xml/ns/javaee&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">version</span>=<span class="string">&quot;3.1&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">display-name</span>&gt;</span>ChatRobot<span class="tag">&lt;/<span class="name">display-name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">description</span>&gt;</span>ChatRobot_Alpha_0.0.1<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- 编码过滤器 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">filter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>encodingFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>org.springframework.web.filter.CharacterEncodingFilter<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>encoding<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>encodingFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- 配置DispatcherServlet --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>SpringMVC<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>org.springframework.web.servlet.DispatcherServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 配置springMVC需要加载的配置文件--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>contextConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>classpath:spring-*.xml<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">load-on-startup</span>&gt;</span>1<span class="tag">&lt;/<span class="name">load-on-startup</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">async-supported</span>&gt;</span>true<span class="tag">&lt;/<span class="name">async-supported</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>SpringMVC<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 匹配所有请求，此处也可以配置成 *.do 形式 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">welcome-file-list</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">welcome-file</span>&gt;</span>index.html<span class="tag">&lt;/<span class="name">welcome-file</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">welcome-file</span>&gt;</span>index.jsp<span class="tag">&lt;/<span class="name">welcome-file</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">welcome-file-list</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="然后配置spring-mybatis-xml文件"><a href="#然后配置spring-mybatis-xml文件" class="headerlink" title="然后配置spring-mybatis.xml文件"></a>然后配置spring-mybatis.xml文件</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">&quot;http://www.springframework.org/schema/context&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:tx</span>=<span class="string">&quot;http://www.springframework.org/schema/tx&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/context</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/context/spring-context.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/tx</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/tx/spring-tx.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 配置数据库相关参数properties的属性：$&#123;url&#125; --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:property-placeholder</span> <span class="attr">location</span>=<span class="string">&quot;classpath:jdbc.properties&quot;</span>/&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">&lt;!-- 数据库连接池 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;dataSource&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.mchange.v2.c3p0.ComboPooledDataSource&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driverClass&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.driver&#125;&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;jdbcUrl&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.url&#125;&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;user&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.username&#125;&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.password&#125;&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;maxPoolSize&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;c3p0.maxPoolSize&#125;&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;minPoolSize&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;c3p0.minPoolSize&#125;&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;autoCommitOnClose&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;c3p0.autoCommitOnClose&#125;&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;checkoutTimeout&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;c3p0.checkoutTimeout&#125;&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;acquireRetryAttempts&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;c3p0.acquireRetryAttempts&#125;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">&lt;!-- 配置SqlSessionFactory对象 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;sqlSessionFactory&quot;</span> <span class="attr">class</span>=<span class="string">&quot;org.mybatis.spring.SqlSessionFactoryBean&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 注入数据库连接池 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;dataSource&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;dataSource&quot;</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 扫描model包 使用别名 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;typeAliasesPackage&quot;</span> <span class="attr">value</span>=<span class="string">&quot;com.MySSM.model&quot;</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 扫描sql配置文件:mapper需要的xml文件 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;mapperLocations&quot;</span> <span class="attr">value</span>=<span class="string">&quot;classpath:mapper/IUserDao.xml&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">&lt;!-- 配置扫描Dao接口包，动态实现Dao接口，注入到spring容器中 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.mybatis.spring.mapper.MapperScannerConfigurer&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 注入sqlSessionFactory --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;sqlSessionFactoryBeanName&quot;</span> <span class="attr">value</span>=<span class="string">&quot;sqlSessionFactory&quot;</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 给出需要扫描Dao接口包 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;basePackage&quot;</span> <span class="attr">value</span>=<span class="string">&quot;com.MySSM.dao&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">&lt;!-- 配置事务管理器 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;transactionManager&quot;</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.jdbc.datasource.DataSourceTransactionManager&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 注入数据库连接池 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;dataSource&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;dataSource&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">&lt;!-- 配置基于注解的声明式事务 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tx:annotation-driven</span> <span class="attr">transaction-manager</span>=<span class="string">&quot;transactionManager&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="配置spring-mvc-xml文件"><a href="#配置spring-mvc-xml文件" class="headerlink" title="配置spring-mvc.xml文件"></a>配置spring-mvc.xml文件</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">&quot;http://www.springframework.org/schema/context&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:mvc</span>=<span class="string">&quot;http://www.springframework.org/schema/mvc&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/context</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/context/spring-context.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/mvc</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 扫描web相关的bean --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">&quot;com.MySSM.*&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 开启SpringMVC注解模式 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mvc:annotation-driven</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 静态资源默认servlet配置 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mvc:default-servlet-handler</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 配置jsp 显示ViewResolver --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.web.servlet.view.InternalResourceViewResolver&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;viewClass&quot;</span> <span class="attr">value</span>=<span class="string">&quot;org.springframework.web.servlet.view.JstlView&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;prefix&quot;</span> <span class="attr">value</span>=<span class="string">&quot;/WEB-INF/views/&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;suffix&quot;</span> <span class="attr">value</span>=<span class="string">&quot;.jsp&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="配置logback-xml文件"><a href="#配置logback-xml文件" class="headerlink" title="配置logback.xml文件"></a>配置logback.xml文件</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span> <span class="attr">debug</span>=<span class="string">&quot;true&quot;</span>&gt;</span></span><br><span class="line">​    <span class="tag">&lt;<span class="name">appender</span> <span class="attr">name</span>=<span class="string">&quot;STDOUT&quot;</span> <span class="attr">class</span>=<span class="string">&quot;ch.qos.logback.core.ConsoleAppender&quot;</span>&gt;</span></span><br><span class="line">​        <span class="tag">&lt;<span class="name">encoder</span>&gt;</span></span><br><span class="line">​            <span class="tag">&lt;<span class="name">pattern</span>&gt;</span>%d&#123;HH:mm:ss.SSS&#125; [%thread] %-5level %logger&#123;36&#125; - %msg%n<span class="tag">&lt;/<span class="name">pattern</span>&gt;</span></span><br><span class="line">​        <span class="tag">&lt;/<span class="name">encoder</span>&gt;</span></span><br><span class="line">​    <span class="tag">&lt;/<span class="name">appender</span>&gt;</span></span><br><span class="line">​    <span class="tag">&lt;<span class="name">root</span> <span class="attr">level</span>=<span class="string">&quot;debug&quot;</span>&gt;</span></span><br><span class="line">​        <span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">&quot;STDOUT&quot;</span>/&gt;</span></span><br><span class="line">​    <span class="tag">&lt;/<span class="name">root</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="配置jdbc-properties文件"><a href="#配置jdbc-properties文件" class="headerlink" title="配置jdbc.properties文件"></a>配置jdbc.properties文件</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">jdbc.driver&#x3D;com.mysql.jdbc.Driver</span><br><span class="line">#数据库地址</span><br><span class="line">jdbc.url&#x3D;jdbc:mysql:&#x2F;&#x2F;localhost:3306&#x2F;myssm #url根据实际情况填写</span><br><span class="line">#用户名</span><br><span class="line">jdbc.username&#x3D;root</span><br><span class="line">#密码</span><br><span class="line">jdbc.password&#x3D;12345</span><br><span class="line">#最大连接数</span><br><span class="line">c3p0.maxPoolSize&#x3D;30</span><br><span class="line">#最小连接数</span><br><span class="line">c3p0.minPoolSize&#x3D;10</span><br><span class="line">#关闭连接后不自动commit</span><br><span class="line">c3p0.autoCommitOnClose&#x3D;false</span><br><span class="line">#获取连接超时时间</span><br><span class="line">c3p0.checkoutTimeout&#x3D;10000</span><br><span class="line">#当获取连接失败重试次数</span><br><span class="line">c3p0.acquireRetryAttempts&#x3D;2</span><br></pre></td></tr></table></figure><h2 id="配置mybatis的映射文件：IUserDao-xml文件"><a href="#配置mybatis的映射文件：IUserDao-xml文件" class="headerlink" title="配置mybatis的映射文件：IUserDao.xml文件"></a>配置mybatis的映射文件：IUserDao.xml文件</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span> <span class="meta-string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;com.MySSM.dao.IUserDao&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;selectUser&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;User&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;long&quot;</span>&gt;</span></span><br><span class="line">SELECT * FROM user WHERE id = #&#123;id&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="IUserService接口代码："><a href="#IUserService接口代码：" class="headerlink" title="IUserService接口代码："></a>IUserService接口代码：</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.MySSM.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.MySSM.model.User;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">IUserService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> User <span class="title">selectUser</span><span class="params">(<span class="keyword">long</span> userId)</span></span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="UserServiceImpl-实现类代码："><a href="#UserServiceImpl-实现类代码：" class="headerlink" title="UserServiceImpl 实现类代码："></a>UserServiceImpl 实现类代码：</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.MySSM.service.impl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.MySSM.dao.IUserDao;</span><br><span class="line"><span class="keyword">import</span> com.MySSM.model.User;</span><br><span class="line"><span class="keyword">import</span> com.MySSM.service.IUserService;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.annotation.Resource;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Service(&quot;userService&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserServiceImpl</span> <span class="keyword">implements</span> <span class="title">IUserService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> IUserDao userDao;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> User <span class="title">selectUser</span><span class="params">(<span class="keyword">long</span> userId)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.userDao.selectUser(userId);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="User-实体类代码："><a href="#User-实体类代码：" class="headerlink" title="User 实体类代码："></a>User 实体类代码：</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.MySSM.model;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">long</span> id;</span><br><span class="line">    <span class="keyword">private</span> String email;</span><br><span class="line">    <span class="keyword">private</span> String password;</span><br><span class="line">    <span class="keyword">private</span> String username;</span><br><span class="line">    <span class="keyword">private</span> String role;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> status;</span><br><span class="line">    <span class="keyword">private</span> Date regTime;</span><br><span class="line">    <span class="keyword">private</span> String regIp;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">long</span> <span class="title">getId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setId</span><span class="params">(<span class="keyword">int</span> id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getEmail</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> email;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setEmail</span><span class="params">(String email)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.email = email;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getPassword</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> password;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPassword</span><span class="params">(String password)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.password = password;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getUsername</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> username;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUsername</span><span class="params">(String username)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.username = username;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getRole</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> role;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setRole</span><span class="params">(String role)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.role = role;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getStatus</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> status;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setStatus</span><span class="params">(<span class="keyword">int</span> status)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.status = status;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> Date <span class="title">getRegTime</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> regTime;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setRegTime</span><span class="params">(Date regTime)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.regTime = regTime;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getRegIp</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> regIp;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setRegIp</span><span class="params">(String regIp)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.regIp = regIp;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="IUserDao-接口代码："><a href="#IUserDao-接口代码：" class="headerlink" title="IUserDao 接口代码："></a>IUserDao 接口代码：</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.MySSM.dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.MySSM.model.User;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">IUserDao</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function">User <span class="title">selectUser</span><span class="params">(<span class="keyword">long</span> id)</span></span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="UserController-代码："><a href="#UserController-代码：" class="headerlink" title="UserController 代码："></a>UserController 代码：</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.MySSM.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.json.Json;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.MySSM.model.User;</span><br><span class="line"><span class="keyword">import</span> com.MySSM.service.IUserService;</span><br><span class="line"><span class="keyword">import</span> com.alibaba.fastjson.JSON;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.annotation.Resource;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.PrintWriter;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/user&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> IUserService userService;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/showUser.do&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">selectUser</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        request.setCharacterEncoding(<span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line">        response.setCharacterEncoding(<span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line">        <span class="keyword">long</span> userId = Long.parseLong(request.getParameter(<span class="string">&quot;id&quot;</span>));</span><br><span class="line">        User user = <span class="keyword">this</span>.userService.selectUser(userId);</span><br><span class="line">        </span><br><span class="line">        PrintWriter out = response.getWriter();</span><br><span class="line">        String jsonString = JSON.toJSONString(user);</span><br><span class="line">    </span><br><span class="line">        <span class="keyword">if</span>(jsonString != <span class="keyword">null</span>)&#123;</span><br><span class="line">            out.write(jsonString);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            out.write(<span class="string">&quot;出错了&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        out.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="index-jsp测试页面代码："><a href="#index-jsp测试页面代码：" class="headerlink" title="index.jsp测试页面代码："></a>index.jsp测试页面代码：</h2><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">&quot;UTF-8&quot;</span>&gt;</span><br><span class="line">    &lt;title&gt;test&lt;/title&gt;</span><br><span class="line">    &lt;script type=&quot;text/javascript&quot; src=&quot;js/jquery-1.8.3.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        $(function () &#123;</span><br><span class="line">                $(<span class="string">&quot;#selectUser&quot;</span>).click(function () &#123;</span><br><span class="line">                    <span class="keyword">var</span> id = $(<span class="string">&quot;#userId&quot;</span>).val();</span><br><span class="line">                    $.ajax(&#123;</span><br><span class="line">                        method: <span class="string">&quot;post&quot;</span>,</span><br><span class="line">                        url: <span class="string">&quot;user/showUser.do&quot;</span>,</span><br><span class="line">                        data: &#123;id: id&#125;,</span><br><span class="line">                        dataType: <span class="string">&quot;json&quot;</span>,</span><br><span class="line">                        success: function (result) &#123;</span><br><span class="line">                            alert(result.username)</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;)</span><br><span class="line">                &#125;)</span><br><span class="line">            &#125;</span><br><span class="line">        )</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;p id=&quot;test&quot;&gt;Hello World!&lt;/p&gt;</span><br><span class="line">请输入id：&lt;input type=<span class="string">&quot;text&quot;</span> id=<span class="string">&quot;userId&quot;</span> value=<span class="string">&quot;1&quot;</span>&gt;</span><br><span class="line">&lt;button type=&quot;button&quot; id=&quot;selectUser&quot;&gt;这是一号&lt;/button&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;基本的搭建情况如图，完成后，将项目部署到Tomcat之后，就可以通过项目的index页面访问到数据库中的数据，并且显示到页面上。点击button按钮，获取数据，并显示。</p>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SSM </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Blog-我的第一篇博客</title>
      <link href="2018/10/24/Blog-%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/"/>
      <url>2018/10/24/Blog-%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/</url>
      
        <content type="html"><![CDATA[<h3 id="写在最前面：只是一些个人思考总结，有误处欢迎指正。"><a href="#写在最前面：只是一些个人思考总结，有误处欢迎指正。" class="headerlink" title="写在最前面：只是一些个人思考总结，有误处欢迎指正。"></a>写在最前面：只是一些个人思考总结，有误处欢迎指正。</h3><p>&emsp;&emsp;现在是2018年10月24日，我经过三天的奋斗，终于搭建好了这个简单的博客。这个博客的搭建是完全免费的。主要是用hexo博客框架，生成静态页面，然后使用git版本控制工具把新的项目版本更新到Github上，利用GitHub Pages的项目静态页面展示功能展示页面。所以，感谢Gayhub-全球最大的同性交友网站。</p><p>&emsp;&emsp;因为此博客主要是用来记录自己平时学习的东西，并且将之前学习的前端知识运用起来，所以就没有特意的增加过多花里胡哨的功能，例如：评论功能，宠物功能等，毕竟是以记录知识，提升自己为主。(自己水平有限也是一部分原因。哭)</p><a id="more"></a><blockquote><h3 id="为什么选择了学Java？Java的优点"><a href="#为什么选择了学Java？Java的优点" class="headerlink" title="为什么选择了学Java？Java的优点"></a>为什么选择了学Java？Java的优点</h3><p>以下答案引用互联网</p><ol><li>言语简练<br>&emsp;&emsp;比较C言语，JAVA言语更为简练。它经过提供根本的方法完结任务方针，所以使用JAVA你只需要理解一些根本的概念，就能够编写出合适各种情况的程序。</li><li>安全性高<br>&emsp;&emsp;Java不支持指针，全部对内存的访问都必须经过对象的实例变量来实现，这样就防止了网络环境中的病毒的入侵，一起也避免了指针操作而发生的过错。</li><li>可移植性高(非常重要)<br>&emsp;&emsp;JAVA当初的规划理念是一次编写，到处运行，因而JAVA言语在使用过程中就屏蔽掉了由平台形成的不同形成的障碍，使得JAVA程序能够方便地移植到网络上的不同机器，极大程度的进步的编程言语的可移植性。</li><li>拥有多线程处理能力<br>&emsp;&emsp;多线程机制能够使应用程序并行处理，并且同步机制能够很大程度上进步同享数据的操作正确性。经过使用多线程，程序规划者能够分别用不同的线程完结特定的行为，而不需要采用全局的事情循环机制，实现交互、实时行为。</li></ol></blockquote><p>&emsp;&emsp;从自己接触Java到现在，也已经七个月了。也曾经想过去参加培训班，但是那时候还是大三，课程还是有点紧，所以就开始了自己的自学之路。当时到B站搜索Java教程，最新的，于是从千峰教育老刘的视频入的门，然后加入了老刘的学生的群，也算是认识老刘了吧。下面是老刘的最新视频：</p><blockquote><p>千锋最新JavaSE基础，最适合初学者的视频</p><footer><strong>老刘</strong><cite><a href="https://www.bilibili.com/video/av21995605">www.bilibili.com/video/av21995605</a></cite></footer></blockquote><p>&emsp;&emsp;老刘的课，讲的很慢，我建议是用1.5倍速看，如果有其他的编程基础的话，2倍速食用更佳。但是，他讲的确实很仔细，基本上知识点都讲到了。所以，作为入门实在是合适不过了。注意：看完以后一定要自己敲一遍，笔记也是，要自己写一遍，不要以为看了就记住了。作为一个好的Coder，敲坏一把键盘，是一个java工程师的必经之路。</p><p>&emsp;&emsp;把老刘的课看完，基本上也就掌握了JavaSE、Web基础、Mysql数据库这些基础的知识。到这里，已经可以做一一些小的网站demo了。甚至可以建立自己的动态博客，不是现在这种静态的，只不过很复杂，也很繁琐。</p><p>&emsp;&emsp;那么，还需要更深层次的技术，那么就是框架了。框架的好处简单地说就是：不需要重复的造轮子。别人有的东西拿来用就好了，之前什么都需要自己造，现在可以直接用了，就很苏胡。这也是Java的封装机制的好处，我管你怎么实现呢，我拿来用先。不过，既然用别人的东西，那么你就必须遵守别人的规则，不过好在，规则几乎是统一的，毕竟大家都在用。so，Web框架部分，主要就是学习规则，例如：Spring、SpringMVC、MyBatis、Struts2、Hibernate等主流框架，每一个都自己的使用规范，那么学习它们的规范，就成了最基础的要求了。最后就是深入学习这些框架，这些可以在以后的工作中慢慢深入研究。</p><p>&emsp;&emsp;接下来Web框架的进阶学习，那就是SpringBoot、还有SpringCloud，并发编程等知识我还没有学完，以后再总结吧。以我的经验，学完上面的知识，那么找工作应该是不成问题了。(大神勿喷)</p><blockquote><h3 id="附录："><a href="#附录：" class="headerlink" title="附录："></a>附录：</h3><p>铺垫知识：《计算机网络》、《数据结构与算法》，还有一些是学习过程中接触到的工具和技术，需要自己去找资料弄清楚。</p><ul><li>git 或 SVN 版本控制工具，相对而言，更喜欢 git。</li><li>Maven 项目管理工具。</li><li>Redis 存储系统，主要是做高速缓存用的。</li><li>Linux 操作系统，了解基本的命令等。</li><li>eclipse 开源开发软件 。</li><li>IDEA 最好的Java开发工具(毕竟数据说话)。</li><li>Chrome 谷歌浏览器，最好的测试浏览器。</li><li>FireFox 火狐浏览器，感觉没有谷歌好用。</li></ul></blockquote><p>&emsp;&emsp;投资是一生的事情，永远不要放下脚步，去学习，去接触新鲜事物，做一个永远热情洋溢的Coder~~</p>]]></content>
      
      
      <categories>
          
          <category> 博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Thinking </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
